{"id":"856d75518b69149e5e08e29ef58b932f","_format":"hh-sol-build-info-1","solcVersion":"0.8.7","solcLongVersion":"0.8.7+commit.e28d00a7","input":{"language":"Solidity","sources":{"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract AutomationBase {\n  error OnlySimulatedBackend();\n\n  /**\n   * @notice method that allows it to be simulated via eth_call by checking that\n   * the sender is the zero address.\n   */\n  function preventExecution() internal view {\n    if (tx.origin != address(0)) {\n      revert OnlySimulatedBackend();\n    }\n  }\n\n  /**\n   * @notice modifier that allows it to be simulated via eth_call by checking\n   * that the sender is the zero address.\n   */\n  modifier cannotExecute() {\n    preventExecution();\n    _;\n  }\n}\n"},"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./AutomationBase.sol\";\nimport \"./interfaces/AutomationCompatibleInterface.sol\";\n\nabstract contract AutomationCompatible is AutomationBase, AutomationCompatibleInterface {}\n"},"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AutomationCompatibleInterface {\n  /**\n   * @notice method that is simulated by the keepers to see if any work actually\n   * needs to be performed. This method does does not actually need to be\n   * executable, and since it is only ever simulated it can consume lots of gas.\n   * @dev To ensure that it is never called, you may want to add the\n   * cannotExecute modifier from KeeperBase to your implementation of this\n   * method.\n   * @param checkData specified in the upkeep registration so it is always the\n   * same for a registered upkeep. This can easily be broken down into specific\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\n   * same contract and easily differentiated by the contract.\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\n   * performUpkeep or not.\n   * @return performData bytes that the keeper should call performUpkeep with, if\n   * upkeep is needed. If you would like to encode data to decode later, try\n   * `abi.encode`.\n   */\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\n\n  /**\n   * @notice method that is actually executed by the keepers, via the registry.\n   * The data returned by the checkUpkeep simulation will be passed into\n   * this method to actually be executed.\n   * @dev The input to this method should not be trusted, and the caller of the\n   * method should not even be restricted to any single registry. Anyone should\n   * be able call it, and the input should be validated, there is no guarantee\n   * that the data passed in is the performData returned from checkUpkeep. This\n   * could happen due to malicious keepers, racing keepers, or simply a state\n   * change while the performUpkeep transaction is waiting for confirmation.\n   * Always validate the data passed in.\n   * @param performData is the data which was passed back from the checkData\n   * simulation. If it is encoded, it can easily be decoded into other types by\n   * calling `abi.decode`. This data should not be trusted, and should be\n   * validated against the contract's current state.\n   */\n  function performUpkeep(bytes calldata performData) external;\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface VRFCoordinatorV2Interface {\n  /**\n   * @notice Get configuration relevant for making requests\n   * @return minimumRequestConfirmations global min for request confirmations\n   * @return maxGasLimit global max for request gas limit\n   * @return s_provingKeyHashes list of registered key hashes\n   */\n  function getRequestConfig() external view returns (uint16, uint32, bytes32[] memory);\n\n  /**\n   * @notice Request a set of random words.\n   * @param keyHash - Corresponds to a particular oracle job which uses\n   * that key for generating the VRF proof. Different keyHash's have different gas price\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\n   * @param subId  - The ID of the VRF subscription. Must be funded\n   * with the minimum subscription balance required for the selected keyHash.\n   * @param minimumRequestConfirmations - How many blocks you'd like the\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n   * for why you may want to request more. The acceptable range is\n   * [minimumRequestBlockConfirmations, 200].\n   * @param callbackGasLimit - How much gas you'd like to receive in your\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n   * may be slightly less than this amount because of gas used calling the function\n   * (argument decoding etc.), so you may need to request slightly more than you expect\n   * to have inside fulfillRandomWords. The acceptable range is\n   * [0, maxGasLimit]\n   * @param numWords - The number of uint256 random values you'd like to receive\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\n   * @return requestId - A unique identifier of the request. Can be used to match\n   * a request to a response in fulfillRandomWords.\n   */\n  function requestRandomWords(\n    bytes32 keyHash,\n    uint64 subId,\n    uint16 minimumRequestConfirmations,\n    uint32 callbackGasLimit,\n    uint32 numWords\n  ) external returns (uint256 requestId);\n\n  /**\n   * @notice Create a VRF subscription.\n   * @return subId - A unique subscription id.\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n   * @dev Note to fund the subscription, use transferAndCall. For example\n   * @dev  LINKTOKEN.transferAndCall(\n   * @dev    address(COORDINATOR),\n   * @dev    amount,\n   * @dev    abi.encode(subId));\n   */\n  function createSubscription() external returns (uint64 subId);\n\n  /**\n   * @notice Get a VRF subscription.\n   * @param subId - ID of the subscription\n   * @return balance - LINK balance of the subscription in juels.\n   * @return reqCount - number of requests for this subscription, determines fee tier.\n   * @return owner - owner of the subscription.\n   * @return consumers - list of consumer address which are able to use this subscription.\n   */\n  function getSubscription(\n    uint64 subId\n  ) external view returns (uint96 balance, uint64 reqCount, address owner, address[] memory consumers);\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @param newOwner - proposed new owner of the subscription\n   */\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @dev will revert if original owner of subId has\n   * not requested that msg.sender become the new owner.\n   */\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\n\n  /**\n   * @notice Add a consumer to a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - New consumer which can use the subscription\n   */\n  function addConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Remove a consumer from a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - Consumer to remove from the subscription\n   */\n  function removeConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Cancel a subscription\n   * @param subId - ID of the subscription\n   * @param to - Where to send the remaining LINK to\n   */\n  function cancelSubscription(uint64 subId, address to) external;\n\n  /*\n   * @notice Check to see if there exists a request commitment consumers\n   * for all consumers and keyhashes for a given sub.\n   * @param subId - ID of the subscription\n   * @return true if there exists at least one unfulfilled request for the subscription, false\n   * otherwise.\n   */\n  function pendingRequestExists(uint64 subId) external view returns (bool);\n}\n"},"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/** ****************************************************************************\n * @notice Interface for contracts using VRF randomness\n * *****************************************************************************\n * @dev PURPOSE\n *\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\n * @dev making his output up to suit himself. Reggie provides Vera a public key\n * @dev to which he knows the secret key. Each time Vera provides a seed to\n * @dev Reggie, he gives back a value which is computed completely\n * @dev deterministically from the seed and the secret key.\n *\n * @dev Reggie provides a proof by which Vera can verify that the output was\n * @dev correctly computed once Reggie tells it to her, but without that proof,\n * @dev the output is indistinguishable to her from a uniform random sample\n * @dev from the output space.\n *\n * @dev The purpose of this contract is to make it easy for unrelated contracts\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\n * @dev 1. The fulfillment came from the VRFCoordinator\n * @dev 2. The consumer contract implements fulfillRandomWords.\n * *****************************************************************************\n * @dev USAGE\n *\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\n * @dev initialize VRFConsumerBase's attributes in their constructor as\n * @dev shown:\n *\n * @dev   contract VRFConsumer {\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\n * @dev         <initialization with other arguments goes here>\n * @dev       }\n * @dev   }\n *\n * @dev The oracle will have given you an ID for the VRF keypair they have\n * @dev committed to (let's call it keyHash). Create subscription, fund it\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n * @dev subscription management functions).\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n * @dev callbackGasLimit, numWords),\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\n *\n * @dev Once the VRFCoordinator has received and validated the oracle's response\n * @dev to your request, it will call your contract's fulfillRandomWords method.\n *\n * @dev The randomness argument to fulfillRandomWords is a set of random words\n * @dev generated from your requestId and the blockHash of the request.\n *\n * @dev If your contract could have concurrent requests open, you can use the\n * @dev requestId returned from requestRandomWords to track which response is associated\n * @dev with which randomness request.\n * @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n * @dev if your contract could have multiple requests in flight simultaneously.\n *\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n * @dev differ.\n *\n * *****************************************************************************\n * @dev SECURITY CONSIDERATIONS\n *\n * @dev A method with the ability to call your fulfillRandomness method directly\n * @dev could spoof a VRF response with any random value, so it's critical that\n * @dev it cannot be directly called by anything other than this base contract\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n *\n * @dev For your users to trust that your contract's random behavior is free\n * @dev from malicious interference, it's best if you can write it so that all\n * @dev behaviors implied by a VRF response are executed *during* your\n * @dev fulfillRandomness method. If your contract must store the response (or\n * @dev anything derived from it) and use it later, you must ensure that any\n * @dev user-significant behavior which depends on that stored value cannot be\n * @dev manipulated by a subsequent VRF request.\n *\n * @dev Similarly, both miners and the VRF oracle itself have some influence\n * @dev over the order in which VRF responses appear on the blockchain, so if\n * @dev your contract could have multiple VRF requests in flight simultaneously,\n * @dev you must ensure that the order in which the VRF responses arrive cannot\n * @dev be used to manipulate your contract's user-significant behavior.\n *\n * @dev Since the block hash of the block which contains the requestRandomness\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n * @dev miner could, in principle, fork the blockchain to evict the block\n * @dev containing the request, forcing the request to be included in a\n * @dev different block with a different hash, and therefore a different input\n * @dev to the VRF. However, such an attack would incur a substantial economic\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\n * @dev until it calls responds to a request. It is for this reason that\n * @dev that you can signal to an oracle you'd like them to wait longer before\n * @dev responding to the request (however this is not enforced in the contract\n * @dev and so remains effective only in the case of unmodified oracle software).\n */\nabstract contract VRFConsumerBaseV2 {\n  error OnlyCoordinatorCanFulfill(address have, address want);\n  address private immutable vrfCoordinator;\n\n  /**\n   * @param _vrfCoordinator address of VRFCoordinator contract\n   */\n  constructor(address _vrfCoordinator) {\n    vrfCoordinator = _vrfCoordinator;\n  }\n\n  /**\n   * @notice fulfillRandomness handles the VRF response. Your contract must\n   * @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n   * @notice principles to keep in mind when implementing your fulfillRandomness\n   * @notice method.\n   *\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n   * @dev signature, and will call it once it has verified the proof\n   * @dev associated with the randomness. (It is triggered via a call to\n   * @dev rawFulfillRandomness, below.)\n   *\n   * @param requestId The Id initially returned by requestRandomness\n   * @param randomWords the VRF output expanded to the requested number of words\n   */\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\n\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\n  // the origin of the call\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\n    if (msg.sender != vrfCoordinator) {\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\n    }\n    fulfillRandomWords(requestId, randomWords);\n  }\n}\n"},"contracts/Raffle.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity  ^0.8.7;\r\nimport \"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\";\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\";\r\nimport \"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\";\r\n\r\n error Raffle__NOTENOUGHETH();\r\n error Raffle_BALANCETRANSFERFAILED();\r\n  error Raffle__RAFFLENOTOPEN();\r\n  error Raffle_UPKEEPNOTNEEDED(uint256 currentBalance, uint256 players, uint256 raffleState);\r\n  \r\n\r\ncontract Raffle is VRFConsumerBaseV2, AutomationCompatible{\r\n   // Type declaration\r\n    enum RaffleState {OPEN, CALCULATING }\r\n\r\n\r\n uint256 private  immutable i_entranceFee;\r\n address payable[] public s_players;\r\n VRFCoordinatorV2Interface public immutable i_vrfCoordinator;\r\n bytes32 private immutable i_gasLane;\r\n uint64 private immutable  i_subscriptionId;\r\n uint16 private constant REQUEST_CONFIRMATIONS = 3;\r\n uint32  private immutable i_callbackGasLimit;\r\n uint32 private constant NUM_WORDS =1;\r\n uint256 private s_lastTimeStamp;\r\n uint256 private immutable i_interval;\r\n RaffleState private s_raffleState;\r\n\r\n /*  events */\r\n  event raffleEnter(address indexed player);\r\n  event requestedRaffleWinner(uint256 indexed requestId);\r\n  event randomWinnerPicked(address indexed theWinner);\r\n  //state variables\r\n  address private s_recentWinner;\r\n\r\n constructor  (address vrfCoordinatorV2,  uint256 entranceFee,  bytes32 gasLane, uint64 subscriptionId, uint32 callbackGasLimit, uint256 interval ) VRFConsumerBaseV2(vrfCoordinatorV2) {\r\n    i_entranceFee = entranceFee;\r\n    i_vrfCoordinator  = VRFCoordinatorV2Interface(vrfCoordinatorV2);\r\n    i_gasLane = gasLane;\r\n    i_subscriptionId = subscriptionId;\r\n    i_callbackGasLimit = callbackGasLimit;\r\n    s_raffleState = RaffleState.OPEN;\r\n    s_lastTimeStamp = block.timestamp;\r\n    i_interval = interval;\r\n   \r\n\r\n}\r\n   function enterRaffle() public payable {\r\n    if(msg.value < i_entranceFee){\r\n       revert Raffle__NOTENOUGHETH(); \r\n    }\r\n    if (s_raffleState != RaffleState.OPEN) {\r\n      revert Raffle__RAFFLENOTOPEN();\r\n    } \r\n    s_players.push(payable(msg.sender));\r\n    emit raffleEnter(msg.sender);\r\n }\r\n function checkUpkeep(\r\n        bytes memory /* checkData */\r\n    )\r\n        public\r\n        view\r\n        override\r\n        returns (bool upkeepNeeded, bytes memory /* performData */)\r\n    {\r\n        bool isOpen =  (RaffleState.OPEN == s_raffleState);\r\n        bool hasPlayers  = s_players.length > 0;\r\n        bool hasBalance  =  address (this).balance > 0 ;\r\n        bool timeIsValid  = ((block.timestamp - s_lastTimeStamp) > i_interval );\r\n        upkeepNeeded = (isOpen && hasPlayers && hasBalance && timeIsValid);\r\n        return (upkeepNeeded, \"0x0\");\r\n    }\r\n\r\n  function performUpkeep(bytes calldata /* performData */) external override {\r\n  (bool upkeepNeeded, ) = checkUpkeep(\"\");\r\n  if (!upkeepNeeded) {\r\n        revert Raffle_UPKEEPNOTNEEDED(address(this).balance,\r\n                s_players.length,\r\n                uint256(s_raffleState));\r\n  }\r\n   s_raffleState = RaffleState.CALCULATING;\r\n      uint256 requestId =   i_vrfCoordinator.requestRandomWords(\r\n            i_gasLane,\r\n            i_subscriptionId,\r\n            REQUEST_CONFIRMATIONS,\r\n            i_callbackGasLimit,\r\n            NUM_WORDS\r\n        );\r\n        emit requestedRaffleWinner(requestId);\r\n        \r\n\r\n\r\n }\r\n function fulfillRandomWords(  uint256, /*_requestId*/ uint256[] memory _randomWords ) internal override{\r\n     uint256 indexOfWinner = _randomWords[0] % s_players.length;\r\n     address payable addressOfWinner  = s_players[indexOfWinner];\r\n     s_recentWinner = addressOfWinner;\r\n     s_players = new address payable[](0);\r\n     s_raffleState = RaffleState.OPEN;\r\n     s_lastTimeStamp =  block.timestamp;\r\n     \r\n       (bool success, ) = addressOfWinner.call{value: address(this).balance}(\"\");\r\n       if (!success) {\r\n         revert Raffle_BALANCETRANSFERFAILED();\r\n       } \r\n    emit randomWinnerPicked(addressOfWinner);\r\n }\r\n\r\n function getEntranceFee() public view returns(uint256) {\r\n    return i_entranceFee;\r\n }\r\n function getPlayers(uint256 index) public view returns(address) {\r\n    return s_players[index];\r\n }\r\n function getRecentWinner() public view returns (address) {\r\n   return s_recentWinner;\r\n }\r\n function getRaffleState() public view returns (RaffleState) {\r\n   return s_raffleState;\r\n }\r\n function getNumWords() public pure returns (uint32) {\r\n   return NUM_WORDS;\r\n }\r\n function getNumberOfPlayers () public view returns(uint256){\r\n   return s_players.length;\r\n }\r\n function getRequestConfirmations () public pure returns(uint256){\r\n   return REQUEST_CONFIRMATIONS;\r\n }\r\n function getInterval () public view returns(uint256){\r\n   return i_interval;\r\n }\r\n function getLatestTimeStamp() public view returns(uint256) {\r\n  return s_lastTimeStamp;\r\n }\r\n}"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol","exportedSymbols":{"AutomationBase":[29]},"id":30,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":29,"linearizedBaseContracts":[29],"name":"AutomationBase","nameLocation":"66:14:0","nodeType":"ContractDefinition","nodes":[{"id":3,"name":"OnlySimulatedBackend","nameLocation":"91:20:0","nodeType":"ErrorDefinition","parameters":{"id":2,"nodeType":"ParameterList","parameters":[],"src":"111:2:0"},"src":"85:29:0"},{"body":{"id":19,"nodeType":"Block","src":"290:83:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":13,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"300:2:0","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":8,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"origin","nodeType":"MemberAccess","src":"300:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":11,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"321:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"313:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"313:7:0","typeDescriptions":{}}},"id":12,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"313:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"300:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":18,"nodeType":"IfStatement","src":"296:73:0","trueBody":{"id":17,"nodeType":"Block","src":"325:44:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":14,"name":"OnlySimulatedBackend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3,"src":"340:20:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":15,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"340:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":16,"nodeType":"RevertStatement","src":"333:29:0"}]}}]},"documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"118:127:0","text":" @notice method that allows it to be simulated via eth_call by checking that\n the sender is the zero address."},"id":20,"implemented":true,"kind":"function","modifiers":[],"name":"preventExecution","nameLocation":"257:16:0","nodeType":"FunctionDefinition","parameters":{"id":5,"nodeType":"ParameterList","parameters":[],"src":"273:2:0"},"returnParameters":{"id":6,"nodeType":"ParameterList","parameters":[],"src":"290:0:0"},"scope":29,"src":"248:125:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":27,"nodeType":"Block","src":"534:36:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":23,"name":"preventExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"540:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":24,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"540:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":25,"nodeType":"ExpressionStatement","src":"540:18:0"},{"id":26,"nodeType":"PlaceholderStatement","src":"564:1:0"}]},"documentation":{"id":21,"nodeType":"StructuredDocumentation","src":"377:129:0","text":" @notice modifier that allows it to be simulated via eth_call by checking\n that the sender is the zero address."},"id":28,"name":"cannotExecute","nameLocation":"518:13:0","nodeType":"ModifierDefinition","parameters":{"id":22,"nodeType":"ParameterList","parameters":[],"src":"531:2:0"},"src":"509:61:0","virtual":false,"visibility":"internal"}],"scope":30,"src":"57:515:0","usedErrors":[3]}],"src":"32:541:0"},"id":0},"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol","exportedSymbols":{"AutomationBase":[29],"AutomationCompatible":[38],"AutomationCompatibleInterface":[57]},"id":39,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":31,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:1"},{"absolutePath":"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol","file":"./AutomationBase.sol","id":32,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":39,"sourceUnit":30,"src":"57:30:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol","file":"./interfaces/AutomationCompatibleInterface.sol","id":33,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":39,"sourceUnit":58,"src":"88:56:1","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":34,"name":"AutomationBase","nodeType":"IdentifierPath","referencedDeclaration":29,"src":"188:14:1"},"id":35,"nodeType":"InheritanceSpecifier","src":"188:14:1"},{"baseName":{"id":36,"name":"AutomationCompatibleInterface","nodeType":"IdentifierPath","referencedDeclaration":57,"src":"204:29:1"},"id":37,"nodeType":"InheritanceSpecifier","src":"204:29:1"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"id":38,"linearizedBaseContracts":[38,57,29],"name":"AutomationCompatible","nameLocation":"164:20:1","nodeType":"ContractDefinition","nodes":[],"scope":39,"src":"146:90:1","usedErrors":[3]}],"src":"32:205:1"},"id":1},"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol","exportedSymbols":{"AutomationCompatibleInterface":[57]},"id":58,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":40,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:2"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":57,"linearizedBaseContracts":[57],"name":"AutomationCompatibleInterface","nameLocation":"67:29:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"101:985:2","text":" @notice method that is simulated by the keepers to see if any work actually\n needs to be performed. This method does does not actually need to be\n executable, and since it is only ever simulated it can consume lots of gas.\n @dev To ensure that it is never called, you may want to add the\n cannotExecute modifier from KeeperBase to your implementation of this\n method.\n @param checkData specified in the upkeep registration so it is always the\n same for a registered upkeep. This can easily be broken down into specific\n arguments using `abi.decode`, so multiple upkeeps can be registered on the\n same contract and easily differentiated by the contract.\n @return upkeepNeeded boolean to indicate whether the keeper should call\n performUpkeep or not.\n @return performData bytes that the keeper should call performUpkeep with, if\n upkeep is needed. If you would like to encode data to decode later, try\n `abi.encode`."},"functionSelector":"6e04ff0d","id":50,"implemented":false,"kind":"function","modifiers":[],"name":"checkUpkeep","nameLocation":"1098:11:2","nodeType":"FunctionDefinition","parameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"mutability":"mutable","name":"checkData","nameLocation":"1125:9:2","nodeType":"VariableDeclaration","scope":50,"src":"1110:24:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":42,"name":"bytes","nodeType":"ElementaryTypeName","src":"1110:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1109:26:2"},"returnParameters":{"id":49,"nodeType":"ParameterList","parameters":[{"constant":false,"id":46,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"1159:12:2","nodeType":"VariableDeclaration","scope":50,"src":"1154:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":45,"name":"bool","nodeType":"ElementaryTypeName","src":"1154:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":48,"mutability":"mutable","name":"performData","nameLocation":"1186:11:2","nodeType":"VariableDeclaration","scope":50,"src":"1173:24:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":47,"name":"bytes","nodeType":"ElementaryTypeName","src":"1173:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1153:45:2"},"scope":57,"src":"1089:110:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1203:1003:2","text":" @notice method that is actually executed by the keepers, via the registry.\n The data returned by the checkUpkeep simulation will be passed into\n this method to actually be executed.\n @dev The input to this method should not be trusted, and the caller of the\n method should not even be restricted to any single registry. Anyone should\n be able call it, and the input should be validated, there is no guarantee\n that the data passed in is the performData returned from checkUpkeep. This\n could happen due to malicious keepers, racing keepers, or simply a state\n change while the performUpkeep transaction is waiting for confirmation.\n Always validate the data passed in.\n @param performData is the data which was passed back from the checkData\n simulation. If it is encoded, it can easily be decoded into other types by\n calling `abi.decode`. This data should not be trusted, and should be\n validated against the contract's current state."},"functionSelector":"4585e33b","id":56,"implemented":false,"kind":"function","modifiers":[],"name":"performUpkeep","nameLocation":"2218:13:2","nodeType":"FunctionDefinition","parameters":{"id":54,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53,"mutability":"mutable","name":"performData","nameLocation":"2247:11:2","nodeType":"VariableDeclaration","scope":56,"src":"2232:26:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":52,"name":"bytes","nodeType":"ElementaryTypeName","src":"2232:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2231:28:2"},"returnParameters":{"id":55,"nodeType":"ParameterList","parameters":[],"src":"2268:0:2"},"scope":57,"src":"2209:60:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":58,"src":"57:2214:2","usedErrors":[]}],"src":"32:2240:2"},"id":2},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","exportedSymbols":{"VRFCoordinatorV2Interface":[153]},"id":154,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":59,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:3"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":153,"linearizedBaseContracts":[153],"name":"VRFCoordinatorV2Interface","nameLocation":"67:25:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":60,"nodeType":"StructuredDocumentation","src":"97:267:3","text":" @notice Get configuration relevant for making requests\n @return minimumRequestConfirmations global min for request confirmations\n @return maxGasLimit global max for request gas limit\n @return s_provingKeyHashes list of registered key hashes"},"functionSelector":"00012291","id":70,"implemented":false,"kind":"function","modifiers":[],"name":"getRequestConfig","nameLocation":"376:16:3","nodeType":"FunctionDefinition","parameters":{"id":61,"nodeType":"ParameterList","parameters":[],"src":"392:2:3"},"returnParameters":{"id":69,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":70,"src":"418:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":62,"name":"uint16","nodeType":"ElementaryTypeName","src":"418:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":70,"src":"426:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":64,"name":"uint32","nodeType":"ElementaryTypeName","src":"426:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":68,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":70,"src":"434:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":66,"name":"bytes32","nodeType":"ElementaryTypeName","src":"434:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":67,"nodeType":"ArrayTypeName","src":"434:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"417:34:3"},"scope":153,"src":"367:85:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":71,"nodeType":"StructuredDocumentation","src":"456:1511:3","text":" @notice Request a set of random words.\n @param keyHash - Corresponds to a particular oracle job which uses\n that key for generating the VRF proof. Different keyHash's have different gas price\n ceilings, so you can select a specific one to bound your maximum per request cost.\n @param subId  - The ID of the VRF subscription. Must be funded\n with the minimum subscription balance required for the selected keyHash.\n @param minimumRequestConfirmations - How many blocks you'd like the\n oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n for why you may want to request more. The acceptable range is\n [minimumRequestBlockConfirmations, 200].\n @param callbackGasLimit - How much gas you'd like to receive in your\n fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n may be slightly less than this amount because of gas used calling the function\n (argument decoding etc.), so you may need to request slightly more than you expect\n to have inside fulfillRandomWords. The acceptable range is\n [0, maxGasLimit]\n @param numWords - The number of uint256 random values you'd like to receive\n in your fulfillRandomWords callback. Note these numbers are expanded in a\n secure way by the VRFCoordinator from a single random value supplied by the oracle.\n @return requestId - A unique identifier of the request. Can be used to match\n a request to a response in fulfillRandomWords."},"functionSelector":"5d3b1d30","id":86,"implemented":false,"kind":"function","modifiers":[],"name":"requestRandomWords","nameLocation":"1979:18:3","nodeType":"FunctionDefinition","parameters":{"id":82,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73,"mutability":"mutable","name":"keyHash","nameLocation":"2011:7:3","nodeType":"VariableDeclaration","scope":86,"src":"2003:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":72,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2003:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":75,"mutability":"mutable","name":"subId","nameLocation":"2031:5:3","nodeType":"VariableDeclaration","scope":86,"src":"2024:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":74,"name":"uint64","nodeType":"ElementaryTypeName","src":"2024:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":77,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"2049:27:3","nodeType":"VariableDeclaration","scope":86,"src":"2042:34:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":76,"name":"uint16","nodeType":"ElementaryTypeName","src":"2042:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":79,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"2089:16:3","nodeType":"VariableDeclaration","scope":86,"src":"2082:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":78,"name":"uint32","nodeType":"ElementaryTypeName","src":"2082:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":81,"mutability":"mutable","name":"numWords","nameLocation":"2118:8:3","nodeType":"VariableDeclaration","scope":86,"src":"2111:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":80,"name":"uint32","nodeType":"ElementaryTypeName","src":"2111:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1997:133:3"},"returnParameters":{"id":85,"nodeType":"ParameterList","parameters":[{"constant":false,"id":84,"mutability":"mutable","name":"requestId","nameLocation":"2157:9:3","nodeType":"VariableDeclaration","scope":86,"src":"2149:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":83,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2148:19:3"},"scope":153,"src":"1970:198:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":87,"nodeType":"StructuredDocumentation","src":"2172:384:3","text":" @notice Create a VRF subscription.\n @return subId - A unique subscription id.\n @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n @dev Note to fund the subscription, use transferAndCall. For example\n @dev  LINKTOKEN.transferAndCall(\n @dev    address(COORDINATOR),\n @dev    amount,\n @dev    abi.encode(subId));"},"functionSelector":"a21a23e4","id":92,"implemented":false,"kind":"function","modifiers":[],"name":"createSubscription","nameLocation":"2568:18:3","nodeType":"FunctionDefinition","parameters":{"id":88,"nodeType":"ParameterList","parameters":[],"src":"2586:2:3"},"returnParameters":{"id":91,"nodeType":"ParameterList","parameters":[{"constant":false,"id":90,"mutability":"mutable","name":"subId","nameLocation":"2614:5:3","nodeType":"VariableDeclaration","scope":92,"src":"2607:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":89,"name":"uint64","nodeType":"ElementaryTypeName","src":"2607:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2606:14:3"},"scope":153,"src":"2559:62:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":93,"nodeType":"StructuredDocumentation","src":"2625:381:3","text":" @notice Get a VRF subscription.\n @param subId - ID of the subscription\n @return balance - LINK balance of the subscription in juels.\n @return reqCount - number of requests for this subscription, determines fee tier.\n @return owner - owner of the subscription.\n @return consumers - list of consumer address which are able to use this subscription."},"functionSelector":"a47c7696","id":107,"implemented":false,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"3018:15:3","nodeType":"FunctionDefinition","parameters":{"id":96,"nodeType":"ParameterList","parameters":[{"constant":false,"id":95,"mutability":"mutable","name":"subId","nameLocation":"3046:5:3","nodeType":"VariableDeclaration","scope":107,"src":"3039:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":94,"name":"uint64","nodeType":"ElementaryTypeName","src":"3039:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3033:22:3"},"returnParameters":{"id":106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":98,"mutability":"mutable","name":"balance","nameLocation":"3086:7:3","nodeType":"VariableDeclaration","scope":107,"src":"3079:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":97,"name":"uint96","nodeType":"ElementaryTypeName","src":"3079:6:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":100,"mutability":"mutable","name":"reqCount","nameLocation":"3102:8:3","nodeType":"VariableDeclaration","scope":107,"src":"3095:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":99,"name":"uint64","nodeType":"ElementaryTypeName","src":"3095:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":102,"mutability":"mutable","name":"owner","nameLocation":"3120:5:3","nodeType":"VariableDeclaration","scope":107,"src":"3112:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":101,"name":"address","nodeType":"ElementaryTypeName","src":"3112:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":105,"mutability":"mutable","name":"consumers","nameLocation":"3144:9:3","nodeType":"VariableDeclaration","scope":107,"src":"3127:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":103,"name":"address","nodeType":"ElementaryTypeName","src":"3127:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ArrayTypeName","src":"3127:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3078:76:3"},"scope":153,"src":"3009:146:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":108,"nodeType":"StructuredDocumentation","src":"3159:164:3","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @param newOwner - proposed new owner of the subscription"},"functionSelector":"04c357cb","id":115,"implemented":false,"kind":"function","modifiers":[],"name":"requestSubscriptionOwnerTransfer","nameLocation":"3335:32:3","nodeType":"FunctionDefinition","parameters":{"id":113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":110,"mutability":"mutable","name":"subId","nameLocation":"3375:5:3","nodeType":"VariableDeclaration","scope":115,"src":"3368:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":109,"name":"uint64","nodeType":"ElementaryTypeName","src":"3368:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":112,"mutability":"mutable","name":"newOwner","nameLocation":"3390:8:3","nodeType":"VariableDeclaration","scope":115,"src":"3382:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":111,"name":"address","nodeType":"ElementaryTypeName","src":"3382:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3367:32:3"},"returnParameters":{"id":114,"nodeType":"ParameterList","parameters":[],"src":"3408:0:3"},"scope":153,"src":"3326:83:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"3413:212:3","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @dev will revert if original owner of subId has\n not requested that msg.sender become the new owner."},"functionSelector":"82359740","id":121,"implemented":false,"kind":"function","modifiers":[],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"3637:31:3","nodeType":"FunctionDefinition","parameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"subId","nameLocation":"3676:5:3","nodeType":"VariableDeclaration","scope":121,"src":"3669:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":117,"name":"uint64","nodeType":"ElementaryTypeName","src":"3669:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3668:14:3"},"returnParameters":{"id":120,"nodeType":"ParameterList","parameters":[],"src":"3691:0:3"},"scope":153,"src":"3628:64:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":122,"nodeType":"StructuredDocumentation","src":"3696:170:3","text":" @notice Add a consumer to a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - New consumer which can use the subscription"},"functionSelector":"7341c10c","id":129,"implemented":false,"kind":"function","modifiers":[],"name":"addConsumer","nameLocation":"3878:11:3","nodeType":"FunctionDefinition","parameters":{"id":127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":124,"mutability":"mutable","name":"subId","nameLocation":"3897:5:3","nodeType":"VariableDeclaration","scope":129,"src":"3890:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":123,"name":"uint64","nodeType":"ElementaryTypeName","src":"3890:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":126,"mutability":"mutable","name":"consumer","nameLocation":"3912:8:3","nodeType":"VariableDeclaration","scope":129,"src":"3904:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3889:32:3"},"returnParameters":{"id":128,"nodeType":"ParameterList","parameters":[],"src":"3930:0:3"},"scope":153,"src":"3869:62:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":130,"nodeType":"StructuredDocumentation","src":"3935:172:3","text":" @notice Remove a consumer from a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - Consumer to remove from the subscription"},"functionSelector":"9f87fad7","id":137,"implemented":false,"kind":"function","modifiers":[],"name":"removeConsumer","nameLocation":"4119:14:3","nodeType":"FunctionDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"subId","nameLocation":"4141:5:3","nodeType":"VariableDeclaration","scope":137,"src":"4134:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":131,"name":"uint64","nodeType":"ElementaryTypeName","src":"4134:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":134,"mutability":"mutable","name":"consumer","nameLocation":"4156:8:3","nodeType":"VariableDeclaration","scope":137,"src":"4148:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":133,"name":"address","nodeType":"ElementaryTypeName","src":"4148:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4133:32:3"},"returnParameters":{"id":136,"nodeType":"ParameterList","parameters":[],"src":"4174:0:3"},"scope":153,"src":"4110:65:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":138,"nodeType":"StructuredDocumentation","src":"4179:140:3","text":" @notice Cancel a subscription\n @param subId - ID of the subscription\n @param to - Where to send the remaining LINK to"},"functionSelector":"d7ae1d30","id":145,"implemented":false,"kind":"function","modifiers":[],"name":"cancelSubscription","nameLocation":"4331:18:3","nodeType":"FunctionDefinition","parameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":140,"mutability":"mutable","name":"subId","nameLocation":"4357:5:3","nodeType":"VariableDeclaration","scope":145,"src":"4350:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":139,"name":"uint64","nodeType":"ElementaryTypeName","src":"4350:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":142,"mutability":"mutable","name":"to","nameLocation":"4372:2:3","nodeType":"VariableDeclaration","scope":145,"src":"4364:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":141,"name":"address","nodeType":"ElementaryTypeName","src":"4364:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4349:26:3"},"returnParameters":{"id":144,"nodeType":"ParameterList","parameters":[],"src":"4384:0:3"},"scope":153,"src":"4322:63:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e82ad7d4","id":152,"implemented":false,"kind":"function","modifiers":[],"name":"pendingRequestExists","nameLocation":"4690:20:3","nodeType":"FunctionDefinition","parameters":{"id":148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":147,"mutability":"mutable","name":"subId","nameLocation":"4718:5:3","nodeType":"VariableDeclaration","scope":152,"src":"4711:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":146,"name":"uint64","nodeType":"ElementaryTypeName","src":"4711:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4710:14:3"},"returnParameters":{"id":151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":152,"src":"4748:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":149,"name":"bool","nodeType":"ElementaryTypeName","src":"4748:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4747:6:3"},"scope":153,"src":"4681:73:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":154,"src":"57:4699:3","usedErrors":[]}],"src":"32:4725:3"},"id":3},"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol","exportedSymbols":{"VRFConsumerBaseV2":[211]},"id":212,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":155,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:4"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":156,"nodeType":"StructuredDocumentation","src":"57:5275:4","text":"****************************************************************************\n @notice Interface for contracts using VRF randomness\n *****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is indistinguishable to her from a uniform random sample\n @dev from the output space.\n @dev The purpose of this contract is to make it easy for unrelated contracts\n @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n @dev simple access to a verifiable source of randomness. It ensures 2 things:\n @dev 1. The fulfillment came from the VRFCoordinator\n @dev 2. The consumer contract implements fulfillRandomWords.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFConsumerBase, and can\n @dev initialize VRFConsumerBase's attributes in their constructor as\n @dev shown:\n @dev   contract VRFConsumer {\n @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n @dev       VRFConsumerBase(_vrfCoordinator) public {\n @dev         <initialization with other arguments goes here>\n @dev       }\n @dev   }\n @dev The oracle will have given you an ID for the VRF keypair they have\n @dev committed to (let's call it keyHash). Create subscription, fund it\n @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n @dev subscription management functions).\n @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n @dev callbackGasLimit, numWords),\n @dev see (VRFCoordinatorInterface for a description of the arguments).\n @dev Once the VRFCoordinator has received and validated the oracle's response\n @dev to your request, it will call your contract's fulfillRandomWords method.\n @dev The randomness argument to fulfillRandomWords is a set of random words\n @dev generated from your requestId and the blockHash of the request.\n @dev If your contract could have concurrent requests open, you can use the\n @dev requestId returned from requestRandomWords to track which response is associated\n @dev with which randomness request.\n @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n @dev if your contract could have multiple requests in flight simultaneously.\n @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n @dev differ.\n *****************************************************************************\n @dev SECURITY CONSIDERATIONS\n @dev A method with the ability to call your fulfillRandomness method directly\n @dev could spoof a VRF response with any random value, so it's critical that\n @dev it cannot be directly called by anything other than this base contract\n @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n @dev For your users to trust that your contract's random behavior is free\n @dev from malicious interference, it's best if you can write it so that all\n @dev behaviors implied by a VRF response are executed *during* your\n @dev fulfillRandomness method. If your contract must store the response (or\n @dev anything derived from it) and use it later, you must ensure that any\n @dev user-significant behavior which depends on that stored value cannot be\n @dev manipulated by a subsequent VRF request.\n @dev Similarly, both miners and the VRF oracle itself have some influence\n @dev over the order in which VRF responses appear on the blockchain, so if\n @dev your contract could have multiple VRF requests in flight simultaneously,\n @dev you must ensure that the order in which the VRF responses arrive cannot\n @dev be used to manipulate your contract's user-significant behavior.\n @dev Since the block hash of the block which contains the requestRandomness\n @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n @dev miner could, in principle, fork the blockchain to evict the block\n @dev containing the request, forcing the request to be included in a\n @dev different block with a different hash, and therefore a different input\n @dev to the VRF. However, such an attack would incur a substantial economic\n @dev cost. This cost scales with the number of blocks the VRF oracle waits\n @dev until it calls responds to a request. It is for this reason that\n @dev that you can signal to an oracle you'd like them to wait longer before\n @dev responding to the request (however this is not enforced in the contract\n @dev and so remains effective only in the case of unmodified oracle software)."},"fullyImplemented":false,"id":211,"linearizedBaseContracts":[211],"name":"VRFConsumerBaseV2","nameLocation":"5351:17:4","nodeType":"ContractDefinition","nodes":[{"id":162,"name":"OnlyCoordinatorCanFulfill","nameLocation":"5379:25:4","nodeType":"ErrorDefinition","parameters":{"id":161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":158,"mutability":"mutable","name":"have","nameLocation":"5413:4:4","nodeType":"VariableDeclaration","scope":162,"src":"5405:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":157,"name":"address","nodeType":"ElementaryTypeName","src":"5405:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":160,"mutability":"mutable","name":"want","nameLocation":"5427:4:4","nodeType":"VariableDeclaration","scope":162,"src":"5419:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":159,"name":"address","nodeType":"ElementaryTypeName","src":"5419:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5404:28:4"},"src":"5373:60:4"},{"constant":false,"id":164,"mutability":"immutable","name":"vrfCoordinator","nameLocation":"5462:14:4","nodeType":"VariableDeclaration","scope":211,"src":"5436:40:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":163,"name":"address","nodeType":"ElementaryTypeName","src":"5436:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":174,"nodeType":"Block","src":"5593:43:4","statements":[{"expression":{"id":172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":170,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"5599:14:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":171,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"5616:15:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5599:32:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":173,"nodeType":"ExpressionStatement","src":"5599:32:4"}]},"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"5481:72:4","text":" @param _vrfCoordinator address of VRFCoordinator contract"},"id":175,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"_vrfCoordinator","nameLocation":"5576:15:4","nodeType":"VariableDeclaration","scope":175,"src":"5568:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"5568:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5567:25:4"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"5593:0:4"},"scope":211,"src":"5556:80:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"documentation":{"id":176,"nodeType":"StructuredDocumentation","src":"5640:686:4","text":" @notice fulfillRandomness handles the VRF response. Your contract must\n @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n @notice principles to keep in mind when implementing your fulfillRandomness\n @notice method.\n @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n @dev signature, and will call it once it has verified the proof\n @dev associated with the randomness. (It is triggered via a call to\n @dev rawFulfillRandomness, below.)\n @param requestId The Id initially returned by requestRandomness\n @param randomWords the VRF output expanded to the requested number of words"},"id":184,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"6338:18:4","nodeType":"FunctionDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"requestId","nameLocation":"6365:9:4","nodeType":"VariableDeclaration","scope":184,"src":"6357:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":177,"name":"uint256","nodeType":"ElementaryTypeName","src":"6357:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":181,"mutability":"mutable","name":"randomWords","nameLocation":"6393:11:4","nodeType":"VariableDeclaration","scope":184,"src":"6376:28:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":179,"name":"uint256","nodeType":"ElementaryTypeName","src":"6376:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":180,"nodeType":"ArrayTypeName","src":"6376:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6356:49:4"},"returnParameters":{"id":183,"nodeType":"ParameterList","parameters":[],"src":"6422:0:4"},"scope":211,"src":"6329:94:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":209,"nodeType":"Block","src":"6707:167:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":192,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6717:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6717:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":194,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"6731:14:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6717:28:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":203,"nodeType":"IfStatement","src":"6713:109:4","trueBody":{"id":202,"nodeType":"Block","src":"6747:75:4","statements":[{"errorCall":{"arguments":[{"expression":{"id":197,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6788:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6788:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":199,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"6800:14:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":196,"name":"OnlyCoordinatorCanFulfill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"6762:25:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6762:53:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":201,"nodeType":"RevertStatement","src":"6755:60:4"}]}},{"expression":{"arguments":[{"id":205,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"6846:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":206,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"6857:11:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":204,"name":"fulfillRandomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"6827:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory)"}},"id":207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6827:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":208,"nodeType":"ExpressionStatement","src":"6827:42:4"}]},"functionSelector":"1fe543e3","id":210,"implemented":true,"kind":"function","modifiers":[],"name":"rawFulfillRandomWords","nameLocation":"6627:21:4","nodeType":"FunctionDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"mutability":"mutable","name":"requestId","nameLocation":"6657:9:4","nodeType":"VariableDeclaration","scope":210,"src":"6649:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":185,"name":"uint256","nodeType":"ElementaryTypeName","src":"6649:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":189,"mutability":"mutable","name":"randomWords","nameLocation":"6685:11:4","nodeType":"VariableDeclaration","scope":210,"src":"6668:28:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":187,"name":"uint256","nodeType":"ElementaryTypeName","src":"6668:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":188,"nodeType":"ArrayTypeName","src":"6668:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6648:49:4"},"returnParameters":{"id":191,"nodeType":"ParameterList","parameters":[],"src":"6707:0:4"},"scope":211,"src":"6618:256:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":212,"src":"5333:1543:4","usedErrors":[162]}],"src":"32:6845:4"},"id":4},"contracts/Raffle.sol":{"ast":{"absolutePath":"contracts/Raffle.sol","exportedSymbols":{"AutomationBase":[29],"AutomationCompatible":[38],"AutomationCompatibleInterface":[57],"Raffle":[633],"Raffle_BALANCETRANSFERFAILED":[220],"Raffle_UPKEEPNOTNEEDED":[230],"Raffle__NOTENOUGHETH":[218],"Raffle__RAFFLENOTOPEN":[222],"VRFConsumerBaseV2":[211],"VRFCoordinatorV2Interface":[153]},"id":634,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":213,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"33:24:5"},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol","file":"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol","id":214,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":634,"sourceUnit":212,"src":"59:65:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","id":215,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":634,"sourceUnit":154,"src":"126:80:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol","file":"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol","id":216,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":634,"sourceUnit":39,"src":"208:75:5","symbolAliases":[],"unitAlias":""},{"id":218,"name":"Raffle__NOTENOUGHETH","nameLocation":"294:20:5","nodeType":"ErrorDefinition","parameters":{"id":217,"nodeType":"ParameterList","parameters":[],"src":"314:2:5"},"src":"288:29:5"},{"id":220,"name":"Raffle_BALANCETRANSFERFAILED","nameLocation":"326:28:5","nodeType":"ErrorDefinition","parameters":{"id":219,"nodeType":"ParameterList","parameters":[],"src":"354:2:5"},"src":"320:37:5"},{"id":222,"name":"Raffle__RAFFLENOTOPEN","nameLocation":"367:21:5","nodeType":"ErrorDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[],"src":"388:2:5"},"src":"361:30:5"},{"id":230,"name":"Raffle_UPKEEPNOTNEEDED","nameLocation":"401:22:5","nodeType":"ErrorDefinition","parameters":{"id":229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":224,"mutability":"mutable","name":"currentBalance","nameLocation":"432:14:5","nodeType":"VariableDeclaration","scope":230,"src":"424:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":223,"name":"uint256","nodeType":"ElementaryTypeName","src":"424:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":226,"mutability":"mutable","name":"players","nameLocation":"456:7:5","nodeType":"VariableDeclaration","scope":230,"src":"448:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":225,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":228,"mutability":"mutable","name":"raffleState","nameLocation":"473:11:5","nodeType":"VariableDeclaration","scope":230,"src":"465:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":227,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"423:62:5"},"src":"395:91:5"},{"abstract":false,"baseContracts":[{"baseName":{"id":231,"name":"VRFConsumerBaseV2","nodeType":"IdentifierPath","referencedDeclaration":211,"src":"513:17:5"},"id":232,"nodeType":"InheritanceSpecifier","src":"513:17:5"},{"baseName":{"id":233,"name":"AutomationCompatible","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"532:20:5"},"id":234,"nodeType":"InheritanceSpecifier","src":"532:20:5"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":633,"linearizedBaseContracts":[633,38,57,29,211],"name":"Raffle","nameLocation":"503:6:5","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Raffle.RaffleState","id":237,"members":[{"id":235,"name":"OPEN","nameLocation":"601:4:5","nodeType":"EnumValue","src":"601:4:5"},{"id":236,"name":"CALCULATING","nameLocation":"607:11:5","nodeType":"EnumValue","src":"607:11:5"}],"name":"RaffleState","nameLocation":"588:11:5","nodeType":"EnumDefinition","src":"583:37:5"},{"constant":false,"id":239,"mutability":"immutable","name":"i_entranceFee","nameLocation":"654:13:5","nodeType":"VariableDeclaration","scope":633,"src":"627:40:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":238,"name":"uint256","nodeType":"ElementaryTypeName","src":"627:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"functionSelector":"ae771f6b","id":242,"mutability":"mutable","name":"s_players","nameLocation":"696:9:5","nodeType":"VariableDeclaration","scope":633,"src":"671:34:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[]"},"typeName":{"baseType":{"id":240,"name":"address","nodeType":"ElementaryTypeName","src":"671:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":241,"nodeType":"ArrayTypeName","src":"671:17:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage_ptr","typeString":"address payable[]"}},"visibility":"public"},{"constant":false,"functionSelector":"aebc4550","id":245,"mutability":"immutable","name":"i_vrfCoordinator","nameLocation":"752:16:5","nodeType":"VariableDeclaration","scope":633,"src":"709:59:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$153","typeString":"contract VRFCoordinatorV2Interface"},"typeName":{"id":244,"nodeType":"UserDefinedTypeName","pathNode":{"id":243,"name":"VRFCoordinatorV2Interface","nodeType":"IdentifierPath","referencedDeclaration":153,"src":"709:25:5"},"referencedDeclaration":153,"src":"709:25:5","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$153","typeString":"contract VRFCoordinatorV2Interface"}},"visibility":"public"},{"constant":false,"id":247,"mutability":"immutable","name":"i_gasLane","nameLocation":"798:9:5","nodeType":"VariableDeclaration","scope":633,"src":"772:35:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"772:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":249,"mutability":"immutable","name":"i_subscriptionId","nameLocation":"837:16:5","nodeType":"VariableDeclaration","scope":633,"src":"811:42:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":248,"name":"uint64","nodeType":"ElementaryTypeName","src":"811:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"private"},{"constant":true,"id":252,"mutability":"constant","name":"REQUEST_CONFIRMATIONS","nameLocation":"881:21:5","nodeType":"VariableDeclaration","scope":633,"src":"857:49:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":250,"name":"uint16","nodeType":"ElementaryTypeName","src":"857:6:5","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"33","id":251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"905:1:5","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"private"},{"constant":false,"id":254,"mutability":"immutable","name":"i_callbackGasLimit","nameLocation":"936:18:5","nodeType":"VariableDeclaration","scope":633,"src":"910:44:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":253,"name":"uint32","nodeType":"ElementaryTypeName","src":"910:6:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"private"},{"constant":true,"id":257,"mutability":"constant","name":"NUM_WORDS","nameLocation":"982:9:5","nodeType":"VariableDeclaration","scope":633,"src":"958:36:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":255,"name":"uint32","nodeType":"ElementaryTypeName","src":"958:6:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"31","id":256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"993:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":false,"id":259,"mutability":"mutable","name":"s_lastTimeStamp","nameLocation":"1014:15:5","nodeType":"VariableDeclaration","scope":633,"src":"998:31:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":258,"name":"uint256","nodeType":"ElementaryTypeName","src":"998:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":261,"mutability":"immutable","name":"i_interval","nameLocation":"1059:10:5","nodeType":"VariableDeclaration","scope":633,"src":"1033:36:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":260,"name":"uint256","nodeType":"ElementaryTypeName","src":"1033:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":264,"mutability":"mutable","name":"s_raffleState","nameLocation":"1093:13:5","nodeType":"VariableDeclaration","scope":633,"src":"1073:33:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$237","typeString":"enum Raffle.RaffleState"},"typeName":{"id":263,"nodeType":"UserDefinedTypeName","pathNode":{"id":262,"name":"RaffleState","nodeType":"IdentifierPath","referencedDeclaration":237,"src":"1073:11:5"},"referencedDeclaration":237,"src":"1073:11:5","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$237","typeString":"enum Raffle.RaffleState"}},"visibility":"private"},{"anonymous":false,"id":268,"name":"raffleEnter","nameLocation":"1135:11:5","nodeType":"EventDefinition","parameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":266,"indexed":true,"mutability":"mutable","name":"player","nameLocation":"1163:6:5","nodeType":"VariableDeclaration","scope":268,"src":"1147:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"1147:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1146:24:5"},"src":"1129:42:5"},{"anonymous":false,"id":272,"name":"requestedRaffleWinner","nameLocation":"1181:21:5","nodeType":"EventDefinition","parameters":{"id":271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":270,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"1219:9:5","nodeType":"VariableDeclaration","scope":272,"src":"1203:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":269,"name":"uint256","nodeType":"ElementaryTypeName","src":"1203:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1202:27:5"},"src":"1175:55:5"},{"anonymous":false,"id":276,"name":"randomWinnerPicked","nameLocation":"1240:18:5","nodeType":"EventDefinition","parameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"indexed":true,"mutability":"mutable","name":"theWinner","nameLocation":"1275:9:5","nodeType":"VariableDeclaration","scope":276,"src":"1259:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"1259:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1258:27:5"},"src":"1234:52:5"},{"constant":false,"id":278,"mutability":"mutable","name":"s_recentWinner","nameLocation":"1327:14:5","nodeType":"VariableDeclaration","scope":633,"src":"1311:30:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":277,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":332,"nodeType":"Block","src":"1530:332:5","statements":[{"expression":{"id":298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":296,"name":"i_entranceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"1537:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":297,"name":"entranceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"1553:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1537:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":299,"nodeType":"ExpressionStatement","src":"1537:27:5"},{"expression":{"id":304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":300,"name":"i_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":245,"src":"1571:16:5","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$153","typeString":"contract VRFCoordinatorV2Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":302,"name":"vrfCoordinatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"1617:16:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":301,"name":"VRFCoordinatorV2Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"1591:25:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFCoordinatorV2Interface_$153_$","typeString":"type(contract VRFCoordinatorV2Interface)"}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1591:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$153","typeString":"contract VRFCoordinatorV2Interface"}},"src":"1571:63:5","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$153","typeString":"contract VRFCoordinatorV2Interface"}},"id":305,"nodeType":"ExpressionStatement","src":"1571:63:5"},{"expression":{"id":308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":306,"name":"i_gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"1641:9:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":307,"name":"gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"1653:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1641:19:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":309,"nodeType":"ExpressionStatement","src":"1641:19:5"},{"expression":{"id":312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":310,"name":"i_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"1667:16:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":311,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"1686:14:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"1667:33:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":313,"nodeType":"ExpressionStatement","src":"1667:33:5"},{"expression":{"id":316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":314,"name":"i_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"1707:18:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":315,"name":"callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"1728:16:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"1707:37:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":317,"nodeType":"ExpressionStatement","src":"1707:37:5"},{"expression":{"id":321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":318,"name":"s_raffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"1751:13:5","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$237","typeString":"enum Raffle.RaffleState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":319,"name":"RaffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"1767:11:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RaffleState_$237_$","typeString":"type(enum Raffle.RaffleState)"}},"id":320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"OPEN","nodeType":"MemberAccess","referencedDeclaration":235,"src":"1767:16:5","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$237","typeString":"enum Raffle.RaffleState"}},"src":"1751:32:5","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$237","typeString":"enum Raffle.RaffleState"}},"id":322,"nodeType":"ExpressionStatement","src":"1751:32:5"},{"expression":{"id":326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":323,"name":"s_lastTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"1790:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":324,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1808:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"1808:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1790:33:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":327,"nodeType":"ExpressionStatement","src":"1790:33:5"},{"expression":{"id":330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":328,"name":"i_interval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"1830:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":329,"name":"interval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"1843:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":331,"nodeType":"ExpressionStatement","src":"1830:21:5"}]},"id":333,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":293,"name":"vrfCoordinatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"1512:16:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":294,"kind":"baseConstructorSpecifier","modifierName":{"id":292,"name":"VRFConsumerBaseV2","nodeType":"IdentifierPath","referencedDeclaration":211,"src":"1494:17:5"},"nodeType":"ModifierInvocation","src":"1494:35:5"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":280,"mutability":"mutable","name":"vrfCoordinatorV2","nameLocation":"1369:16:5","nodeType":"VariableDeclaration","scope":333,"src":"1361:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":279,"name":"address","nodeType":"ElementaryTypeName","src":"1361:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":282,"mutability":"mutable","name":"entranceFee","nameLocation":"1396:11:5","nodeType":"VariableDeclaration","scope":333,"src":"1388:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":281,"name":"uint256","nodeType":"ElementaryTypeName","src":"1388:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":284,"mutability":"mutable","name":"gasLane","nameLocation":"1418:7:5","nodeType":"VariableDeclaration","scope":333,"src":"1410:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":283,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1410:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":286,"mutability":"mutable","name":"subscriptionId","nameLocation":"1434:14:5","nodeType":"VariableDeclaration","scope":333,"src":"1427:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":285,"name":"uint64","nodeType":"ElementaryTypeName","src":"1427:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":288,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"1457:16:5","nodeType":"VariableDeclaration","scope":333,"src":"1450:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":287,"name":"uint32","nodeType":"ElementaryTypeName","src":"1450:6:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":290,"mutability":"mutable","name":"interval","nameLocation":"1483:8:5","nodeType":"VariableDeclaration","scope":333,"src":"1475:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":289,"name":"uint256","nodeType":"ElementaryTypeName","src":"1475:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1360:133:5"},"returnParameters":{"id":295,"nodeType":"ParameterList","parameters":[],"src":"1530:0:5"},"scope":633,"src":"1347:515:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":369,"nodeType":"Block","src":"1905:258:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":336,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1915:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"1915:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":338,"name":"i_entranceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"1927:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1915:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":344,"nodeType":"IfStatement","src":"1912:77:5","trueBody":{"id":343,"nodeType":"Block","src":"1941:48:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":340,"name":"Raffle__NOTENOUGHETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"1958:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1958:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":342,"nodeType":"RevertStatement","src":"1951:29:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_RaffleState_$237","typeString":"enum Raffle.RaffleState"},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":345,"name":"s_raffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"1999:13:5","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$237","typeString":"enum Raffle.RaffleState"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":346,"name":"RaffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"2016:11:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RaffleState_$237_$","typeString":"type(enum Raffle.RaffleState)"}},"id":347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"OPEN","nodeType":"MemberAccess","referencedDeclaration":235,"src":"2016:16:5","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$237","typeString":"enum Raffle.RaffleState"}},"src":"1999:33:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":353,"nodeType":"IfStatement","src":"1995:86:5","trueBody":{"id":352,"nodeType":"Block","src":"2034:47:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":349,"name":"Raffle__RAFFLENOTOPEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"2050:21:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2050:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":351,"nodeType":"RevertStatement","src":"2043:30:5"}]}},{"expression":{"arguments":[{"arguments":[{"expression":{"id":359,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2111:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2111:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2103:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"2103:8:5","stateMutability":"payable","typeDescriptions":{}}},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2103:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"expression":{"id":354,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"2088:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"2088:14:5","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_payable_$dyn_storage_ptr_$_t_address_payable_$returns$__$bound_to$_t_array$_t_address_payable_$dyn_storage_ptr_$","typeString":"function (address payable[] storage pointer,address payable)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2088:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":363,"nodeType":"ExpressionStatement","src":"2088:35:5"},{"eventCall":{"arguments":[{"expression":{"id":365,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2147:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2147:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":364,"name":"raffleEnter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"2135:11:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2135:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":368,"nodeType":"EmitStatement","src":"2130:28:5"}]},"functionSelector":"2cfcc539","id":370,"implemented":true,"kind":"function","modifiers":[],"name":"enterRaffle","nameLocation":"1876:11:5","nodeType":"FunctionDefinition","parameters":{"id":334,"nodeType":"ParameterList","parameters":[],"src":"1887:2:5"},"returnParameters":{"id":335,"nodeType":"ParameterList","parameters":[],"src":"1905:0:5"},"scope":633,"src":"1867:296:5","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[50],"body":{"id":431,"nodeType":"Block","src":"2355:375:5","statements":[{"assignments":[381],"declarations":[{"constant":false,"id":381,"mutability":"mutable","name":"isOpen","nameLocation":"2371:6:5","nodeType":"VariableDeclaration","scope":431,"src":"2366:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":380,"name":"bool","nodeType":"ElementaryTypeName","src":"2366:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":387,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_enum$_RaffleState_$237","typeString":"enum Raffle.RaffleState"},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":382,"name":"RaffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"2382:11:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RaffleState_$237_$","typeString":"type(enum Raffle.RaffleState)"}},"id":383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"OPEN","nodeType":"MemberAccess","referencedDeclaration":235,"src":"2382:16:5","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$237","typeString":"enum Raffle.RaffleState"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":384,"name":"s_raffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"2402:13:5","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$237","typeString":"enum Raffle.RaffleState"}},"src":"2382:33:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":386,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2381:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2366:50:5"},{"assignments":[389],"declarations":[{"constant":false,"id":389,"mutability":"mutable","name":"hasPlayers","nameLocation":"2432:10:5","nodeType":"VariableDeclaration","scope":431,"src":"2427:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":388,"name":"bool","nodeType":"ElementaryTypeName","src":"2427:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":394,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":390,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"2446:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2446:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2465:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2446:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2427:39:5"},{"assignments":[396],"declarations":[{"constant":false,"id":396,"mutability":"mutable","name":"hasBalance","nameLocation":"2482:10:5","nodeType":"VariableDeclaration","scope":431,"src":"2477:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":395,"name":"bool","nodeType":"ElementaryTypeName","src":"2477:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":404,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":399,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2506:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Raffle_$633","typeString":"contract Raffle"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Raffle_$633","typeString":"contract Raffle"}],"id":398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2497:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":397,"name":"address","nodeType":"ElementaryTypeName","src":"2497:7:5","typeDescriptions":{}}},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2497:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2497:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2522:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2497:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2477:46:5"},{"assignments":[406],"declarations":[{"constant":false,"id":406,"mutability":"mutable","name":"timeIsValid","nameLocation":"2540:11:5","nodeType":"VariableDeclaration","scope":431,"src":"2535:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":405,"name":"bool","nodeType":"ElementaryTypeName","src":"2535:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":415,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":407,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2557:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"2557:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":409,"name":"s_lastTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"2575:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2557:33:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":411,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2556:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":412,"name":"i_interval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"2594:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2556:48:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":414,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2555:51:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2535:71:5"},{"expression":{"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":416,"name":"upkeepNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"2617:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":417,"name":"isOpen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"2633:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":418,"name":"hasPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"2643:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2633:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":420,"name":"hasBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"2657:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2633:34:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":422,"name":"timeIsValid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"2671:11:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2633:49:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":424,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2632:51:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2617:66:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":426,"nodeType":"ExpressionStatement","src":"2617:66:5"},{"expression":{"components":[{"id":427,"name":"upkeepNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"2702:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"307830","id":428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2716:5:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_77b7d82d931e1a403db0240b08c0716665eec4664af617c457918e4a67bc1810","typeString":"literal_string \"0x0\""},"value":"0x0"}],"id":429,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2701:21:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_stringliteral_77b7d82d931e1a403db0240b08c0716665eec4664af617c457918e4a67bc1810_$","typeString":"tuple(bool,literal_string \"0x0\")"}},"functionReturnParameters":379,"id":430,"nodeType":"Return","src":"2694:28:5"}]},"functionSelector":"6e04ff0d","id":432,"implemented":true,"kind":"function","modifiers":[],"name":"checkUpkeep","nameLocation":"2175:11:5","nodeType":"FunctionDefinition","overrides":{"id":374,"nodeType":"OverrideSpecifier","overrides":[],"src":"2272:8:5"},"parameters":{"id":373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":432,"src":"2197:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":371,"name":"bytes","nodeType":"ElementaryTypeName","src":"2197:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2186:46:5"},"returnParameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":376,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"2304:12:5","nodeType":"VariableDeclaration","scope":432,"src":"2299:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":375,"name":"bool","nodeType":"ElementaryTypeName","src":"2299:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":432,"src":"2318:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":377,"name":"bytes","nodeType":"ElementaryTypeName","src":"2318:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2298:51:5"},"scope":633,"src":"2166:564:5","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[56],"body":{"id":482,"nodeType":"Block","src":"2811:549:5","statements":[{"assignments":[439,null],"declarations":[{"constant":false,"id":439,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"2822:12:5","nodeType":"VariableDeclaration","scope":482,"src":"2817:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":438,"name":"bool","nodeType":"ElementaryTypeName","src":"2817:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":443,"initialValue":{"arguments":[{"hexValue":"","id":441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2852:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":440,"name":"checkUpkeep","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"2840:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2840:15:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2816:39:5"},{"condition":{"id":445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2864:13:5","subExpression":{"id":444,"name":"upkeepNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"2865:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":461,"nodeType":"IfStatement","src":"2860:164:5","trueBody":{"id":460,"nodeType":"Block","src":"2879:145:5","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":449,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2928:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Raffle_$633","typeString":"contract Raffle"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Raffle_$633","typeString":"contract Raffle"}],"id":448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2920:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":447,"name":"address","nodeType":"ElementaryTypeName","src":"2920:7:5","typeDescriptions":{}}},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2920:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2920:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":452,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"2960:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2960:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":456,"name":"s_raffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"3003:13:5","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$237","typeString":"enum Raffle.RaffleState"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RaffleState_$237","typeString":"enum Raffle.RaffleState"}],"id":455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2995:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":454,"name":"uint256","nodeType":"ElementaryTypeName","src":"2995:7:5","typeDescriptions":{}}},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2995:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":446,"name":"Raffle_UPKEEPNOTNEEDED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"2897:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256) pure"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2897:121:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":459,"nodeType":"RevertStatement","src":"2890:128:5"}]}},{"expression":{"id":465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":462,"name":"s_raffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"3029:13:5","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$237","typeString":"enum Raffle.RaffleState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":463,"name":"RaffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"3045:11:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RaffleState_$237_$","typeString":"type(enum Raffle.RaffleState)"}},"id":464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"CALCULATING","nodeType":"MemberAccess","referencedDeclaration":236,"src":"3045:23:5","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$237","typeString":"enum Raffle.RaffleState"}},"src":"3029:39:5","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$237","typeString":"enum Raffle.RaffleState"}},"id":466,"nodeType":"ExpressionStatement","src":"3029:39:5"},{"assignments":[468],"declarations":[{"constant":false,"id":468,"mutability":"mutable","name":"requestId","nameLocation":"3085:9:5","nodeType":"VariableDeclaration","scope":482,"src":"3077:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":467,"name":"uint256","nodeType":"ElementaryTypeName","src":"3077:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":477,"initialValue":{"arguments":[{"id":471,"name":"i_gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"3149:9:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":472,"name":"i_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"3173:16:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":473,"name":"REQUEST_CONFIRMATIONS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"3204:21:5","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":474,"name":"i_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"3240:18:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":475,"name":"NUM_WORDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"3273:9:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":469,"name":"i_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":245,"src":"3099:16:5","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$153","typeString":"contract VRFCoordinatorV2Interface"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"requestRandomWords","nodeType":"MemberAccess","referencedDeclaration":86,"src":"3099:35:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$returns$_t_uint256_$","typeString":"function (bytes32,uint64,uint16,uint32,uint32) external returns (uint256)"}},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3099:194:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3077:216:5"},{"eventCall":{"arguments":[{"id":479,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"3331:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":478,"name":"requestedRaffleWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"3309:21:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3309:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":481,"nodeType":"EmitStatement","src":"3304:37:5"}]},"functionSelector":"4585e33b","id":483,"implemented":true,"kind":"function","modifiers":[],"name":"performUpkeep","nameLocation":"2745:13:5","nodeType":"FunctionDefinition","overrides":{"id":436,"nodeType":"OverrideSpecifier","overrides":[],"src":"2802:8:5"},"parameters":{"id":435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":434,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":483,"src":"2759:14:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":433,"name":"bytes","nodeType":"ElementaryTypeName","src":"2759:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2758:34:5"},"returnParameters":{"id":437,"nodeType":"ParameterList","parameters":[],"src":"2811:0:5"},"scope":633,"src":"2736:624:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[184],"body":{"id":553,"nodeType":"Block","src":"3466:525:5","statements":[{"assignments":[493],"declarations":[{"constant":false,"id":493,"mutability":"mutable","name":"indexOfWinner","nameLocation":"3482:13:5","nodeType":"VariableDeclaration","scope":553,"src":"3474:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":492,"name":"uint256","nodeType":"ElementaryTypeName","src":"3474:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":500,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":494,"name":"_randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"3498:12:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":496,"indexExpression":{"hexValue":"30","id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3511:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3498:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"expression":{"id":497,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"3516:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3516:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3498:34:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3474:58:5"},{"assignments":[502],"declarations":[{"constant":false,"id":502,"mutability":"mutable","name":"addressOfWinner","nameLocation":"3556:15:5","nodeType":"VariableDeclaration","scope":553,"src":"3540:31:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":501,"name":"address","nodeType":"ElementaryTypeName","src":"3540:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"id":506,"initialValue":{"baseExpression":{"id":503,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"3575:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":505,"indexExpression":{"id":504,"name":"indexOfWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"3585:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3575:24:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"VariableDeclarationStatement","src":"3540:59:5"},{"expression":{"id":509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":507,"name":"s_recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"3607:14:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":508,"name":"addressOfWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"3624:15:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"3607:32:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":510,"nodeType":"ExpressionStatement","src":"3607:32:5"},{"expression":{"id":517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":511,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"3647:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3681:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3659:21:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_payable_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address payable[] memory)"},"typeName":{"baseType":{"id":512,"name":"address","nodeType":"ElementaryTypeName","src":"3663:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":513,"nodeType":"ArrayTypeName","src":"3663:17:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage_ptr","typeString":"address payable[]"}}},"id":516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3659:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_memory_ptr","typeString":"address payable[] memory"}},"src":"3647:36:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":518,"nodeType":"ExpressionStatement","src":"3647:36:5"},{"expression":{"id":522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":519,"name":"s_raffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"3691:13:5","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$237","typeString":"enum Raffle.RaffleState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":520,"name":"RaffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"3707:11:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RaffleState_$237_$","typeString":"type(enum Raffle.RaffleState)"}},"id":521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"OPEN","nodeType":"MemberAccess","referencedDeclaration":235,"src":"3707:16:5","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$237","typeString":"enum Raffle.RaffleState"}},"src":"3691:32:5","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$237","typeString":"enum Raffle.RaffleState"}},"id":523,"nodeType":"ExpressionStatement","src":"3691:32:5"},{"expression":{"id":527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":524,"name":"s_lastTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"3731:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":525,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3750:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"3750:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:34:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":528,"nodeType":"ExpressionStatement","src":"3731:34:5"},{"assignments":[530,null],"declarations":[{"constant":false,"id":530,"mutability":"mutable","name":"success","nameLocation":"3788:7:5","nodeType":"VariableDeclaration","scope":553,"src":"3783:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":529,"name":"bool","nodeType":"ElementaryTypeName","src":"3783:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":541,"initialValue":{"arguments":[{"hexValue":"","id":539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3852:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":531,"name":"addressOfWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"3801:15:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"3801:20:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"arguments":[{"id":535,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3837:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Raffle_$633","typeString":"contract Raffle"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Raffle_$633","typeString":"contract Raffle"}],"id":534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3829:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":533,"name":"address","nodeType":"ElementaryTypeName","src":"3829:7:5","typeDescriptions":{}}},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3829:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"3829:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3801:50:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3801:54:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3782:73:5"},{"condition":{"id":543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3869:8:5","subExpression":{"id":542,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"3870:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":548,"nodeType":"IfStatement","src":"3865:74:5","trueBody":{"id":547,"nodeType":"Block","src":"3879:60:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":544,"name":"Raffle_BALANCETRANSFERFAILED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"3898:28:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3898:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":546,"nodeType":"RevertStatement","src":"3891:37:5"}]}},{"eventCall":{"arguments":[{"id":550,"name":"addressOfWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"3970:15:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":549,"name":"randomWinnerPicked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"3951:18:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3951:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":552,"nodeType":"EmitStatement","src":"3946:40:5"}]},"id":554,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"3372:18:5","nodeType":"FunctionDefinition","overrides":{"id":490,"nodeType":"OverrideSpecifier","overrides":[],"src":"3458:8:5"},"parameters":{"id":489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":554,"src":"3393:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":484,"name":"uint256","nodeType":"ElementaryTypeName","src":"3393:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":488,"mutability":"mutable","name":"_randomWords","nameLocation":"3434:12:5","nodeType":"VariableDeclaration","scope":554,"src":"3417:29:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":486,"name":"uint256","nodeType":"ElementaryTypeName","src":"3417:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":487,"nodeType":"ArrayTypeName","src":"3417:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3390:58:5"},"returnParameters":{"id":491,"nodeType":"ParameterList","parameters":[],"src":"3466:0:5"},"scope":633,"src":"3363:628:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":561,"nodeType":"Block","src":"4051:32:5","statements":[{"expression":{"id":559,"name":"i_entranceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"4065:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":558,"id":560,"nodeType":"Return","src":"4058:20:5"}]},"functionSelector":"09bc33a7","id":562,"implemented":true,"kind":"function","modifiers":[],"name":"getEntranceFee","nameLocation":"4005:14:5","nodeType":"FunctionDefinition","parameters":{"id":555,"nodeType":"ParameterList","parameters":[],"src":"4019:2:5"},"returnParameters":{"id":558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":557,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":562,"src":"4042:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":556,"name":"uint256","nodeType":"ElementaryTypeName","src":"4042:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4041:9:5"},"scope":633,"src":"3996:87:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":573,"nodeType":"Block","src":"4150:35:5","statements":[{"expression":{"baseExpression":{"id":569,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"4164:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":571,"indexExpression":{"id":570,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"4174:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4164:16:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"functionReturnParameters":568,"id":572,"nodeType":"Return","src":"4157:23:5"}]},"functionSelector":"460e2049","id":574,"implemented":true,"kind":"function","modifiers":[],"name":"getPlayers","nameLocation":"4095:10:5","nodeType":"FunctionDefinition","parameters":{"id":565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":564,"mutability":"mutable","name":"index","nameLocation":"4114:5:5","nodeType":"VariableDeclaration","scope":574,"src":"4106:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":563,"name":"uint256","nodeType":"ElementaryTypeName","src":"4106:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4105:15:5"},"returnParameters":{"id":568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":574,"src":"4141:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"4141:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4140:9:5"},"scope":633,"src":"4086:99:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":581,"nodeType":"Block","src":"4245:32:5","statements":[{"expression":{"id":579,"name":"s_recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"4258:14:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":578,"id":580,"nodeType":"Return","src":"4251:21:5"}]},"functionSelector":"473f1ddc","id":582,"implemented":true,"kind":"function","modifiers":[],"name":"getRecentWinner","nameLocation":"4197:15:5","nodeType":"FunctionDefinition","parameters":{"id":575,"nodeType":"ParameterList","parameters":[],"src":"4212:2:5"},"returnParameters":{"id":578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":582,"src":"4236:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":576,"name":"address","nodeType":"ElementaryTypeName","src":"4236:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4235:9:5"},"scope":633,"src":"4188:89:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":590,"nodeType":"Block","src":"4340:31:5","statements":[{"expression":{"id":588,"name":"s_raffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"4353:13:5","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$237","typeString":"enum Raffle.RaffleState"}},"functionReturnParameters":587,"id":589,"nodeType":"Return","src":"4346:20:5"}]},"functionSelector":"115cbaf5","id":591,"implemented":true,"kind":"function","modifiers":[],"name":"getRaffleState","nameLocation":"4289:14:5","nodeType":"FunctionDefinition","parameters":{"id":583,"nodeType":"ParameterList","parameters":[],"src":"4303:2:5"},"returnParameters":{"id":587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":586,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":591,"src":"4327:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$237","typeString":"enum Raffle.RaffleState"},"typeName":{"id":585,"nodeType":"UserDefinedTypeName","pathNode":{"id":584,"name":"RaffleState","nodeType":"IdentifierPath","referencedDeclaration":237,"src":"4327:11:5"},"referencedDeclaration":237,"src":"4327:11:5","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$237","typeString":"enum Raffle.RaffleState"}},"visibility":"internal"}],"src":"4326:13:5"},"scope":633,"src":"4280:91:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":598,"nodeType":"Block","src":"4426:27:5","statements":[{"expression":{"id":596,"name":"NUM_WORDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"4439:9:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":595,"id":597,"nodeType":"Return","src":"4432:16:5"}]},"functionSelector":"53a2c19a","id":599,"implemented":true,"kind":"function","modifiers":[],"name":"getNumWords","nameLocation":"4383:11:5","nodeType":"FunctionDefinition","parameters":{"id":592,"nodeType":"ParameterList","parameters":[],"src":"4394:2:5"},"returnParameters":{"id":595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":599,"src":"4418:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":593,"name":"uint32","nodeType":"ElementaryTypeName","src":"4418:6:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"4417:8:5"},"scope":633,"src":"4374:79:5","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":607,"nodeType":"Block","src":"4515:34:5","statements":[{"expression":{"expression":{"id":604,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"4528:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4528:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":603,"id":606,"nodeType":"Return","src":"4521:23:5"}]},"functionSelector":"fd6673f5","id":608,"implemented":true,"kind":"function","modifiers":[],"name":"getNumberOfPlayers","nameLocation":"4465:18:5","nodeType":"FunctionDefinition","parameters":{"id":600,"nodeType":"ParameterList","parameters":[],"src":"4484:2:5"},"returnParameters":{"id":603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":602,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":608,"src":"4507:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":601,"name":"uint256","nodeType":"ElementaryTypeName","src":"4507:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4506:9:5"},"scope":633,"src":"4456:93:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":615,"nodeType":"Block","src":"4616:39:5","statements":[{"expression":{"id":613,"name":"REQUEST_CONFIRMATIONS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"4629:21:5","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":612,"id":614,"nodeType":"Return","src":"4622:28:5"}]},"functionSelector":"5f1b0fd8","id":616,"implemented":true,"kind":"function","modifiers":[],"name":"getRequestConfirmations","nameLocation":"4561:23:5","nodeType":"FunctionDefinition","parameters":{"id":609,"nodeType":"ParameterList","parameters":[],"src":"4585:2:5"},"returnParameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":616,"src":"4608:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":610,"name":"uint256","nodeType":"ElementaryTypeName","src":"4608:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4607:9:5"},"scope":633,"src":"4552:103:5","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":623,"nodeType":"Block","src":"4710:28:5","statements":[{"expression":{"id":621,"name":"i_interval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"4723:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":620,"id":622,"nodeType":"Return","src":"4716:17:5"}]},"functionSelector":"91ad27b4","id":624,"implemented":true,"kind":"function","modifiers":[],"name":"getInterval","nameLocation":"4667:11:5","nodeType":"FunctionDefinition","parameters":{"id":617,"nodeType":"ParameterList","parameters":[],"src":"4679:2:5"},"returnParameters":{"id":620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":624,"src":"4702:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":618,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:9:5"},"scope":633,"src":"4658:80:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":631,"nodeType":"Block","src":"4800:32:5","statements":[{"expression":{"id":629,"name":"s_lastTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"4812:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":628,"id":630,"nodeType":"Return","src":"4805:22:5"}]},"functionSelector":"320229eb","id":632,"implemented":true,"kind":"function","modifiers":[],"name":"getLatestTimeStamp","nameLocation":"4750:18:5","nodeType":"FunctionDefinition","parameters":{"id":625,"nodeType":"ParameterList","parameters":[],"src":"4768:2:5"},"returnParameters":{"id":628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":632,"src":"4791:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":626,"name":"uint256","nodeType":"ElementaryTypeName","src":"4791:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4790:9:5"},"scope":633,"src":"4741:91:5","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":634,"src":"494:4341:5","usedErrors":[3,162,218,220,222,230]}],"src":"33:4802:5"},"id":5}},"contracts":{"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol":{"AutomationBase":{"abi":[{"inputs":[],"name":"OnlySimulatedBackend","type":"error"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220eda66e1bfb2401a21655edf24fdb3d0032f0903f58e5c788e4706ead8b196ca364736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED 0xA6 PUSH15 0x1BFB2401A21655EDF24FDB3D0032F0 SWAP1 EXTCODEHASH PC 0xE5 0xC7 DUP9 0xE4 PUSH17 0x6EAD8B196CA364736F6C63430008070033 ","sourceMap":"57:515:0:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea2646970667358221220eda66e1bfb2401a21655edf24fdb3d0032f0903f58e5c788e4706ead8b196ca364736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED 0xA6 PUSH15 0x1BFB2401A21655EDF24FDB3D0032F0 SWAP1 EXTCODEHASH PC 0xE5 0xC7 DUP9 0xE4 PUSH17 0x6EAD8B196CA364736F6C63430008070033 ","sourceMap":"57:515:0:-:0;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"12600","executionCost":"66","totalCost":"12666"},"internal":{"preventExecution()":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OnlySimulatedBackend\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":\"AutomationBase\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract AutomationBase {\\n  error OnlySimulatedBackend();\\n\\n  /**\\n   * @notice method that allows it to be simulated via eth_call by checking that\\n   * the sender is the zero address.\\n   */\\n  function preventExecution() internal view {\\n    if (tx.origin != address(0)) {\\n      revert OnlySimulatedBackend();\\n    }\\n  }\\n\\n  /**\\n   * @notice modifier that allows it to be simulated via eth_call by checking\\n   * that the sender is the zero address.\\n   */\\n  modifier cannotExecute() {\\n    preventExecution();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x5d354afa1a97dffe66094397cdcbb0c14713cf3d609d88fd8f9891010e9a351a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol":{"AutomationCompatible":{"abi":[{"inputs":[],"name":"OnlySimulatedBackend","type":"error"},{"inputs":[{"internalType":"bytes","name":"checkData","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"performData","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"performData","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"checkUpkeep(bytes)":{"details":"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.","params":{"checkData":"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract."},"returns":{"performData":"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.","upkeepNeeded":"boolean to indicate whether the keeper should call performUpkeep or not."}},"performUpkeep(bytes)":{"details":"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.","params":{"performData":"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"checkUpkeep(bytes)":"6e04ff0d","performUpkeep(bytes)":"4585e33b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OnlySimulatedBackend\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":\"AutomationCompatible\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract AutomationBase {\\n  error OnlySimulatedBackend();\\n\\n  /**\\n   * @notice method that allows it to be simulated via eth_call by checking that\\n   * the sender is the zero address.\\n   */\\n  function preventExecution() internal view {\\n    if (tx.origin != address(0)) {\\n      revert OnlySimulatedBackend();\\n    }\\n  }\\n\\n  /**\\n   * @notice modifier that allows it to be simulated via eth_call by checking\\n   * that the sender is the zero address.\\n   */\\n  modifier cannotExecute() {\\n    preventExecution();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x5d354afa1a97dffe66094397cdcbb0c14713cf3d609d88fd8f9891010e9a351a\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./AutomationBase.sol\\\";\\nimport \\\"./interfaces/AutomationCompatibleInterface.sol\\\";\\n\\nabstract contract AutomationCompatible is AutomationBase, AutomationCompatibleInterface {}\\n\",\"keccak256\":\"0x40e5ae0eff4edd0740c1b5590d09c344f84dee031e82d5294563e99603774f80\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AutomationCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"checkUpkeep(bytes)":{"notice":"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas."},"performUpkeep(bytes)":{"notice":"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed."}},"version":1}}},"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol":{"AutomationCompatibleInterface":{"abi":[{"inputs":[{"internalType":"bytes","name":"checkData","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"performData","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"performData","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"checkUpkeep(bytes)":{"details":"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.","params":{"checkData":"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract."},"returns":{"performData":"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.","upkeepNeeded":"boolean to indicate whether the keeper should call performUpkeep or not."}},"performUpkeep(bytes)":{"details":"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.","params":{"performData":"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"checkUpkeep(bytes)":"6e04ff0d","performUpkeep(bytes)":"4585e33b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":\"AutomationCompatibleInterface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AutomationCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"checkUpkeep(bytes)":{"notice":"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas."},"performUpkeep(bytes)":{"notice":"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed."}},"version":1}}},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"VRFCoordinatorV2Interface":{"abi":[{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getRequestConfig","outputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"pendingRequestExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"numWords","type":"uint32"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"details":"will revert if original owner of subId has not requested that msg.sender become the new owner.","params":{"subId":"- ID of the subscription"}},"addConsumer(uint64,address)":{"params":{"consumer":"- New consumer which can use the subscription","subId":"- ID of the subscription"}},"cancelSubscription(uint64,address)":{"params":{"subId":"- ID of the subscription","to":"- Where to send the remaining LINK to"}},"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));","returns":{"subId":"- A unique subscription id."}},"getRequestConfig()":{"returns":{"_0":"minimumRequestConfirmations global min for request confirmations","_1":"maxGasLimit global max for request gas limit","_2":"s_provingKeyHashes list of registered key hashes"}},"getSubscription(uint64)":{"params":{"subId":"- ID of the subscription"},"returns":{"balance":"- LINK balance of the subscription in juels.","consumers":"- list of consumer address which are able to use this subscription.","owner":"- owner of the subscription.","reqCount":"- number of requests for this subscription, determines fee tier."}},"removeConsumer(uint64,address)":{"params":{"consumer":"- Consumer to remove from the subscription","subId":"- ID of the subscription"}},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"params":{"callbackGasLimit":"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]","keyHash":"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.","minimumRequestConfirmations":"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].","numWords":"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.","subId":"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash."},"returns":{"requestId":"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords."}},"requestSubscriptionOwnerTransfer(uint64,address)":{"params":{"newOwner":"- proposed new owner of the subscription","subId":"- ID of the subscription"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptSubscriptionOwnerTransfer(uint64)":"82359740","addConsumer(uint64,address)":"7341c10c","cancelSubscription(uint64,address)":"d7ae1d30","createSubscription()":"a21a23e4","getRequestConfig()":"00012291","getSubscription(uint64)":"a47c7696","pendingRequestExists(uint64)":"e82ad7d4","removeConsumer(uint64,address)":"9f87fad7","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"5d3b1d30","requestSubscriptionOwnerTransfer(uint64,address)":"04c357cb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint64,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"getRequestConfig()\":{\"returns\":{\"_0\":\"minimumRequestConfirmations global min for request confirmations\",\"_1\":\"maxGasLimit global max for request gas limit\",\"_2\":\"s_provingKeyHashes list of registered key hashes\"}},\"getSubscription(uint64)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- number of requests for this subscription, determines fee tier.\"}},\"removeConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"params\":{\"callbackGasLimit\":\"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]\",\"keyHash\":\"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.\",\"minimumRequestConfirmations\":\"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].\",\"numWords\":\"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.\",\"subId\":\"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash.\"},\"returns\":{\"requestId\":\"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords.\"}},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"notice\":\"Request subscription owner transfer.\"},\"addConsumer(uint64,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint64,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"getRequestConfig()\":{\"notice\":\"Get configuration relevant for making requests\"},\"getSubscription(uint64)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint64,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"notice\":\"Request a set of random words.\"},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":\"VRFCoordinatorV2Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig() external view returns (uint16, uint32, bytes32[] memory);\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(\\n    uint64 subId\\n  ) external view returns (uint96 balance, uint64 reqCount, address owner, address[] memory consumers);\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint64 subId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa9f8b7e09811f4ac9f421116b5d6bcf50b5748025c0cb012aaf5ff7c39a6b46a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"notice":"Request subscription owner transfer."},"addConsumer(uint64,address)":{"notice":"Add a consumer to a VRF subscription."},"cancelSubscription(uint64,address)":{"notice":"Cancel a subscription"},"createSubscription()":{"notice":"Create a VRF subscription."},"getRequestConfig()":{"notice":"Get configuration relevant for making requests"},"getSubscription(uint64)":{"notice":"Get a VRF subscription."},"removeConsumer(uint64,address)":{"notice":"Remove a consumer from a VRF subscription."},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"notice":"Request a set of random words."},"requestSubscriptionOwnerTransfer(uint64,address)":{"notice":"Request subscription owner transfer."}},"version":1}}},"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol":{"VRFConsumerBaseV2":{"abi":[{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).","kind":"dev","methods":{"constructor":{"params":{"_vrfCoordinator":"address of VRFCoordinator contract"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"rawFulfillRandomWords(uint256,uint256[])":"1fe543e3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vrfCoordinator\":\"address of VRFCoordinator contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":\"VRFConsumerBaseV2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************","version":1}}},"contracts/Raffle.sol":{"Raffle":{"abi":[{"inputs":[{"internalType":"address","name":"vrfCoordinatorV2","type":"address"},{"internalType":"uint256","name":"entranceFee","type":"uint256"},{"internalType":"bytes32","name":"gasLane","type":"bytes32"},{"internalType":"uint64","name":"subscriptionId","type":"uint64"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint256","name":"interval","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[],"name":"OnlySimulatedBackend","type":"error"},{"inputs":[],"name":"Raffle_BALANCETRANSFERFAILED","type":"error"},{"inputs":[{"internalType":"uint256","name":"currentBalance","type":"uint256"},{"internalType":"uint256","name":"players","type":"uint256"},{"internalType":"uint256","name":"raffleState","type":"uint256"}],"name":"Raffle_UPKEEPNOTNEEDED","type":"error"},{"inputs":[],"name":"Raffle__NOTENOUGHETH","type":"error"},{"inputs":[],"name":"Raffle__RAFFLENOTOPEN","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"player","type":"address"}],"name":"raffleEnter","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"theWinner","type":"address"}],"name":"randomWinnerPicked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"requestId","type":"uint256"}],"name":"requestedRaffleWinner","type":"event"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"enterRaffle","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"getEntranceFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getInterval","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLatestTimeStamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getNumWords","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getNumberOfPlayers","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getPlayers","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRaffleState","outputs":[{"internalType":"enum Raffle.RaffleState","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRecentWinner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRequestConfirmations","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"i_vrfCoordinator","outputs":[{"internalType":"contract VRFCoordinatorV2Interface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"s_players","outputs":[{"internalType":"address payable","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_175":{"entryPoint":null,"id":175,"parameterSlots":1,"returnSlots":0},"@_333":{"entryPoint":null,"id":333,"parameterSlots":6,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":314,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":337,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":360,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32_fromMemory":{"entryPoint":383,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64_fromMemory":{"entryPoint":406,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256t_bytes32t_uint64t_uint32t_uint256_fromMemory":{"entryPoint":429,"id":null,"parameterSlots":2,"returnSlots":6},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":585,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":605,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":615,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":647,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":657,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":673,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x21":{"entryPoint":693,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":740,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":745,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":771,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":797,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":823,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":849,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3636:6","statements":[{"body":{"nodeType":"YulBlock","src":"70:80:6","statements":[{"nodeType":"YulAssignment","src":"80:22:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"89:5:6"},"nodeType":"YulFunctionCall","src":"89:13:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"80:5:6"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"138:5:6"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"111:26:6"},"nodeType":"YulFunctionCall","src":"111:33:6"},"nodeType":"YulExpressionStatement","src":"111:33:6"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"48:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"56:3:6","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:6","type":""}],"src":"7:143:6"},{"body":{"nodeType":"YulBlock","src":"219:80:6","statements":[{"nodeType":"YulAssignment","src":"229:22:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"244:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"238:5:6"},"nodeType":"YulFunctionCall","src":"238:13:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"229:5:6"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"287:5:6"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"260:26:6"},"nodeType":"YulFunctionCall","src":"260:33:6"},"nodeType":"YulExpressionStatement","src":"260:33:6"}]},"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"197:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"205:3:6","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"213:5:6","type":""}],"src":"156:143:6"},{"body":{"nodeType":"YulBlock","src":"368:80:6","statements":[{"nodeType":"YulAssignment","src":"378:22:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"393:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"387:5:6"},"nodeType":"YulFunctionCall","src":"387:13:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"378:5:6"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"436:5:6"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"409:26:6"},"nodeType":"YulFunctionCall","src":"409:33:6"},"nodeType":"YulExpressionStatement","src":"409:33:6"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"346:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"354:3:6","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"362:5:6","type":""}],"src":"305:143:6"},{"body":{"nodeType":"YulBlock","src":"516:79:6","statements":[{"nodeType":"YulAssignment","src":"526:22:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"541:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"535:5:6"},"nodeType":"YulFunctionCall","src":"535:13:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"526:5:6"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"583:5:6"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"557:25:6"},"nodeType":"YulFunctionCall","src":"557:32:6"},"nodeType":"YulExpressionStatement","src":"557:32:6"}]},"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"494:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"502:3:6","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"510:5:6","type":""}],"src":"454:141:6"},{"body":{"nodeType":"YulBlock","src":"663:79:6","statements":[{"nodeType":"YulAssignment","src":"673:22:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"688:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"682:5:6"},"nodeType":"YulFunctionCall","src":"682:13:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"673:5:6"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"730:5:6"}],"functionName":{"name":"validator_revert_t_uint64","nodeType":"YulIdentifier","src":"704:25:6"},"nodeType":"YulFunctionCall","src":"704:32:6"},"nodeType":"YulExpressionStatement","src":"704:32:6"}]},"name":"abi_decode_t_uint64_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"641:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"649:3:6","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"657:5:6","type":""}],"src":"601:141:6"},{"body":{"nodeType":"YulBlock","src":"908:970:6","statements":[{"body":{"nodeType":"YulBlock","src":"955:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"957:77:6"},"nodeType":"YulFunctionCall","src":"957:79:6"},"nodeType":"YulExpressionStatement","src":"957:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"929:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"938:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"925:3:6"},"nodeType":"YulFunctionCall","src":"925:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"950:3:6","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"921:3:6"},"nodeType":"YulFunctionCall","src":"921:33:6"},"nodeType":"YulIf","src":"918:120:6"},{"nodeType":"YulBlock","src":"1048:128:6","statements":[{"nodeType":"YulVariableDeclaration","src":"1063:15:6","value":{"kind":"number","nodeType":"YulLiteral","src":"1077:1:6","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1067:6:6","type":""}]},{"nodeType":"YulAssignment","src":"1092:74:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1138:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"1149:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1134:3:6"},"nodeType":"YulFunctionCall","src":"1134:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1158:7:6"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1102:31:6"},"nodeType":"YulFunctionCall","src":"1102:64:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1092:6:6"}]}]},{"nodeType":"YulBlock","src":"1186:129:6","statements":[{"nodeType":"YulVariableDeclaration","src":"1201:16:6","value":{"kind":"number","nodeType":"YulLiteral","src":"1215:2:6","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1205:6:6","type":""}]},{"nodeType":"YulAssignment","src":"1231:74:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1277:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"1288:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1273:3:6"},"nodeType":"YulFunctionCall","src":"1273:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1297:7:6"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"1241:31:6"},"nodeType":"YulFunctionCall","src":"1241:64:6"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1231:6:6"}]}]},{"nodeType":"YulBlock","src":"1325:129:6","statements":[{"nodeType":"YulVariableDeclaration","src":"1340:16:6","value":{"kind":"number","nodeType":"YulLiteral","src":"1354:2:6","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1344:6:6","type":""}]},{"nodeType":"YulAssignment","src":"1370:74:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"1427:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:6"},"nodeType":"YulFunctionCall","src":"1412:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1436:7:6"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"1380:31:6"},"nodeType":"YulFunctionCall","src":"1380:64:6"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1370:6:6"}]}]},{"nodeType":"YulBlock","src":"1464:128:6","statements":[{"nodeType":"YulVariableDeclaration","src":"1479:16:6","value":{"kind":"number","nodeType":"YulLiteral","src":"1493:2:6","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1483:6:6","type":""}]},{"nodeType":"YulAssignment","src":"1509:73:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1554:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"1565:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1550:3:6"},"nodeType":"YulFunctionCall","src":"1550:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1574:7:6"}],"functionName":{"name":"abi_decode_t_uint64_fromMemory","nodeType":"YulIdentifier","src":"1519:30:6"},"nodeType":"YulFunctionCall","src":"1519:63:6"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1509:6:6"}]}]},{"nodeType":"YulBlock","src":"1602:129:6","statements":[{"nodeType":"YulVariableDeclaration","src":"1617:17:6","value":{"kind":"number","nodeType":"YulLiteral","src":"1631:3:6","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1621:6:6","type":""}]},{"nodeType":"YulAssignment","src":"1648:73:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1693:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"1704:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1689:3:6"},"nodeType":"YulFunctionCall","src":"1689:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1713:7:6"}],"functionName":{"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulIdentifier","src":"1658:30:6"},"nodeType":"YulFunctionCall","src":"1658:63:6"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"1648:6:6"}]}]},{"nodeType":"YulBlock","src":"1741:130:6","statements":[{"nodeType":"YulVariableDeclaration","src":"1756:17:6","value":{"kind":"number","nodeType":"YulLiteral","src":"1770:3:6","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1760:6:6","type":""}]},{"nodeType":"YulAssignment","src":"1787:74:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1833:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"1844:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1829:3:6"},"nodeType":"YulFunctionCall","src":"1829:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1853:7:6"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"1797:31:6"},"nodeType":"YulFunctionCall","src":"1797:64:6"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"1787:6:6"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_bytes32t_uint64t_uint32t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"838:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"849:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"861:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"869:6:6","type":""},{"name":"value2","nodeType":"YulTypedName","src":"877:6:6","type":""},{"name":"value3","nodeType":"YulTypedName","src":"885:6:6","type":""},{"name":"value4","nodeType":"YulTypedName","src":"893:6:6","type":""},{"name":"value5","nodeType":"YulTypedName","src":"901:6:6","type":""}],"src":"748:1130:6"},{"body":{"nodeType":"YulBlock","src":"1924:35:6","statements":[{"nodeType":"YulAssignment","src":"1934:19:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1950:2:6","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1944:5:6"},"nodeType":"YulFunctionCall","src":"1944:9:6"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1934:6:6"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1917:6:6","type":""}],"src":"1884:75:6"},{"body":{"nodeType":"YulBlock","src":"2010:51:6","statements":[{"nodeType":"YulAssignment","src":"2020:35:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2049:5:6"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2031:17:6"},"nodeType":"YulFunctionCall","src":"2031:24:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2020:7:6"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1992:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2002:7:6","type":""}],"src":"1965:96:6"},{"body":{"nodeType":"YulBlock","src":"2112:32:6","statements":[{"nodeType":"YulAssignment","src":"2122:16:6","value":{"name":"value","nodeType":"YulIdentifier","src":"2133:5:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2122:7:6"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2094:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2104:7:6","type":""}],"src":"2067:77:6"},{"body":{"nodeType":"YulBlock","src":"2195:81:6","statements":[{"nodeType":"YulAssignment","src":"2205:65:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2220:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"2227:42:6","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2216:3:6"},"nodeType":"YulFunctionCall","src":"2216:54:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2205:7:6"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2177:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2187:7:6","type":""}],"src":"2150:126:6"},{"body":{"nodeType":"YulBlock","src":"2327:32:6","statements":[{"nodeType":"YulAssignment","src":"2337:16:6","value":{"name":"value","nodeType":"YulIdentifier","src":"2348:5:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2337:7:6"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2309:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2319:7:6","type":""}],"src":"2282:77:6"},{"body":{"nodeType":"YulBlock","src":"2409:49:6","statements":[{"nodeType":"YulAssignment","src":"2419:33:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2434:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"2441:10:6","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2430:3:6"},"nodeType":"YulFunctionCall","src":"2430:22:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2419:7:6"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2391:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2401:7:6","type":""}],"src":"2365:93:6"},{"body":{"nodeType":"YulBlock","src":"2508:57:6","statements":[{"nodeType":"YulAssignment","src":"2518:41:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2533:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"2540:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2529:3:6"},"nodeType":"YulFunctionCall","src":"2529:30:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2518:7:6"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2490:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2500:7:6","type":""}],"src":"2464:101:6"},{"body":{"nodeType":"YulBlock","src":"2599:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2616:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2619:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2609:6:6"},"nodeType":"YulFunctionCall","src":"2609:88:6"},"nodeType":"YulExpressionStatement","src":"2609:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2713:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2716:4:6","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2706:6:6"},"nodeType":"YulFunctionCall","src":"2706:15:6"},"nodeType":"YulExpressionStatement","src":"2706:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2737:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2740:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2730:6:6"},"nodeType":"YulFunctionCall","src":"2730:15:6"},"nodeType":"YulExpressionStatement","src":"2730:15:6"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"2571:180:6"},{"body":{"nodeType":"YulBlock","src":"2846:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2863:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2866:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2856:6:6"},"nodeType":"YulFunctionCall","src":"2856:12:6"},"nodeType":"YulExpressionStatement","src":"2856:12:6"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"2757:117:6"},{"body":{"nodeType":"YulBlock","src":"2969:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2986:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2989:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2979:6:6"},"nodeType":"YulFunctionCall","src":"2979:12:6"},"nodeType":"YulExpressionStatement","src":"2979:12:6"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"2880:117:6"},{"body":{"nodeType":"YulBlock","src":"3046:79:6","statements":[{"body":{"nodeType":"YulBlock","src":"3103:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3112:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3115:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3105:6:6"},"nodeType":"YulFunctionCall","src":"3105:12:6"},"nodeType":"YulExpressionStatement","src":"3105:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3069:5:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3094:5:6"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3076:17:6"},"nodeType":"YulFunctionCall","src":"3076:24:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3066:2:6"},"nodeType":"YulFunctionCall","src":"3066:35:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3059:6:6"},"nodeType":"YulFunctionCall","src":"3059:43:6"},"nodeType":"YulIf","src":"3056:63:6"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3039:5:6","type":""}],"src":"3003:122:6"},{"body":{"nodeType":"YulBlock","src":"3174:79:6","statements":[{"body":{"nodeType":"YulBlock","src":"3231:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3240:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3243:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3233:6:6"},"nodeType":"YulFunctionCall","src":"3233:12:6"},"nodeType":"YulExpressionStatement","src":"3233:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3197:5:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3222:5:6"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"3204:17:6"},"nodeType":"YulFunctionCall","src":"3204:24:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3194:2:6"},"nodeType":"YulFunctionCall","src":"3194:35:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3187:6:6"},"nodeType":"YulFunctionCall","src":"3187:43:6"},"nodeType":"YulIf","src":"3184:63:6"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3167:5:6","type":""}],"src":"3131:122:6"},{"body":{"nodeType":"YulBlock","src":"3302:79:6","statements":[{"body":{"nodeType":"YulBlock","src":"3359:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3368:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3371:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3361:6:6"},"nodeType":"YulFunctionCall","src":"3361:12:6"},"nodeType":"YulExpressionStatement","src":"3361:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3325:5:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3350:5:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3332:17:6"},"nodeType":"YulFunctionCall","src":"3332:24:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3322:2:6"},"nodeType":"YulFunctionCall","src":"3322:35:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3315:6:6"},"nodeType":"YulFunctionCall","src":"3315:43:6"},"nodeType":"YulIf","src":"3312:63:6"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3295:5:6","type":""}],"src":"3259:122:6"},{"body":{"nodeType":"YulBlock","src":"3429:78:6","statements":[{"body":{"nodeType":"YulBlock","src":"3485:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3494:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3497:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3487:6:6"},"nodeType":"YulFunctionCall","src":"3487:12:6"},"nodeType":"YulExpressionStatement","src":"3487:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3452:5:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3476:5:6"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"3459:16:6"},"nodeType":"YulFunctionCall","src":"3459:23:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3449:2:6"},"nodeType":"YulFunctionCall","src":"3449:34:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3442:6:6"},"nodeType":"YulFunctionCall","src":"3442:42:6"},"nodeType":"YulIf","src":"3439:62:6"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3422:5:6","type":""}],"src":"3387:120:6"},{"body":{"nodeType":"YulBlock","src":"3555:78:6","statements":[{"body":{"nodeType":"YulBlock","src":"3611:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3620:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3623:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3613:6:6"},"nodeType":"YulFunctionCall","src":"3613:12:6"},"nodeType":"YulExpressionStatement","src":"3613:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3578:5:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3602:5:6"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"3585:16:6"},"nodeType":"YulFunctionCall","src":"3585:23:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3575:2:6"},"nodeType":"YulFunctionCall","src":"3575:34:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3568:6:6"},"nodeType":"YulFunctionCall","src":"3568:42:6"},"nodeType":"YulIf","src":"3565:62:6"}]},"name":"validator_revert_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3548:5:6","type":""}],"src":"3513:120:6"}]},"contents":"{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_t_uint64_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes32t_uint64t_uint32t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n}\n","id":6,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6101606040523480156200001257600080fd5b5060405162001a1e38038062001a1e8339818101604052810190620000389190620001ad565b858073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050508460a081815250508573ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508360e081815250508267ffffffffffffffff166101008167ffffffffffffffff1660c01b815250508163ffffffff166101208163ffffffff1660e01b815250506000600260006101000a81548160ff02191690836001811115620001195762000118620002b5565b5b0217905550426001819055508061014081815250505050505050506200036b565b6000815190506200014b81620002e9565b92915050565b600081519050620001628162000303565b92915050565b60008151905062000179816200031d565b92915050565b600081519050620001908162000337565b92915050565b600081519050620001a78162000351565b92915050565b60008060008060008060c08789031215620001cd57620001cc620002e4565b5b6000620001dd89828a016200013a565b9650506020620001f089828a0162000168565b95505060406200020389828a0162000151565b94505060606200021689828a0162000196565b93505060806200022989828a016200017f565b92505060a06200023c89828a0162000168565b9150509295509295509295565b6000620002568262000267565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600080fd5b620002f48162000249565b81146200030057600080fd5b50565b6200030e816200025d565b81146200031a57600080fd5b50565b620003288162000287565b81146200033457600080fd5b50565b620003428162000291565b81146200034e57600080fd5b50565b6200035c81620002a1565b81146200036857600080fd5b50565b60805160601c60a05160c05160601c60e0516101005160c01c6101205160e01c61014051611630620003ee600039600081816108d9015261096f0152600061073401526000610711015260006106f00152600081816106b401526109d401526000818161038801526104850152600081816103c5015261041901526116306000f3fe6080604052600436106100e85760003560e01c8063473f1ddc1161008a57806391ad27b41161005957806391ad27b4146102c6578063ae771f6b146102f1578063aebc45501461032e578063fd6673f514610359576100e8565b8063473f1ddc1461020757806353a2c19a146102325780635f1b0fd81461025d5780636e04ff0d14610288576100e8565b80632cfcc539116100c65780632cfcc5391461016c578063320229eb146101765780634585e33b146101a1578063460e2049146101ca576100e8565b806309bc33a7146100ed578063115cbaf5146101185780631fe543e314610143575b600080fd5b3480156100f957600080fd5b50610102610384565b60405161010f91906111d3565b60405180910390f35b34801561012457600080fd5b5061012d6103ac565b60405161013a91906111b8565b60405180910390f35b34801561014f57600080fd5b5061016a60048036038101906101659190610f58565b6103c3565b005b610174610483565b005b34801561018257600080fd5b5061018b6105f2565b60405161019891906111d3565b60405180910390f35b3480156101ad57600080fd5b506101c860048036038101906101c39190610e68565b6105fc565b005b3480156101d657600080fd5b506101f160048036038101906101ec9190610efe565b6107fc565b6040516101fe91906110bb565b60405180910390f35b34801561021357600080fd5b5061021c610843565b60405161022991906110bb565b60405180910390f35b34801561023e57600080fd5b5061024761086d565b6040516102549190611225565b60405180910390f35b34801561026957600080fd5b50610272610876565b60405161027f91906111d3565b60405180910390f35b34801561029457600080fd5b506102af60048036038101906102aa9190610eb5565b610883565b6040516102bd92919061111a565b60405180910390f35b3480156102d257600080fd5b506102db61096b565b6040516102e891906111d3565b60405180910390f35b3480156102fd57600080fd5b5061031860048036038101906103139190610efe565b610993565b60405161032591906110d6565b60405180910390f35b34801561033a57600080fd5b506103436109d2565b604051610350919061119d565b60405180910390f35b34801561036557600080fd5b5061036e6109f6565b60405161037b91906111d3565b60405180910390f35b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900460ff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461047557337f00000000000000000000000000000000000000000000000000000000000000006040517f1cf993f400000000000000000000000000000000000000000000000000000000815260040161046c9291906110f1565b60405180910390fd5b61047f8282610a02565b5050565b7f00000000000000000000000000000000000000000000000000000000000000003410156104dd576040517f53909cba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018111156104f1576104f0611510565b5b600260009054906101000a900460ff16600181111561051357610512611510565b5b1461054a576040517f9a41a9f900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f742d070bf0f3edace132a9da8ba725e8cf99c478869cee7f673ed6085e2f8e6460405160405180910390a2565b6000600154905090565b600061061660405180602001604052806000815250610883565b509050806106855747600080549050600260009054906101000a900460ff16600181111561064757610646611510565b5b6040517f6acd5de900000000000000000000000000000000000000000000000000000000815260040161067c939291906111ee565b60405180910390fd5b6001600260006101000a81548160ff021916908360018111156106ab576106aa611510565b5b021790555060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635d3b1d307f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000060037f000000000000000000000000000000000000000000000000000000000000000060016040518663ffffffff1660e01b815260040161077595949392919061114a565b602060405180830381600087803b15801561078f57600080fd5b505af11580156107a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c79190610f2b565b9050807fe0abfa81226f1e2ce09ba287cbb4c241e89b2b891a389274bb7d9c46e344daf060405160405180910390a250505050565b60008082815481106108115761081061153f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006001905090565b6000600361ffff16905090565b600060606000600260009054906101000a900460ff1660018111156108ab576108aa611510565b5b600060018111156108bf576108be611510565b5b1490506000806000805490501190506000804711905060007f00000000000000000000000000000000000000000000000000000000000000006001544261090691906112e9565b1190508380156109135750825b801561091c5750815b80156109255750805b9550856040518060400160405280600381526020017f30783000000000000000000000000000000000000000000000000000000000008152509550955050505050915091565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600081815481106109a357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008080549050905090565b6000808054905082600081518110610a1d57610a1c61153f565b5b6020026020010151610a2f9190611481565b90506000808281548110610a4657610a4561153f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905080600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600067ffffffffffffffff811115610acf57610ace61156e565b5b604051908082528060200260200182016040528015610afd5781602001602082028036833780820191505090505b5060009080519060200190610b13929190610c33565b506000600260006101000a81548160ff02191690836001811115610b3a57610b39611510565b5b02179055504260018190555060008173ffffffffffffffffffffffffffffffffffffffff1647604051610b6c906110a6565b60006040518083038185875af1925050503d8060008114610ba9576040519150601f19603f3d011682016040523d82523d6000602084013e610bae565b606091505b5050905080610be9576040517f835b702e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167fb858f78c6ef3de6c040cd394535543e98132bc3c33d1e98398f4f878915b6ba960405160405180910390a25050505050565b828054828255906000526020600020908101928215610cac579160200282015b82811115610cab5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610c53565b5b509050610cb99190610cbd565b5090565b5b80821115610cd6576000816000905550600101610cbe565b5090565b6000610ced610ce884611265565b611240565b90508083825260208201905082856020860282011115610d1057610d0f6115a7565b5b60005b85811015610d405781610d268882610e3e565b845260208401935060208301925050600181019050610d13565b5050509392505050565b6000610d5d610d5884611291565b611240565b905082815260208101848484011115610d7957610d786115ac565b5b610d8484828561140e565b509392505050565b600082601f830112610da157610da06115a2565b5b8135610db1848260208601610cda565b91505092915050565b60008083601f840112610dd057610dcf6115a2565b5b8235905067ffffffffffffffff811115610ded57610dec61159d565b5b602083019150836001820283011115610e0957610e086115a7565b5b9250929050565b600082601f830112610e2557610e246115a2565b5b8135610e35848260208601610d4a565b91505092915050565b600081359050610e4d816115e3565b92915050565b600081519050610e62816115e3565b92915050565b60008060208385031215610e7f57610e7e6115b6565b5b600083013567ffffffffffffffff811115610e9d57610e9c6115b1565b5b610ea985828601610dba565b92509250509250929050565b600060208284031215610ecb57610eca6115b6565b5b600082013567ffffffffffffffff811115610ee957610ee86115b1565b5b610ef584828501610e10565b91505092915050565b600060208284031215610f1457610f136115b6565b5b6000610f2284828501610e3e565b91505092915050565b600060208284031215610f4157610f406115b6565b5b6000610f4f84828501610e53565b91505092915050565b60008060408385031215610f6f57610f6e6115b6565b5b6000610f7d85828601610e3e565b925050602083013567ffffffffffffffff811115610f9e57610f9d6115b1565b5b610faa85828601610d8c565b9150509250929050565b610fbd8161132f565b82525050565b610fcc8161131d565b82525050565b610fdb81611341565b82525050565b610fea8161134d565b82525050565b6000610ffb826112c2565b61100581856112cd565b935061101581856020860161141d565b61101e816115bb565b840191505092915050565b611032816113c6565b82525050565b611041816113d8565b82525050565b60006110546000836112de565b915061105f826115cc565b600082019050919050565b6110738161136a565b82525050565b61108281611398565b82525050565b611091816113a2565b82525050565b6110a0816113b2565b82525050565b60006110b182611047565b9150819050919050565b60006020820190506110d06000830184610fc3565b92915050565b60006020820190506110eb6000830184610fb4565b92915050565b60006040820190506111066000830185610fc3565b6111136020830184610fc3565b9392505050565b600060408201905061112f6000830185610fd2565b81810360208301526111418184610ff0565b90509392505050565b600060a08201905061115f6000830188610fe1565b61116c6020830187611097565b611179604083018661106a565b6111866060830185611088565b6111936080830184611088565b9695505050505050565b60006020820190506111b26000830184611029565b92915050565b60006020820190506111cd6000830184611038565b92915050565b60006020820190506111e86000830184611079565b92915050565b60006060820190506112036000830186611079565b6112106020830185611079565b61121d6040830184611079565b949350505050565b600060208201905061123a6000830184611088565b92915050565b600061124a61125b565b90506112568282611450565b919050565b6000604051905090565b600067ffffffffffffffff8211156112805761127f61156e565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156112ac576112ab61156e565b5b6112b5826115bb565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b60006112f482611398565b91506112ff83611398565b925082821015611312576113116114b2565b5b828203905092915050565b600061132882611378565b9050919050565b600061133a82611378565b9050919050565b60008115159050919050565b6000819050919050565b6000819050611365826115cf565b919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b60006113d1826113ea565b9050919050565b60006113e382611357565b9050919050565b60006113f5826113fc565b9050919050565b600061140782611378565b9050919050565b82818337600083830152505050565b60005b8381101561143b578082015181840152602081019050611420565b8381111561144a576000848401525b50505050565b611459826115bb565b810181811067ffffffffffffffff821117156114785761147761156e565b5b80604052505050565b600061148c82611398565b915061149783611398565b9250826114a7576114a66114e1565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b50565b600281106115e0576115df611510565b5b50565b6115ec81611398565b81146115f757600080fd5b5056fea26469706673582212201a36a9e48089f5a25101bc75af7a73b37ef5dfe952be40bd77aed35a1f43d45364736f6c63430008070033","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1A1E CODESIZE SUB DUP1 PUSH3 0x1A1E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x38 SWAP2 SWAP1 PUSH3 0x1AD JUMP JUMPDEST DUP6 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP POP DUP5 PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP DUP4 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x100 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0xC0 SHL DUP2 MSTORE POP POP DUP2 PUSH4 0xFFFFFFFF AND PUSH2 0x120 DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE POP POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH3 0x119 JUMPI PUSH3 0x118 PUSH3 0x2B5 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP1 PUSH2 0x140 DUP2 DUP2 MSTORE POP POP POP POP POP POP POP POP PUSH3 0x36B JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x14B DUP2 PUSH3 0x2E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x162 DUP2 PUSH3 0x303 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x179 DUP2 PUSH3 0x31D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x190 DUP2 PUSH3 0x337 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1A7 DUP2 PUSH3 0x351 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x1CD JUMPI PUSH3 0x1CC PUSH3 0x2E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x1DD DUP10 DUP3 DUP11 ADD PUSH3 0x13A JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH3 0x1F0 DUP10 DUP3 DUP11 ADD PUSH3 0x168 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH3 0x203 DUP10 DUP3 DUP11 ADD PUSH3 0x151 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH3 0x216 DUP10 DUP3 DUP11 ADD PUSH3 0x196 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH3 0x229 DUP10 DUP3 DUP11 ADD PUSH3 0x17F JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH3 0x23C DUP10 DUP3 DUP11 ADD PUSH3 0x168 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x256 DUP3 PUSH3 0x267 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x2F4 DUP2 PUSH3 0x249 JUMP JUMPDEST DUP2 EQ PUSH3 0x300 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x30E DUP2 PUSH3 0x25D JUMP JUMPDEST DUP2 EQ PUSH3 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x328 DUP2 PUSH3 0x287 JUMP JUMPDEST DUP2 EQ PUSH3 0x334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x342 DUP2 PUSH3 0x291 JUMP JUMPDEST DUP2 EQ PUSH3 0x34E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x35C DUP2 PUSH3 0x2A1 JUMP JUMPDEST DUP2 EQ PUSH3 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0x60 SHR PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH1 0xC0 SHR PUSH2 0x120 MLOAD PUSH1 0xE0 SHR PUSH2 0x140 MLOAD PUSH2 0x1630 PUSH3 0x3EE PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x8D9 ADD MSTORE PUSH2 0x96F ADD MSTORE PUSH1 0x0 PUSH2 0x734 ADD MSTORE PUSH1 0x0 PUSH2 0x711 ADD MSTORE PUSH1 0x0 PUSH2 0x6F0 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x6B4 ADD MSTORE PUSH2 0x9D4 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x388 ADD MSTORE PUSH2 0x485 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x3C5 ADD MSTORE PUSH2 0x419 ADD MSTORE PUSH2 0x1630 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x473F1DDC GT PUSH2 0x8A JUMPI DUP1 PUSH4 0x91AD27B4 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x91AD27B4 EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0xAE771F6B EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0xAEBC4550 EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0xFD6673F5 EQ PUSH2 0x359 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x473F1DDC EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x53A2C19A EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x5F1B0FD8 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x288 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x2CFCC539 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x2CFCC539 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x320229EB EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x460E2049 EQ PUSH2 0x1CA JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x9BC33A7 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x115CBAF5 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x143 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0x384 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12D PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x165 SWAP2 SWAP1 PUSH2 0xF58 JUMP JUMPDEST PUSH2 0x3C3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x174 PUSH2 0x483 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18B PUSH2 0x5F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0xE68 JUMP JUMPDEST PUSH2 0x5FC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0xEFE JUMP JUMPDEST PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x10BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x843 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x10BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x247 PUSH2 0x86D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x1225 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x876 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0xEB5 JUMP JUMPDEST PUSH2 0x883 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BD SWAP3 SWAP2 SWAP1 PUSH2 0x111A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH2 0x96B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x318 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x313 SWAP2 SWAP1 PUSH2 0xEFE JUMP JUMPDEST PUSH2 0x993 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x10D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x343 PUSH2 0x9D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x119D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36E PUSH2 0x9F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x475 JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46C SWAP3 SWAP2 SWAP1 PUSH2 0x10F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x47F DUP3 DUP3 PUSH2 0xA02 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0x4DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x53909CBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x4F1 JUMPI PUSH2 0x4F0 PUSH2 0x1510 JUMP JUMPDEST JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x513 JUMPI PUSH2 0x512 PUSH2 0x1510 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x54A JUMPI PUSH1 0x40 MLOAD PUSH32 0x9A41A9F900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x742D070BF0F3EDACE132A9DA8BA725E8CF99C478869CEE7F673ED6085E2F8E64 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x616 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x883 JUMP JUMPDEST POP SWAP1 POP DUP1 PUSH2 0x685 JUMPI SELFBALANCE PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x647 JUMPI PUSH2 0x646 PUSH2 0x1510 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6ACD5DE900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x6AB JUMPI PUSH2 0x6AA PUSH2 0x1510 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 PUSH32 0x0 PUSH1 0x1 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x775 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x114A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x78F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7A3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7C7 SWAP2 SWAP1 PUSH2 0xF2B JUMP JUMPDEST SWAP1 POP DUP1 PUSH32 0xE0ABFA81226F1E2CE09BA287CBB4C241E89B2B891A389274BB7D9C46E344DAF0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x811 JUMPI PUSH2 0x810 PUSH2 0x153F JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH2 0xFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x8AB JUMPI PUSH2 0x8AA PUSH2 0x1510 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x8BF JUMPI PUSH2 0x8BE PUSH2 0x1510 JUMP JUMPDEST JUMPDEST EQ SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 POP GT SWAP1 POP PUSH1 0x0 DUP1 SELFBALANCE GT SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 SLOAD TIMESTAMP PUSH2 0x906 SWAP2 SWAP1 PUSH2 0x12E9 JUMP JUMPDEST GT SWAP1 POP DUP4 DUP1 ISZERO PUSH2 0x913 JUMPI POP DUP3 JUMPDEST DUP1 ISZERO PUSH2 0x91C JUMPI POP DUP2 JUMPDEST DUP1 ISZERO PUSH2 0x925 JUMPI POP DUP1 JUMPDEST SWAP6 POP DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3078300000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP6 POP SWAP6 POP POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x9A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xA1D JUMPI PUSH2 0xA1C PUSH2 0x153F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xA2F SWAP2 SWAP1 PUSH2 0x1481 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA46 JUMPI PUSH2 0xA45 PUSH2 0x153F JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH1 0x2 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xACF JUMPI PUSH2 0xACE PUSH2 0x156E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAFD JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xB13 SWAP3 SWAP2 SWAP1 PUSH2 0xC33 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xB3A JUMPI PUSH2 0xB39 PUSH2 0x1510 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0xB6C SWAP1 PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xBA9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBAE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xBE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x835B702E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB858F78C6EF3DE6C040CD394535543E98132BC3C33D1E98398F4F878915B6BA9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xCAC JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xCAB JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xC53 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xCB9 SWAP2 SWAP1 PUSH2 0xCBD JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xCD6 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xCBE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCED PUSH2 0xCE8 DUP5 PUSH2 0x1265 JUMP JUMPDEST PUSH2 0x1240 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0xD10 JUMPI PUSH2 0xD0F PUSH2 0x15A7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xD40 JUMPI DUP2 PUSH2 0xD26 DUP9 DUP3 PUSH2 0xE3E JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xD13 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD5D PUSH2 0xD58 DUP5 PUSH2 0x1291 JUMP JUMPDEST PUSH2 0x1240 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xD79 JUMPI PUSH2 0xD78 PUSH2 0x15AC JUMP JUMPDEST JUMPDEST PUSH2 0xD84 DUP5 DUP3 DUP6 PUSH2 0x140E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xDA1 JUMPI PUSH2 0xDA0 PUSH2 0x15A2 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDB1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xCDA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xDD0 JUMPI PUSH2 0xDCF PUSH2 0x15A2 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDED JUMPI PUSH2 0xDEC PUSH2 0x159D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xE09 JUMPI PUSH2 0xE08 PUSH2 0x15A7 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE25 JUMPI PUSH2 0xE24 PUSH2 0x15A2 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xE35 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xD4A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE4D DUP2 PUSH2 0x15E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xE62 DUP2 PUSH2 0x15E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE7F JUMPI PUSH2 0xE7E PUSH2 0x15B6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE9D JUMPI PUSH2 0xE9C PUSH2 0x15B1 JUMP JUMPDEST JUMPDEST PUSH2 0xEA9 DUP6 DUP3 DUP7 ADD PUSH2 0xDBA JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xECB JUMPI PUSH2 0xECA PUSH2 0x15B6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEE9 JUMPI PUSH2 0xEE8 PUSH2 0x15B1 JUMP JUMPDEST JUMPDEST PUSH2 0xEF5 DUP5 DUP3 DUP6 ADD PUSH2 0xE10 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF14 JUMPI PUSH2 0xF13 PUSH2 0x15B6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF22 DUP5 DUP3 DUP6 ADD PUSH2 0xE3E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF41 JUMPI PUSH2 0xF40 PUSH2 0x15B6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF4F DUP5 DUP3 DUP6 ADD PUSH2 0xE53 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF6F JUMPI PUSH2 0xF6E PUSH2 0x15B6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF7D DUP6 DUP3 DUP7 ADD PUSH2 0xE3E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF9E JUMPI PUSH2 0xF9D PUSH2 0x15B1 JUMP JUMPDEST JUMPDEST PUSH2 0xFAA DUP6 DUP3 DUP7 ADD PUSH2 0xD8C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xFBD DUP2 PUSH2 0x132F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xFCC DUP2 PUSH2 0x131D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xFDB DUP2 PUSH2 0x1341 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xFEA DUP2 PUSH2 0x134D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFB DUP3 PUSH2 0x12C2 JUMP JUMPDEST PUSH2 0x1005 DUP2 DUP6 PUSH2 0x12CD JUMP JUMPDEST SWAP4 POP PUSH2 0x1015 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x141D JUMP JUMPDEST PUSH2 0x101E DUP2 PUSH2 0x15BB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1032 DUP2 PUSH2 0x13C6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1041 DUP2 PUSH2 0x13D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1054 PUSH1 0x0 DUP4 PUSH2 0x12DE JUMP JUMPDEST SWAP2 POP PUSH2 0x105F DUP3 PUSH2 0x15CC JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1073 DUP2 PUSH2 0x136A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1082 DUP2 PUSH2 0x1398 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1091 DUP2 PUSH2 0x13A2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x10A0 DUP2 PUSH2 0x13B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10B1 DUP3 PUSH2 0x1047 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10D0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFC3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10EB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFB4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1106 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xFC3 JUMP JUMPDEST PUSH2 0x1113 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFC3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x112F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xFD2 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1141 DUP2 DUP5 PUSH2 0xFF0 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x115F PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0xFE1 JUMP JUMPDEST PUSH2 0x116C PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1097 JUMP JUMPDEST PUSH2 0x1179 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x106A JUMP JUMPDEST PUSH2 0x1186 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1088 JUMP JUMPDEST PUSH2 0x1193 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1088 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11B2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1029 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11CD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1038 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11E8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1079 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1203 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1079 JUMP JUMPDEST PUSH2 0x1210 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1079 JUMP JUMPDEST PUSH2 0x121D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1079 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x123A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1088 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x124A PUSH2 0x125B JUMP JUMPDEST SWAP1 POP PUSH2 0x1256 DUP3 DUP3 PUSH2 0x1450 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1280 JUMPI PUSH2 0x127F PUSH2 0x156E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x12AC JUMPI PUSH2 0x12AB PUSH2 0x156E JUMP JUMPDEST JUMPDEST PUSH2 0x12B5 DUP3 PUSH2 0x15BB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12F4 DUP3 PUSH2 0x1398 JUMP JUMPDEST SWAP2 POP PUSH2 0x12FF DUP4 PUSH2 0x1398 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1312 JUMPI PUSH2 0x1311 PUSH2 0x14B2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1328 DUP3 PUSH2 0x1378 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x133A DUP3 PUSH2 0x1378 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x1365 DUP3 PUSH2 0x15CF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13D1 DUP3 PUSH2 0x13EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13E3 DUP3 PUSH2 0x1357 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13F5 DUP3 PUSH2 0x13FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1407 DUP3 PUSH2 0x1378 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x143B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1420 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x144A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1459 DUP3 PUSH2 0x15BB JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1478 JUMPI PUSH2 0x1477 PUSH2 0x156E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x148C DUP3 PUSH2 0x1398 JUMP JUMPDEST SWAP2 POP PUSH2 0x1497 DUP4 PUSH2 0x1398 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x14A7 JUMPI PUSH2 0x14A6 PUSH2 0x14E1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x15E0 JUMPI PUSH2 0x15DF PUSH2 0x1510 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x15EC DUP2 PUSH2 0x1398 JUMP JUMPDEST DUP2 EQ PUSH2 0x15F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE CALLDATASIZE 0xA9 0xE4 DUP1 DUP10 CREATE2 LOG2 MLOAD ADD 0xBC PUSH22 0xAF7A73B37EF5DFE952BE40BD77AED35A1F43D4536473 PUSH16 0x6C634300080700330000000000000000 ","sourceMap":"494:4341:5:-:0;;;1347:515;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1512:16;5616:15:4;5599:32;;;;;;;;;;;;5556:80;1553:11:5::1;1537:27;;;;::::0;::::1;1617:16;1571:63;;;;;;;;;;::::0;::::1;1653:7;1641:19;;;;::::0;::::1;1686:14;1667:33;;;;;;;;;;::::0;::::1;1728:16;1707:37;;;;;;;;;;::::0;::::1;1767:16;1751:13;;:32;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1808:15;1790;:33;;;;1843:8;1830:21;;;;::::0;::::1;1347:515:::0;;;;;;494:4341;;7:143:6;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:::-;213:5;244:6;238:13;229:22;;260:33;287:5;260:33;:::i;:::-;156:143;;;;:::o;305:::-;362:5;393:6;387:13;378:22;;409:33;436:5;409:33;:::i;:::-;305:143;;;;:::o;454:141::-;510:5;541:6;535:13;526:22;;557:32;583:5;557:32;:::i;:::-;454:141;;;;:::o;601:::-;657:5;688:6;682:13;673:22;;704:32;730:5;704:32;:::i;:::-;601:141;;;;:::o;748:1130::-;861:6;869;877;885;893;901;950:3;938:9;929:7;925:23;921:33;918:120;;;957:79;;:::i;:::-;918:120;1077:1;1102:64;1158:7;1149:6;1138:9;1134:22;1102:64;:::i;:::-;1092:74;;1048:128;1215:2;1241:64;1297:7;1288:6;1277:9;1273:22;1241:64;:::i;:::-;1231:74;;1186:129;1354:2;1380:64;1436:7;1427:6;1416:9;1412:22;1380:64;:::i;:::-;1370:74;;1325:129;1493:2;1519:63;1574:7;1565:6;1554:9;1550:22;1519:63;:::i;:::-;1509:73;;1464:128;1631:3;1658:63;1713:7;1704:6;1693:9;1689:22;1658:63;:::i;:::-;1648:73;;1602:129;1770:3;1797:64;1853:7;1844:6;1833:9;1829:22;1797:64;:::i;:::-;1787:74;;1741:130;748:1130;;;;;;;;:::o;1965:96::-;2002:7;2031:24;2049:5;2031:24;:::i;:::-;2020:35;;1965:96;;;:::o;2067:77::-;2104:7;2133:5;2122:16;;2067:77;;;:::o;2150:126::-;2187:7;2227:42;2220:5;2216:54;2205:65;;2150:126;;;:::o;2282:77::-;2319:7;2348:5;2337:16;;2282:77;;;:::o;2365:93::-;2401:7;2441:10;2434:5;2430:22;2419:33;;2365:93;;;:::o;2464:101::-;2500:7;2540:18;2533:5;2529:30;2518:41;;2464:101;;;:::o;2571:180::-;2619:77;2616:1;2609:88;2716:4;2713:1;2706:15;2740:4;2737:1;2730:15;2880:117;2989:1;2986;2979:12;3003:122;3076:24;3094:5;3076:24;:::i;:::-;3069:5;3066:35;3056:63;;3115:1;3112;3105:12;3056:63;3003:122;:::o;3131:::-;3204:24;3222:5;3204:24;:::i;:::-;3197:5;3194:35;3184:63;;3243:1;3240;3233:12;3184:63;3131:122;:::o;3259:::-;3332:24;3350:5;3332:24;:::i;:::-;3325:5;3322:35;3312:63;;3371:1;3368;3361:12;3312:63;3259:122;:::o;3387:120::-;3459:23;3476:5;3459:23;:::i;:::-;3452:5;3449:34;3439:62;;3497:1;3494;3487:12;3439:62;3387:120;:::o;3513:::-;3585:23;3602:5;3585:23;:::i;:::-;3578:5;3575:34;3565:62;;3623:1;3620;3613:12;3565:62;3513:120;:::o;494:4341:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@checkUpkeep_432":{"entryPoint":2179,"id":432,"parameterSlots":1,"returnSlots":2},"@enterRaffle_370":{"entryPoint":1155,"id":370,"parameterSlots":0,"returnSlots":0},"@fulfillRandomWords_554":{"entryPoint":2562,"id":554,"parameterSlots":2,"returnSlots":0},"@getEntranceFee_562":{"entryPoint":900,"id":562,"parameterSlots":0,"returnSlots":1},"@getInterval_624":{"entryPoint":2411,"id":624,"parameterSlots":0,"returnSlots":1},"@getLatestTimeStamp_632":{"entryPoint":1522,"id":632,"parameterSlots":0,"returnSlots":1},"@getNumWords_599":{"entryPoint":2157,"id":599,"parameterSlots":0,"returnSlots":1},"@getNumberOfPlayers_608":{"entryPoint":2550,"id":608,"parameterSlots":0,"returnSlots":1},"@getPlayers_574":{"entryPoint":2044,"id":574,"parameterSlots":1,"returnSlots":1},"@getRaffleState_591":{"entryPoint":940,"id":591,"parameterSlots":0,"returnSlots":1},"@getRecentWinner_582":{"entryPoint":2115,"id":582,"parameterSlots":0,"returnSlots":1},"@getRequestConfirmations_616":{"entryPoint":2166,"id":616,"parameterSlots":0,"returnSlots":1},"@i_vrfCoordinator_245":{"entryPoint":2514,"id":245,"parameterSlots":0,"returnSlots":0},"@performUpkeep_483":{"entryPoint":1532,"id":483,"parameterSlots":2,"returnSlots":0},"@rawFulfillRandomWords_210":{"entryPoint":963,"id":210,"parameterSlots":2,"returnSlots":0},"@s_players_242":{"entryPoint":2451,"id":242,"parameterSlots":0,"returnSlots":0},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":3290,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":3402,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":3468,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":3514,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bytes_memory_ptr":{"entryPoint":3600,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3646,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":3667,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes_calldata_ptr":{"entryPoint":3688,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes_memory_ptr":{"entryPoint":3765,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":3838,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":3883,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":3928,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_payable_to_t_address_payable_fromStack":{"entryPoint":4020,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":4035,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":4050,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":4065,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":4080,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_VRFCoordinatorV2Interface_$153_to_t_address_fromStack":{"entryPoint":4137,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_enum$_RaffleState_$237_to_t_uint8_fromStack":{"entryPoint":4152,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4167,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint16_to_t_uint16_fromStack":{"entryPoint":4202,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":4217,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":4232,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":4247,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":4262,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":4283,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed":{"entryPoint":4310,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":4337,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":4378,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed":{"entryPoint":4426,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_contract$_VRFCoordinatorV2Interface_$153__to_t_address__fromStack_reversed":{"entryPoint":4509,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_enum$_RaffleState_$237__to_t_uint8__fromStack_reversed":{"entryPoint":4536,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":4563,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":4590,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":4645,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":4672,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":4699,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":4709,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":4753,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":4802,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":4813,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4830,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":4841,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":4893,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":4911,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":4929,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":4941,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_RaffleState_$237":{"entryPoint":4951,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":4970,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":4984,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5016,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":5026,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":5042,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_VRFCoordinatorV2Interface_$153_to_t_address":{"entryPoint":5062,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_enum$_RaffleState_$237_to_t_uint8":{"entryPoint":5080,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":5098,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":5116,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":5134,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":5149,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":5200,"id":null,"parameterSlots":2,"returnSlots":0},"mod_t_uint256":{"entryPoint":5249,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":5298,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":5345,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":5392,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":5439,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5486,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":5533,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":5538,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":5543,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":5548,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":5553,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5558,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5563,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":5580,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_t_enum$_RaffleState_$237":{"entryPoint":5583,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5603,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:17251:6","statements":[{"body":{"nodeType":"YulBlock","src":"126:620:6","statements":[{"nodeType":"YulAssignment","src":"136:90:6","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"218:6:6"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"161:56:6"},"nodeType":"YulFunctionCall","src":"161:64:6"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"145:15:6"},"nodeType":"YulFunctionCall","src":"145:81:6"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"136:5:6"}]},{"nodeType":"YulVariableDeclaration","src":"235:16:6","value":{"name":"array","nodeType":"YulIdentifier","src":"246:5:6"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"239:3:6","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"268:5:6"},{"name":"length","nodeType":"YulIdentifier","src":"275:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"261:6:6"},"nodeType":"YulFunctionCall","src":"261:21:6"},"nodeType":"YulExpressionStatement","src":"261:21:6"},{"nodeType":"YulAssignment","src":"291:23:6","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"302:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"309:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"298:3:6"},"nodeType":"YulFunctionCall","src":"298:16:6"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"291:3:6"}]},{"nodeType":"YulVariableDeclaration","src":"324:17:6","value":{"name":"offset","nodeType":"YulIdentifier","src":"335:6:6"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"328:3:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"390:103:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"404:77:6"},"nodeType":"YulFunctionCall","src":"404:79:6"},"nodeType":"YulExpressionStatement","src":"404:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"360:3:6"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"369:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"377:4:6","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"365:3:6"},"nodeType":"YulFunctionCall","src":"365:17:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"356:3:6"},"nodeType":"YulFunctionCall","src":"356:27:6"},{"name":"end","nodeType":"YulIdentifier","src":"385:3:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"353:2:6"},"nodeType":"YulFunctionCall","src":"353:36:6"},"nodeType":"YulIf","src":"350:143:6"},{"body":{"nodeType":"YulBlock","src":"562:178:6","statements":[{"nodeType":"YulVariableDeclaration","src":"577:21:6","value":{"name":"src","nodeType":"YulIdentifier","src":"595:3:6"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"581:10:6","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"619:3:6"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"645:10:6"},{"name":"end","nodeType":"YulIdentifier","src":"657:3:6"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"624:20:6"},"nodeType":"YulFunctionCall","src":"624:37:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"612:6:6"},"nodeType":"YulFunctionCall","src":"612:50:6"},"nodeType":"YulExpressionStatement","src":"612:50:6"},{"nodeType":"YulAssignment","src":"675:21:6","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"686:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"691:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"682:3:6"},"nodeType":"YulFunctionCall","src":"682:14:6"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"675:3:6"}]},{"nodeType":"YulAssignment","src":"709:21:6","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"720:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"725:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"716:3:6"},"nodeType":"YulFunctionCall","src":"716:14:6"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"709:3:6"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"524:1:6"},{"name":"length","nodeType":"YulIdentifier","src":"527:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"521:2:6"},"nodeType":"YulFunctionCall","src":"521:13:6"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"535:18:6","statements":[{"nodeType":"YulAssignment","src":"537:14:6","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"546:1:6"},{"kind":"number","nodeType":"YulLiteral","src":"549:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"542:3:6"},"nodeType":"YulFunctionCall","src":"542:9:6"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"537:1:6"}]}]},"pre":{"nodeType":"YulBlock","src":"506:14:6","statements":[{"nodeType":"YulVariableDeclaration","src":"508:10:6","value":{"kind":"number","nodeType":"YulLiteral","src":"517:1:6","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"512:1:6","type":""}]}]},"src":"502:238:6"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"96:6:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"104:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"112:3:6","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"120:5:6","type":""}],"src":"24:722:6"},{"body":{"nodeType":"YulBlock","src":"835:327:6","statements":[{"nodeType":"YulAssignment","src":"845:74:6","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"911:6:6"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"870:40:6"},"nodeType":"YulFunctionCall","src":"870:48:6"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"854:15:6"},"nodeType":"YulFunctionCall","src":"854:65:6"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"845:5:6"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"935:5:6"},{"name":"length","nodeType":"YulIdentifier","src":"942:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"928:6:6"},"nodeType":"YulFunctionCall","src":"928:21:6"},"nodeType":"YulExpressionStatement","src":"928:21:6"},{"nodeType":"YulVariableDeclaration","src":"958:27:6","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"973:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"980:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"969:3:6"},"nodeType":"YulFunctionCall","src":"969:16:6"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"962:3:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"1023:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"1025:77:6"},"nodeType":"YulFunctionCall","src":"1025:79:6"},"nodeType":"YulExpressionStatement","src":"1025:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1004:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"1009:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1000:3:6"},"nodeType":"YulFunctionCall","src":"1000:16:6"},{"name":"end","nodeType":"YulIdentifier","src":"1018:3:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"997:2:6"},"nodeType":"YulFunctionCall","src":"997:25:6"},"nodeType":"YulIf","src":"994:112:6"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1139:3:6"},{"name":"dst","nodeType":"YulIdentifier","src":"1144:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"1149:6:6"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"1115:23:6"},"nodeType":"YulFunctionCall","src":"1115:41:6"},"nodeType":"YulExpressionStatement","src":"1115:41:6"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"808:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"813:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"821:3:6","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"829:5:6","type":""}],"src":"752:410:6"},{"body":{"nodeType":"YulBlock","src":"1262:293:6","statements":[{"body":{"nodeType":"YulBlock","src":"1311:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1313:77:6"},"nodeType":"YulFunctionCall","src":"1313:79:6"},"nodeType":"YulExpressionStatement","src":"1313:79:6"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1290:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"1298:4:6","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1286:3:6"},"nodeType":"YulFunctionCall","src":"1286:17:6"},{"name":"end","nodeType":"YulIdentifier","src":"1305:3:6"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1282:3:6"},"nodeType":"YulFunctionCall","src":"1282:27:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1275:6:6"},"nodeType":"YulFunctionCall","src":"1275:35:6"},"nodeType":"YulIf","src":"1272:122:6"},{"nodeType":"YulVariableDeclaration","src":"1403:34:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1430:6:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1417:12:6"},"nodeType":"YulFunctionCall","src":"1417:20:6"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1407:6:6","type":""}]},{"nodeType":"YulAssignment","src":"1446:103:6","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1522:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"1530:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1518:3:6"},"nodeType":"YulFunctionCall","src":"1518:17:6"},{"name":"length","nodeType":"YulIdentifier","src":"1537:6:6"},{"name":"end","nodeType":"YulIdentifier","src":"1545:3:6"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"1455:62:6"},"nodeType":"YulFunctionCall","src":"1455:94:6"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1446:5:6"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1240:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"1248:3:6","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1256:5:6","type":""}],"src":"1185:370:6"},{"body":{"nodeType":"YulBlock","src":"1648:478:6","statements":[{"body":{"nodeType":"YulBlock","src":"1697:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1699:77:6"},"nodeType":"YulFunctionCall","src":"1699:79:6"},"nodeType":"YulExpressionStatement","src":"1699:79:6"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1676:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"1684:4:6","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1672:3:6"},"nodeType":"YulFunctionCall","src":"1672:17:6"},{"name":"end","nodeType":"YulIdentifier","src":"1691:3:6"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1668:3:6"},"nodeType":"YulFunctionCall","src":"1668:27:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1661:6:6"},"nodeType":"YulFunctionCall","src":"1661:35:6"},"nodeType":"YulIf","src":"1658:122:6"},{"nodeType":"YulAssignment","src":"1789:30:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1812:6:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1799:12:6"},"nodeType":"YulFunctionCall","src":"1799:20:6"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1789:6:6"}]},{"body":{"nodeType":"YulBlock","src":"1862:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"1864:77:6"},"nodeType":"YulFunctionCall","src":"1864:79:6"},"nodeType":"YulExpressionStatement","src":"1864:79:6"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1834:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"1842:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1831:2:6"},"nodeType":"YulFunctionCall","src":"1831:30:6"},"nodeType":"YulIf","src":"1828:117:6"},{"nodeType":"YulAssignment","src":"1954:29:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1970:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"1978:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1966:3:6"},"nodeType":"YulFunctionCall","src":"1966:17:6"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"1954:8:6"}]},{"body":{"nodeType":"YulBlock","src":"2037:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"2039:77:6"},"nodeType":"YulFunctionCall","src":"2039:79:6"},"nodeType":"YulExpressionStatement","src":"2039:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2002:8:6"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2016:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"2024:4:6","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2012:3:6"},"nodeType":"YulFunctionCall","src":"2012:17:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1998:3:6"},"nodeType":"YulFunctionCall","src":"1998:32:6"},{"name":"end","nodeType":"YulIdentifier","src":"2032:3:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1995:2:6"},"nodeType":"YulFunctionCall","src":"1995:41:6"},"nodeType":"YulIf","src":"1992:128:6"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1615:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"1623:3:6","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"1631:8:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"1641:6:6","type":""}],"src":"1574:552:6"},{"body":{"nodeType":"YulBlock","src":"2206:277:6","statements":[{"body":{"nodeType":"YulBlock","src":"2255:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2257:77:6"},"nodeType":"YulFunctionCall","src":"2257:79:6"},"nodeType":"YulExpressionStatement","src":"2257:79:6"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2234:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"2242:4:6","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2230:3:6"},"nodeType":"YulFunctionCall","src":"2230:17:6"},{"name":"end","nodeType":"YulIdentifier","src":"2249:3:6"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2226:3:6"},"nodeType":"YulFunctionCall","src":"2226:27:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2219:6:6"},"nodeType":"YulFunctionCall","src":"2219:35:6"},"nodeType":"YulIf","src":"2216:122:6"},{"nodeType":"YulVariableDeclaration","src":"2347:34:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2374:6:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2361:12:6"},"nodeType":"YulFunctionCall","src":"2361:20:6"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2351:6:6","type":""}]},{"nodeType":"YulAssignment","src":"2390:87:6","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2450:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"2458:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2446:3:6"},"nodeType":"YulFunctionCall","src":"2446:17:6"},{"name":"length","nodeType":"YulIdentifier","src":"2465:6:6"},{"name":"end","nodeType":"YulIdentifier","src":"2473:3:6"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"2399:46:6"},"nodeType":"YulFunctionCall","src":"2399:78:6"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2390:5:6"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2184:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"2192:3:6","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2200:5:6","type":""}],"src":"2145:338:6"},{"body":{"nodeType":"YulBlock","src":"2541:87:6","statements":[{"nodeType":"YulAssignment","src":"2551:29:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2573:6:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2560:12:6"},"nodeType":"YulFunctionCall","src":"2560:20:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2551:5:6"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2616:5:6"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2589:26:6"},"nodeType":"YulFunctionCall","src":"2589:33:6"},"nodeType":"YulExpressionStatement","src":"2589:33:6"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2519:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"2527:3:6","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2535:5:6","type":""}],"src":"2489:139:6"},{"body":{"nodeType":"YulBlock","src":"2697:80:6","statements":[{"nodeType":"YulAssignment","src":"2707:22:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2722:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2716:5:6"},"nodeType":"YulFunctionCall","src":"2716:13:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2707:5:6"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2765:5:6"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2738:26:6"},"nodeType":"YulFunctionCall","src":"2738:33:6"},"nodeType":"YulExpressionStatement","src":"2738:33:6"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2675:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"2683:3:6","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2691:5:6","type":""}],"src":"2634:143:6"},{"body":{"nodeType":"YulBlock","src":"2868:442:6","statements":[{"body":{"nodeType":"YulBlock","src":"2914:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2916:77:6"},"nodeType":"YulFunctionCall","src":"2916:79:6"},"nodeType":"YulExpressionStatement","src":"2916:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2889:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"2898:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2885:3:6"},"nodeType":"YulFunctionCall","src":"2885:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"2910:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2881:3:6"},"nodeType":"YulFunctionCall","src":"2881:32:6"},"nodeType":"YulIf","src":"2878:119:6"},{"nodeType":"YulBlock","src":"3007:296:6","statements":[{"nodeType":"YulVariableDeclaration","src":"3022:45:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3053:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3064:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3049:3:6"},"nodeType":"YulFunctionCall","src":"3049:17:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3036:12:6"},"nodeType":"YulFunctionCall","src":"3036:31:6"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3026:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"3114:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3116:77:6"},"nodeType":"YulFunctionCall","src":"3116:79:6"},"nodeType":"YulExpressionStatement","src":"3116:79:6"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3086:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"3094:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3083:2:6"},"nodeType":"YulFunctionCall","src":"3083:30:6"},"nodeType":"YulIf","src":"3080:117:6"},{"nodeType":"YulAssignment","src":"3211:82:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3265:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"3276:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3261:3:6"},"nodeType":"YulFunctionCall","src":"3261:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3285:7:6"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"3229:31:6"},"nodeType":"YulFunctionCall","src":"3229:64:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3211:6:6"},{"name":"value1","nodeType":"YulIdentifier","src":"3219:6:6"}]}]}]},"name":"abi_decode_tuple_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2830:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2841:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2853:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2861:6:6","type":""}],"src":"2783:527:6"},{"body":{"nodeType":"YulBlock","src":"3391:432:6","statements":[{"body":{"nodeType":"YulBlock","src":"3437:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3439:77:6"},"nodeType":"YulFunctionCall","src":"3439:79:6"},"nodeType":"YulExpressionStatement","src":"3439:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3412:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"3421:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3408:3:6"},"nodeType":"YulFunctionCall","src":"3408:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"3433:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3404:3:6"},"nodeType":"YulFunctionCall","src":"3404:32:6"},"nodeType":"YulIf","src":"3401:119:6"},{"nodeType":"YulBlock","src":"3530:286:6","statements":[{"nodeType":"YulVariableDeclaration","src":"3545:45:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3576:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3587:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3572:3:6"},"nodeType":"YulFunctionCall","src":"3572:17:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3559:12:6"},"nodeType":"YulFunctionCall","src":"3559:31:6"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3549:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"3637:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3639:77:6"},"nodeType":"YulFunctionCall","src":"3639:79:6"},"nodeType":"YulExpressionStatement","src":"3639:79:6"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3609:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"3617:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3606:2:6"},"nodeType":"YulFunctionCall","src":"3606:30:6"},"nodeType":"YulIf","src":"3603:117:6"},{"nodeType":"YulAssignment","src":"3734:72:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3778:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"3789:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3774:3:6"},"nodeType":"YulFunctionCall","src":"3774:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3798:7:6"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"3744:29:6"},"nodeType":"YulFunctionCall","src":"3744:62:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3734:6:6"}]}]}]},"name":"abi_decode_tuple_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3361:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3372:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3384:6:6","type":""}],"src":"3316:507:6"},{"body":{"nodeType":"YulBlock","src":"3895:263:6","statements":[{"body":{"nodeType":"YulBlock","src":"3941:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3943:77:6"},"nodeType":"YulFunctionCall","src":"3943:79:6"},"nodeType":"YulExpressionStatement","src":"3943:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3916:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"3925:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3912:3:6"},"nodeType":"YulFunctionCall","src":"3912:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"3937:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3908:3:6"},"nodeType":"YulFunctionCall","src":"3908:32:6"},"nodeType":"YulIf","src":"3905:119:6"},{"nodeType":"YulBlock","src":"4034:117:6","statements":[{"nodeType":"YulVariableDeclaration","src":"4049:15:6","value":{"kind":"number","nodeType":"YulLiteral","src":"4063:1:6","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4053:6:6","type":""}]},{"nodeType":"YulAssignment","src":"4078:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4113:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"4124:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4109:3:6"},"nodeType":"YulFunctionCall","src":"4109:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4133:7:6"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4088:20:6"},"nodeType":"YulFunctionCall","src":"4088:53:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4078:6:6"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3865:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3876:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3888:6:6","type":""}],"src":"3829:329:6"},{"body":{"nodeType":"YulBlock","src":"4241:274:6","statements":[{"body":{"nodeType":"YulBlock","src":"4287:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4289:77:6"},"nodeType":"YulFunctionCall","src":"4289:79:6"},"nodeType":"YulExpressionStatement","src":"4289:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4262:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"4271:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4258:3:6"},"nodeType":"YulFunctionCall","src":"4258:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"4283:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4254:3:6"},"nodeType":"YulFunctionCall","src":"4254:32:6"},"nodeType":"YulIf","src":"4251:119:6"},{"nodeType":"YulBlock","src":"4380:128:6","statements":[{"nodeType":"YulVariableDeclaration","src":"4395:15:6","value":{"kind":"number","nodeType":"YulLiteral","src":"4409:1:6","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4399:6:6","type":""}]},{"nodeType":"YulAssignment","src":"4424:74:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4470:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"4481:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4466:3:6"},"nodeType":"YulFunctionCall","src":"4466:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4490:7:6"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"4434:31:6"},"nodeType":"YulFunctionCall","src":"4434:64:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4424:6:6"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4211:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4222:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4234:6:6","type":""}],"src":"4164:351:6"},{"body":{"nodeType":"YulBlock","src":"4629:576:6","statements":[{"body":{"nodeType":"YulBlock","src":"4675:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4677:77:6"},"nodeType":"YulFunctionCall","src":"4677:79:6"},"nodeType":"YulExpressionStatement","src":"4677:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4650:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"4659:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4646:3:6"},"nodeType":"YulFunctionCall","src":"4646:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"4671:2:6","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4642:3:6"},"nodeType":"YulFunctionCall","src":"4642:32:6"},"nodeType":"YulIf","src":"4639:119:6"},{"nodeType":"YulBlock","src":"4768:117:6","statements":[{"nodeType":"YulVariableDeclaration","src":"4783:15:6","value":{"kind":"number","nodeType":"YulLiteral","src":"4797:1:6","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4787:6:6","type":""}]},{"nodeType":"YulAssignment","src":"4812:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4847:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"4858:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4843:3:6"},"nodeType":"YulFunctionCall","src":"4843:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4867:7:6"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4822:20:6"},"nodeType":"YulFunctionCall","src":"4822:53:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4812:6:6"}]}]},{"nodeType":"YulBlock","src":"4895:303:6","statements":[{"nodeType":"YulVariableDeclaration","src":"4910:46:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4941:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4952:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4937:3:6"},"nodeType":"YulFunctionCall","src":"4937:18:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4924:12:6"},"nodeType":"YulFunctionCall","src":"4924:32:6"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4914:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"5003:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"5005:77:6"},"nodeType":"YulFunctionCall","src":"5005:79:6"},"nodeType":"YulExpressionStatement","src":"5005:79:6"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4975:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"4983:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4972:2:6"},"nodeType":"YulFunctionCall","src":"4972:30:6"},"nodeType":"YulIf","src":"4969:117:6"},{"nodeType":"YulAssignment","src":"5100:88:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5160:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"5171:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5156:3:6"},"nodeType":"YulFunctionCall","src":"5156:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5180:7:6"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5110:45:6"},"nodeType":"YulFunctionCall","src":"5110:78:6"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5100:6:6"}]}]}]},"name":"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4591:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4602:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4614:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4622:6:6","type":""}],"src":"4521:684:6"},{"body":{"nodeType":"YulBlock","src":"5292:61:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5309:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5340:5:6"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"5314:25:6"},"nodeType":"YulFunctionCall","src":"5314:32:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5302:6:6"},"nodeType":"YulFunctionCall","src":"5302:45:6"},"nodeType":"YulExpressionStatement","src":"5302:45:6"}]},"name":"abi_encode_t_address_payable_to_t_address_payable_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5280:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5287:3:6","type":""}],"src":"5211:142:6"},{"body":{"nodeType":"YulBlock","src":"5424:53:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5441:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5464:5:6"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5446:17:6"},"nodeType":"YulFunctionCall","src":"5446:24:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5434:6:6"},"nodeType":"YulFunctionCall","src":"5434:37:6"},"nodeType":"YulExpressionStatement","src":"5434:37:6"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5412:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5419:3:6","type":""}],"src":"5359:118:6"},{"body":{"nodeType":"YulBlock","src":"5542:50:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5559:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5579:5:6"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"5564:14:6"},"nodeType":"YulFunctionCall","src":"5564:21:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5552:6:6"},"nodeType":"YulFunctionCall","src":"5552:34:6"},"nodeType":"YulExpressionStatement","src":"5552:34:6"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5530:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5537:3:6","type":""}],"src":"5483:109:6"},{"body":{"nodeType":"YulBlock","src":"5663:53:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5680:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5703:5:6"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5685:17:6"},"nodeType":"YulFunctionCall","src":"5685:24:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5673:6:6"},"nodeType":"YulFunctionCall","src":"5673:37:6"},"nodeType":"YulExpressionStatement","src":"5673:37:6"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5651:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5658:3:6","type":""}],"src":"5598:118:6"},{"body":{"nodeType":"YulBlock","src":"5812:270:6","statements":[{"nodeType":"YulVariableDeclaration","src":"5822:52:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5868:5:6"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"5836:31:6"},"nodeType":"YulFunctionCall","src":"5836:38:6"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5826:6:6","type":""}]},{"nodeType":"YulAssignment","src":"5883:77:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5948:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"5953:6:6"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5890:57:6"},"nodeType":"YulFunctionCall","src":"5890:70:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5883:3:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5995:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"6002:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5991:3:6"},"nodeType":"YulFunctionCall","src":"5991:16:6"},{"name":"pos","nodeType":"YulIdentifier","src":"6009:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"6014:6:6"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"5969:21:6"},"nodeType":"YulFunctionCall","src":"5969:52:6"},"nodeType":"YulExpressionStatement","src":"5969:52:6"},{"nodeType":"YulAssignment","src":"6030:46:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6041:3:6"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6068:6:6"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6046:21:6"},"nodeType":"YulFunctionCall","src":"6046:29:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6037:3:6"},"nodeType":"YulFunctionCall","src":"6037:39:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6030:3:6"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5793:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5800:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5808:3:6","type":""}],"src":"5722:360:6"},{"body":{"nodeType":"YulBlock","src":"6186:99:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6203:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6272:5:6"}],"functionName":{"name":"convert_t_contract$_VRFCoordinatorV2Interface_$153_to_t_address","nodeType":"YulIdentifier","src":"6208:63:6"},"nodeType":"YulFunctionCall","src":"6208:70:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6196:6:6"},"nodeType":"YulFunctionCall","src":"6196:83:6"},"nodeType":"YulExpressionStatement","src":"6196:83:6"}]},"name":"abi_encode_t_contract$_VRFCoordinatorV2Interface_$153_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6174:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6181:3:6","type":""}],"src":"6088:197:6"},{"body":{"nodeType":"YulBlock","src":"6369:79:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6386:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6435:5:6"}],"functionName":{"name":"convert_t_enum$_RaffleState_$237_to_t_uint8","nodeType":"YulIdentifier","src":"6391:43:6"},"nodeType":"YulFunctionCall","src":"6391:50:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6379:6:6"},"nodeType":"YulFunctionCall","src":"6379:63:6"},"nodeType":"YulExpressionStatement","src":"6379:63:6"}]},"name":"abi_encode_t_enum$_RaffleState_$237_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6357:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6364:3:6","type":""}],"src":"6291:157:6"},{"body":{"nodeType":"YulBlock","src":"6617:235:6","statements":[{"nodeType":"YulAssignment","src":"6627:90:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6710:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"6715:1:6","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"6634:75:6"},"nodeType":"YulFunctionCall","src":"6634:83:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6627:3:6"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6815:3:6"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"6726:88:6"},"nodeType":"YulFunctionCall","src":"6726:93:6"},"nodeType":"YulExpressionStatement","src":"6726:93:6"},{"nodeType":"YulAssignment","src":"6828:18:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6839:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"6844:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6835:3:6"},"nodeType":"YulFunctionCall","src":"6835:11:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6828:3:6"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6605:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6613:3:6","type":""}],"src":"6454:398:6"},{"body":{"nodeType":"YulBlock","src":"6921:52:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6938:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6960:5:6"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"6943:16:6"},"nodeType":"YulFunctionCall","src":"6943:23:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6931:6:6"},"nodeType":"YulFunctionCall","src":"6931:36:6"},"nodeType":"YulExpressionStatement","src":"6931:36:6"}]},"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6909:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6916:3:6","type":""}],"src":"6858:115:6"},{"body":{"nodeType":"YulBlock","src":"7044:53:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7061:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7084:5:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7066:17:6"},"nodeType":"YulFunctionCall","src":"7066:24:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7054:6:6"},"nodeType":"YulFunctionCall","src":"7054:37:6"},"nodeType":"YulExpressionStatement","src":"7054:37:6"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7032:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7039:3:6","type":""}],"src":"6979:118:6"},{"body":{"nodeType":"YulBlock","src":"7166:52:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7183:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7205:5:6"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"7188:16:6"},"nodeType":"YulFunctionCall","src":"7188:23:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7176:6:6"},"nodeType":"YulFunctionCall","src":"7176:36:6"},"nodeType":"YulExpressionStatement","src":"7176:36:6"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7154:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7161:3:6","type":""}],"src":"7103:115:6"},{"body":{"nodeType":"YulBlock","src":"7287:52:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7304:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7326:5:6"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"7309:16:6"},"nodeType":"YulFunctionCall","src":"7309:23:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7297:6:6"},"nodeType":"YulFunctionCall","src":"7297:36:6"},"nodeType":"YulExpressionStatement","src":"7297:36:6"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7275:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7282:3:6","type":""}],"src":"7224:115:6"},{"body":{"nodeType":"YulBlock","src":"7533:191:6","statements":[{"nodeType":"YulAssignment","src":"7544:154:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7694:3:6"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"7551:141:6"},"nodeType":"YulFunctionCall","src":"7551:147:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7544:3:6"}]},{"nodeType":"YulAssignment","src":"7708:10:6","value":{"name":"pos","nodeType":"YulIdentifier","src":"7715:3:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7708:3:6"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7520:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7529:3:6","type":""}],"src":"7345:379:6"},{"body":{"nodeType":"YulBlock","src":"7828:124:6","statements":[{"nodeType":"YulAssignment","src":"7838:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7850:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"7861:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7846:3:6"},"nodeType":"YulFunctionCall","src":"7846:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7838:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7918:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7931:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"7942:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7927:3:6"},"nodeType":"YulFunctionCall","src":"7927:17:6"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7874:43:6"},"nodeType":"YulFunctionCall","src":"7874:71:6"},"nodeType":"YulExpressionStatement","src":"7874:71:6"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7800:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7812:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7823:4:6","type":""}],"src":"7730:222:6"},{"body":{"nodeType":"YulBlock","src":"8072:140:6","statements":[{"nodeType":"YulAssignment","src":"8082:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8094:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8105:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8090:3:6"},"nodeType":"YulFunctionCall","src":"8090:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8082:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8178:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8191:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8202:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8187:3:6"},"nodeType":"YulFunctionCall","src":"8187:17:6"}],"functionName":{"name":"abi_encode_t_address_payable_to_t_address_payable_fromStack","nodeType":"YulIdentifier","src":"8118:59:6"},"nodeType":"YulFunctionCall","src":"8118:87:6"},"nodeType":"YulExpressionStatement","src":"8118:87:6"}]},"name":"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8044:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8056:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8067:4:6","type":""}],"src":"7958:254:6"},{"body":{"nodeType":"YulBlock","src":"8344:206:6","statements":[{"nodeType":"YulAssignment","src":"8354:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8366:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8377:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8362:3:6"},"nodeType":"YulFunctionCall","src":"8362:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8354:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8434:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8447:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8458:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8443:3:6"},"nodeType":"YulFunctionCall","src":"8443:17:6"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8390:43:6"},"nodeType":"YulFunctionCall","src":"8390:71:6"},"nodeType":"YulExpressionStatement","src":"8390:71:6"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8515:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8528:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8539:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8524:3:6"},"nodeType":"YulFunctionCall","src":"8524:18:6"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8471:43:6"},"nodeType":"YulFunctionCall","src":"8471:72:6"},"nodeType":"YulExpressionStatement","src":"8471:72:6"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8308:9:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8320:6:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8328:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8339:4:6","type":""}],"src":"8218:332:6"},{"body":{"nodeType":"YulBlock","src":"8694:269:6","statements":[{"nodeType":"YulAssignment","src":"8704:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8716:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8727:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8712:3:6"},"nodeType":"YulFunctionCall","src":"8712:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8704:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8778:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8791:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8802:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8787:3:6"},"nodeType":"YulFunctionCall","src":"8787:17:6"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"8740:37:6"},"nodeType":"YulFunctionCall","src":"8740:65:6"},"nodeType":"YulExpressionStatement","src":"8740:65:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8826:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8837:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8822:3:6"},"nodeType":"YulFunctionCall","src":"8822:18:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8846:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"8852:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8842:3:6"},"nodeType":"YulFunctionCall","src":"8842:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8815:6:6"},"nodeType":"YulFunctionCall","src":"8815:48:6"},"nodeType":"YulExpressionStatement","src":"8815:48:6"},{"nodeType":"YulAssignment","src":"8872:84:6","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8942:6:6"},{"name":"tail","nodeType":"YulIdentifier","src":"8951:4:6"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8880:61:6"},"nodeType":"YulFunctionCall","src":"8880:76:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8872:4:6"}]}]},"name":"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8658:9:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8670:6:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8678:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8689:4:6","type":""}],"src":"8556:407:6"},{"body":{"nodeType":"YulBlock","src":"9171:446:6","statements":[{"nodeType":"YulAssignment","src":"9181:27:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9193:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"9204:3:6","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9189:3:6"},"nodeType":"YulFunctionCall","src":"9189:19:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9181:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9262:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9275:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"9286:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9271:3:6"},"nodeType":"YulFunctionCall","src":"9271:17:6"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"9218:43:6"},"nodeType":"YulFunctionCall","src":"9218:71:6"},"nodeType":"YulExpressionStatement","src":"9218:71:6"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9341:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9354:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"9365:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9350:3:6"},"nodeType":"YulFunctionCall","src":"9350:18:6"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"9299:41:6"},"nodeType":"YulFunctionCall","src":"9299:70:6"},"nodeType":"YulExpressionStatement","src":"9299:70:6"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9421:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9434:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"9445:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9430:3:6"},"nodeType":"YulFunctionCall","src":"9430:18:6"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"9379:41:6"},"nodeType":"YulFunctionCall","src":"9379:70:6"},"nodeType":"YulExpressionStatement","src":"9379:70:6"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"9501:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9514:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"9525:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9510:3:6"},"nodeType":"YulFunctionCall","src":"9510:18:6"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"9459:41:6"},"nodeType":"YulFunctionCall","src":"9459:70:6"},"nodeType":"YulExpressionStatement","src":"9459:70:6"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"9581:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9594:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"9605:3:6","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9590:3:6"},"nodeType":"YulFunctionCall","src":"9590:19:6"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"9539:41:6"},"nodeType":"YulFunctionCall","src":"9539:71:6"},"nodeType":"YulExpressionStatement","src":"9539:71:6"}]},"name":"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9111:9:6","type":""},{"name":"value4","nodeType":"YulTypedName","src":"9123:6:6","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9131:6:6","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9139:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9147:6:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9155:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9166:4:6","type":""}],"src":"8969:648:6"},{"body":{"nodeType":"YulBlock","src":"9754:157:6","statements":[{"nodeType":"YulAssignment","src":"9764:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9776:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"9787:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9772:3:6"},"nodeType":"YulFunctionCall","src":"9772:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9764:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9877:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9890:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"9901:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9886:3:6"},"nodeType":"YulFunctionCall","src":"9886:17:6"}],"functionName":{"name":"abi_encode_t_contract$_VRFCoordinatorV2Interface_$153_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9800:76:6"},"nodeType":"YulFunctionCall","src":"9800:104:6"},"nodeType":"YulExpressionStatement","src":"9800:104:6"}]},"name":"abi_encode_tuple_t_contract$_VRFCoordinatorV2Interface_$153__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9726:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9738:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9749:4:6","type":""}],"src":"9623:288:6"},{"body":{"nodeType":"YulBlock","src":"10028:137:6","statements":[{"nodeType":"YulAssignment","src":"10038:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10050:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"10061:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10046:3:6"},"nodeType":"YulFunctionCall","src":"10046:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10038:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10131:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10144:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"10155:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10140:3:6"},"nodeType":"YulFunctionCall","src":"10140:17:6"}],"functionName":{"name":"abi_encode_t_enum$_RaffleState_$237_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"10074:56:6"},"nodeType":"YulFunctionCall","src":"10074:84:6"},"nodeType":"YulExpressionStatement","src":"10074:84:6"}]},"name":"abi_encode_tuple_t_enum$_RaffleState_$237__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10000:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10012:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10023:4:6","type":""}],"src":"9917:248:6"},{"body":{"nodeType":"YulBlock","src":"10269:124:6","statements":[{"nodeType":"YulAssignment","src":"10279:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10291:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"10302:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10287:3:6"},"nodeType":"YulFunctionCall","src":"10287:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10279:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10359:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10372:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"10383:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10368:3:6"},"nodeType":"YulFunctionCall","src":"10368:17:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10315:43:6"},"nodeType":"YulFunctionCall","src":"10315:71:6"},"nodeType":"YulExpressionStatement","src":"10315:71:6"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10241:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10253:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10264:4:6","type":""}],"src":"10171:222:6"},{"body":{"nodeType":"YulBlock","src":"10553:288:6","statements":[{"nodeType":"YulAssignment","src":"10563:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10575:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"10586:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10571:3:6"},"nodeType":"YulFunctionCall","src":"10571:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10563:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10643:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10656:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"10667:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10652:3:6"},"nodeType":"YulFunctionCall","src":"10652:17:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10599:43:6"},"nodeType":"YulFunctionCall","src":"10599:71:6"},"nodeType":"YulExpressionStatement","src":"10599:71:6"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10724:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10737:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"10748:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10733:3:6"},"nodeType":"YulFunctionCall","src":"10733:18:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10680:43:6"},"nodeType":"YulFunctionCall","src":"10680:72:6"},"nodeType":"YulExpressionStatement","src":"10680:72:6"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"10806:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10819:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"10830:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10815:3:6"},"nodeType":"YulFunctionCall","src":"10815:18:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10762:43:6"},"nodeType":"YulFunctionCall","src":"10762:72:6"},"nodeType":"YulExpressionStatement","src":"10762:72:6"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10509:9:6","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10521:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10529:6:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10537:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10548:4:6","type":""}],"src":"10399:442:6"},{"body":{"nodeType":"YulBlock","src":"10943:122:6","statements":[{"nodeType":"YulAssignment","src":"10953:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10965:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"10976:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10961:3:6"},"nodeType":"YulFunctionCall","src":"10961:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10953:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11031:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11044:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"11055:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11040:3:6"},"nodeType":"YulFunctionCall","src":"11040:17:6"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"10989:41:6"},"nodeType":"YulFunctionCall","src":"10989:69:6"},"nodeType":"YulExpressionStatement","src":"10989:69:6"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10915:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10927:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10938:4:6","type":""}],"src":"10847:218:6"},{"body":{"nodeType":"YulBlock","src":"11112:88:6","statements":[{"nodeType":"YulAssignment","src":"11122:30:6","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"11132:18:6"},"nodeType":"YulFunctionCall","src":"11132:20:6"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11122:6:6"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11181:6:6"},{"name":"size","nodeType":"YulIdentifier","src":"11189:4:6"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"11161:19:6"},"nodeType":"YulFunctionCall","src":"11161:33:6"},"nodeType":"YulExpressionStatement","src":"11161:33:6"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"11096:4:6","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"11105:6:6","type":""}],"src":"11071:129:6"},{"body":{"nodeType":"YulBlock","src":"11246:35:6","statements":[{"nodeType":"YulAssignment","src":"11256:19:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11272:2:6","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11266:5:6"},"nodeType":"YulFunctionCall","src":"11266:9:6"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11256:6:6"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"11239:6:6","type":""}],"src":"11206:75:6"},{"body":{"nodeType":"YulBlock","src":"11369:229:6","statements":[{"body":{"nodeType":"YulBlock","src":"11474:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"11476:16:6"},"nodeType":"YulFunctionCall","src":"11476:18:6"},"nodeType":"YulExpressionStatement","src":"11476:18:6"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11446:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"11454:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11443:2:6"},"nodeType":"YulFunctionCall","src":"11443:30:6"},"nodeType":"YulIf","src":"11440:56:6"},{"nodeType":"YulAssignment","src":"11506:25:6","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11518:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"11526:4:6","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11514:3:6"},"nodeType":"YulFunctionCall","src":"11514:17:6"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"11506:4:6"}]},{"nodeType":"YulAssignment","src":"11568:23:6","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"11580:4:6"},{"kind":"number","nodeType":"YulLiteral","src":"11586:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11576:3:6"},"nodeType":"YulFunctionCall","src":"11576:15:6"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"11568:4:6"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"11353:6:6","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"11364:4:6","type":""}],"src":"11287:311:6"},{"body":{"nodeType":"YulBlock","src":"11670:241:6","statements":[{"body":{"nodeType":"YulBlock","src":"11775:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"11777:16:6"},"nodeType":"YulFunctionCall","src":"11777:18:6"},"nodeType":"YulExpressionStatement","src":"11777:18:6"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11747:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"11755:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11744:2:6"},"nodeType":"YulFunctionCall","src":"11744:30:6"},"nodeType":"YulIf","src":"11741:56:6"},{"nodeType":"YulAssignment","src":"11807:37:6","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11837:6:6"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"11815:21:6"},"nodeType":"YulFunctionCall","src":"11815:29:6"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"11807:4:6"}]},{"nodeType":"YulAssignment","src":"11881:23:6","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"11893:4:6"},{"kind":"number","nodeType":"YulLiteral","src":"11899:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11889:3:6"},"nodeType":"YulFunctionCall","src":"11889:15:6"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"11881:4:6"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"11654:6:6","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"11665:4:6","type":""}],"src":"11604:307:6"},{"body":{"nodeType":"YulBlock","src":"11975:40:6","statements":[{"nodeType":"YulAssignment","src":"11986:22:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12002:5:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11996:5:6"},"nodeType":"YulFunctionCall","src":"11996:12:6"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11986:6:6"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11958:5:6","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"11968:6:6","type":""}],"src":"11917:98:6"},{"body":{"nodeType":"YulBlock","src":"12116:73:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12133:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"12138:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12126:6:6"},"nodeType":"YulFunctionCall","src":"12126:19:6"},"nodeType":"YulExpressionStatement","src":"12126:19:6"},{"nodeType":"YulAssignment","src":"12154:29:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12173:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"12178:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12169:3:6"},"nodeType":"YulFunctionCall","src":"12169:14:6"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"12154:11:6"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12088:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"12093:6:6","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"12104:11:6","type":""}],"src":"12021:168:6"},{"body":{"nodeType":"YulBlock","src":"12308:34:6","statements":[{"nodeType":"YulAssignment","src":"12318:18:6","value":{"name":"pos","nodeType":"YulIdentifier","src":"12333:3:6"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"12318:11:6"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12280:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"12285:6:6","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"12296:11:6","type":""}],"src":"12195:147:6"},{"body":{"nodeType":"YulBlock","src":"12393:146:6","statements":[{"nodeType":"YulAssignment","src":"12403:25:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12426:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12408:17:6"},"nodeType":"YulFunctionCall","src":"12408:20:6"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"12403:1:6"}]},{"nodeType":"YulAssignment","src":"12437:25:6","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"12460:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12442:17:6"},"nodeType":"YulFunctionCall","src":"12442:20:6"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"12437:1:6"}]},{"body":{"nodeType":"YulBlock","src":"12484:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12486:16:6"},"nodeType":"YulFunctionCall","src":"12486:18:6"},"nodeType":"YulExpressionStatement","src":"12486:18:6"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12478:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"12481:1:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12475:2:6"},"nodeType":"YulFunctionCall","src":"12475:8:6"},"nodeType":"YulIf","src":"12472:34:6"},{"nodeType":"YulAssignment","src":"12516:17:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12528:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"12531:1:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12524:3:6"},"nodeType":"YulFunctionCall","src":"12524:9:6"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"12516:4:6"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"12379:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"12382:1:6","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"12388:4:6","type":""}],"src":"12348:191:6"},{"body":{"nodeType":"YulBlock","src":"12590:51:6","statements":[{"nodeType":"YulAssignment","src":"12600:35:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12629:5:6"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"12611:17:6"},"nodeType":"YulFunctionCall","src":"12611:24:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12600:7:6"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12572:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12582:7:6","type":""}],"src":"12545:96:6"},{"body":{"nodeType":"YulBlock","src":"12700:51:6","statements":[{"nodeType":"YulAssignment","src":"12710:35:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12739:5:6"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"12721:17:6"},"nodeType":"YulFunctionCall","src":"12721:24:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12710:7:6"}]}]},"name":"cleanup_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12682:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12692:7:6","type":""}],"src":"12647:104:6"},{"body":{"nodeType":"YulBlock","src":"12799:48:6","statements":[{"nodeType":"YulAssignment","src":"12809:32:6","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12834:5:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12827:6:6"},"nodeType":"YulFunctionCall","src":"12827:13:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12820:6:6"},"nodeType":"YulFunctionCall","src":"12820:21:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12809:7:6"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12781:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12791:7:6","type":""}],"src":"12757:90:6"},{"body":{"nodeType":"YulBlock","src":"12898:32:6","statements":[{"nodeType":"YulAssignment","src":"12908:16:6","value":{"name":"value","nodeType":"YulIdentifier","src":"12919:5:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12908:7:6"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12880:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12890:7:6","type":""}],"src":"12853:77:6"},{"body":{"nodeType":"YulBlock","src":"12996:81:6","statements":[{"nodeType":"YulAssignment","src":"13006:16:6","value":{"name":"value","nodeType":"YulIdentifier","src":"13017:5:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"13006:7:6"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13065:5:6"}],"functionName":{"name":"validator_assert_t_enum$_RaffleState_$237","nodeType":"YulIdentifier","src":"13023:41:6"},"nodeType":"YulFunctionCall","src":"13023:48:6"},"nodeType":"YulExpressionStatement","src":"13023:48:6"}]},"name":"cleanup_t_enum$_RaffleState_$237","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12978:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12988:7:6","type":""}],"src":"12936:141:6"},{"body":{"nodeType":"YulBlock","src":"13127:45:6","statements":[{"nodeType":"YulAssignment","src":"13137:29:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13152:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"13159:6:6","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13148:3:6"},"nodeType":"YulFunctionCall","src":"13148:18:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"13137:7:6"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13109:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"13119:7:6","type":""}],"src":"13083:89:6"},{"body":{"nodeType":"YulBlock","src":"13223:81:6","statements":[{"nodeType":"YulAssignment","src":"13233:65:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13248:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"13255:42:6","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13244:3:6"},"nodeType":"YulFunctionCall","src":"13244:54:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"13233:7:6"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13205:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"13215:7:6","type":""}],"src":"13178:126:6"},{"body":{"nodeType":"YulBlock","src":"13355:32:6","statements":[{"nodeType":"YulAssignment","src":"13365:16:6","value":{"name":"value","nodeType":"YulIdentifier","src":"13376:5:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"13365:7:6"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13337:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"13347:7:6","type":""}],"src":"13310:77:6"},{"body":{"nodeType":"YulBlock","src":"13437:49:6","statements":[{"nodeType":"YulAssignment","src":"13447:33:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13462:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"13469:10:6","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13458:3:6"},"nodeType":"YulFunctionCall","src":"13458:22:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"13447:7:6"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13419:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"13429:7:6","type":""}],"src":"13393:93:6"},{"body":{"nodeType":"YulBlock","src":"13536:57:6","statements":[{"nodeType":"YulAssignment","src":"13546:41:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13561:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"13568:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13557:3:6"},"nodeType":"YulFunctionCall","src":"13557:30:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"13546:7:6"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13518:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"13528:7:6","type":""}],"src":"13492:101:6"},{"body":{"nodeType":"YulBlock","src":"13692:66:6","statements":[{"nodeType":"YulAssignment","src":"13702:50:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13746:5:6"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"13715:30:6"},"nodeType":"YulFunctionCall","src":"13715:37:6"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"13702:9:6"}]}]},"name":"convert_t_contract$_VRFCoordinatorV2Interface_$153_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13672:5:6","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"13682:9:6","type":""}],"src":"13599:159:6"},{"body":{"nodeType":"YulBlock","src":"13837:68:6","statements":[{"nodeType":"YulAssignment","src":"13847:52:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13893:5:6"}],"functionName":{"name":"cleanup_t_enum$_RaffleState_$237","nodeType":"YulIdentifier","src":"13860:32:6"},"nodeType":"YulFunctionCall","src":"13860:39:6"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"13847:9:6"}]}]},"name":"convert_t_enum$_RaffleState_$237_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13817:5:6","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"13827:9:6","type":""}],"src":"13764:141:6"},{"body":{"nodeType":"YulBlock","src":"13971:66:6","statements":[{"nodeType":"YulAssignment","src":"13981:50:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14025:5:6"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"13994:30:6"},"nodeType":"YulFunctionCall","src":"13994:37:6"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"13981:9:6"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13951:5:6","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"13961:9:6","type":""}],"src":"13911:126:6"},{"body":{"nodeType":"YulBlock","src":"14103:53:6","statements":[{"nodeType":"YulAssignment","src":"14113:37:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14144:5:6"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"14126:17:6"},"nodeType":"YulFunctionCall","src":"14126:24:6"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"14113:9:6"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14083:5:6","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"14093:9:6","type":""}],"src":"14043:113:6"},{"body":{"nodeType":"YulBlock","src":"14213:103:6","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"14236:3:6"},{"name":"src","nodeType":"YulIdentifier","src":"14241:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"14246:6:6"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"14223:12:6"},"nodeType":"YulFunctionCall","src":"14223:30:6"},"nodeType":"YulExpressionStatement","src":"14223:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"14294:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"14299:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14290:3:6"},"nodeType":"YulFunctionCall","src":"14290:16:6"},{"kind":"number","nodeType":"YulLiteral","src":"14308:1:6","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14283:6:6"},"nodeType":"YulFunctionCall","src":"14283:27:6"},"nodeType":"YulExpressionStatement","src":"14283:27:6"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"14195:3:6","type":""},{"name":"dst","nodeType":"YulTypedName","src":"14200:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"14205:6:6","type":""}],"src":"14162:154:6"},{"body":{"nodeType":"YulBlock","src":"14371:258:6","statements":[{"nodeType":"YulVariableDeclaration","src":"14381:10:6","value":{"kind":"number","nodeType":"YulLiteral","src":"14390:1:6","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"14385:1:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"14450:63:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"14475:3:6"},{"name":"i","nodeType":"YulIdentifier","src":"14480:1:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14471:3:6"},"nodeType":"YulFunctionCall","src":"14471:11:6"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"14494:3:6"},{"name":"i","nodeType":"YulIdentifier","src":"14499:1:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14490:3:6"},"nodeType":"YulFunctionCall","src":"14490:11:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14484:5:6"},"nodeType":"YulFunctionCall","src":"14484:18:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14464:6:6"},"nodeType":"YulFunctionCall","src":"14464:39:6"},"nodeType":"YulExpressionStatement","src":"14464:39:6"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14411:1:6"},{"name":"length","nodeType":"YulIdentifier","src":"14414:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14408:2:6"},"nodeType":"YulFunctionCall","src":"14408:13:6"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"14422:19:6","statements":[{"nodeType":"YulAssignment","src":"14424:15:6","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14433:1:6"},{"kind":"number","nodeType":"YulLiteral","src":"14436:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14429:3:6"},"nodeType":"YulFunctionCall","src":"14429:10:6"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"14424:1:6"}]}]},"pre":{"nodeType":"YulBlock","src":"14404:3:6","statements":[]},"src":"14400:113:6"},{"body":{"nodeType":"YulBlock","src":"14547:76:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"14597:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"14602:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14593:3:6"},"nodeType":"YulFunctionCall","src":"14593:16:6"},{"kind":"number","nodeType":"YulLiteral","src":"14611:1:6","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14586:6:6"},"nodeType":"YulFunctionCall","src":"14586:27:6"},"nodeType":"YulExpressionStatement","src":"14586:27:6"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14528:1:6"},{"name":"length","nodeType":"YulIdentifier","src":"14531:6:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14525:2:6"},"nodeType":"YulFunctionCall","src":"14525:13:6"},"nodeType":"YulIf","src":"14522:101:6"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"14353:3:6","type":""},{"name":"dst","nodeType":"YulTypedName","src":"14358:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"14363:6:6","type":""}],"src":"14322:307:6"},{"body":{"nodeType":"YulBlock","src":"14678:238:6","statements":[{"nodeType":"YulVariableDeclaration","src":"14688:58:6","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14710:6:6"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"14740:4:6"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"14718:21:6"},"nodeType":"YulFunctionCall","src":"14718:27:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14706:3:6"},"nodeType":"YulFunctionCall","src":"14706:40:6"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"14692:10:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"14857:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"14859:16:6"},"nodeType":"YulFunctionCall","src":"14859:18:6"},"nodeType":"YulExpressionStatement","src":"14859:18:6"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"14800:10:6"},{"kind":"number","nodeType":"YulLiteral","src":"14812:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14797:2:6"},"nodeType":"YulFunctionCall","src":"14797:34:6"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"14836:10:6"},{"name":"memPtr","nodeType":"YulIdentifier","src":"14848:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14833:2:6"},"nodeType":"YulFunctionCall","src":"14833:22:6"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"14794:2:6"},"nodeType":"YulFunctionCall","src":"14794:62:6"},"nodeType":"YulIf","src":"14791:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14895:2:6","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"14899:10:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14888:6:6"},"nodeType":"YulFunctionCall","src":"14888:22:6"},"nodeType":"YulExpressionStatement","src":"14888:22:6"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14664:6:6","type":""},{"name":"size","nodeType":"YulTypedName","src":"14672:4:6","type":""}],"src":"14635:281:6"},{"body":{"nodeType":"YulBlock","src":"14956:142:6","statements":[{"nodeType":"YulAssignment","src":"14966:25:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14989:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14971:17:6"},"nodeType":"YulFunctionCall","src":"14971:20:6"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"14966:1:6"}]},{"nodeType":"YulAssignment","src":"15000:25:6","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"15023:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15005:17:6"},"nodeType":"YulFunctionCall","src":"15005:20:6"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"15000:1:6"}]},{"body":{"nodeType":"YulBlock","src":"15047:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"15049:16:6"},"nodeType":"YulFunctionCall","src":"15049:18:6"},"nodeType":"YulExpressionStatement","src":"15049:18:6"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"15044:1:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15037:6:6"},"nodeType":"YulFunctionCall","src":"15037:9:6"},"nodeType":"YulIf","src":"15034:35:6"},{"nodeType":"YulAssignment","src":"15078:14:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15087:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"15090:1:6"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"15083:3:6"},"nodeType":"YulFunctionCall","src":"15083:9:6"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"15078:1:6"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14945:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"14948:1:6","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"14954:1:6","type":""}],"src":"14922:176:6"},{"body":{"nodeType":"YulBlock","src":"15132:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15149:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15152:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15142:6:6"},"nodeType":"YulFunctionCall","src":"15142:88:6"},"nodeType":"YulExpressionStatement","src":"15142:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15246:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15249:4:6","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15239:6:6"},"nodeType":"YulFunctionCall","src":"15239:15:6"},"nodeType":"YulExpressionStatement","src":"15239:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15270:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15273:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15263:6:6"},"nodeType":"YulFunctionCall","src":"15263:15:6"},"nodeType":"YulExpressionStatement","src":"15263:15:6"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"15104:180:6"},{"body":{"nodeType":"YulBlock","src":"15318:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15335:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15338:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15328:6:6"},"nodeType":"YulFunctionCall","src":"15328:88:6"},"nodeType":"YulExpressionStatement","src":"15328:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15432:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15435:4:6","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15425:6:6"},"nodeType":"YulFunctionCall","src":"15425:15:6"},"nodeType":"YulExpressionStatement","src":"15425:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15456:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15459:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15449:6:6"},"nodeType":"YulFunctionCall","src":"15449:15:6"},"nodeType":"YulExpressionStatement","src":"15449:15:6"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"15290:180:6"},{"body":{"nodeType":"YulBlock","src":"15504:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15521:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15524:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15514:6:6"},"nodeType":"YulFunctionCall","src":"15514:88:6"},"nodeType":"YulExpressionStatement","src":"15514:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15618:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15621:4:6","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15611:6:6"},"nodeType":"YulFunctionCall","src":"15611:15:6"},"nodeType":"YulExpressionStatement","src":"15611:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15642:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15645:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15635:6:6"},"nodeType":"YulFunctionCall","src":"15635:15:6"},"nodeType":"YulExpressionStatement","src":"15635:15:6"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"15476:180:6"},{"body":{"nodeType":"YulBlock","src":"15690:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15707:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15710:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15700:6:6"},"nodeType":"YulFunctionCall","src":"15700:88:6"},"nodeType":"YulExpressionStatement","src":"15700:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15804:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15807:4:6","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15797:6:6"},"nodeType":"YulFunctionCall","src":"15797:15:6"},"nodeType":"YulExpressionStatement","src":"15797:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15828:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15831:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15821:6:6"},"nodeType":"YulFunctionCall","src":"15821:15:6"},"nodeType":"YulExpressionStatement","src":"15821:15:6"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"15662:180:6"},{"body":{"nodeType":"YulBlock","src":"15876:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15893:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15896:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15886:6:6"},"nodeType":"YulFunctionCall","src":"15886:88:6"},"nodeType":"YulExpressionStatement","src":"15886:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15990:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15993:4:6","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15983:6:6"},"nodeType":"YulFunctionCall","src":"15983:15:6"},"nodeType":"YulExpressionStatement","src":"15983:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16014:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16017:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16007:6:6"},"nodeType":"YulFunctionCall","src":"16007:15:6"},"nodeType":"YulExpressionStatement","src":"16007:15:6"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"15848:180:6"},{"body":{"nodeType":"YulBlock","src":"16123:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16140:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16143:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16133:6:6"},"nodeType":"YulFunctionCall","src":"16133:12:6"},"nodeType":"YulExpressionStatement","src":"16133:12:6"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"16034:117:6"},{"body":{"nodeType":"YulBlock","src":"16246:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16263:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16266:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16256:6:6"},"nodeType":"YulFunctionCall","src":"16256:12:6"},"nodeType":"YulExpressionStatement","src":"16256:12:6"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"16157:117:6"},{"body":{"nodeType":"YulBlock","src":"16369:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16386:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16389:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16379:6:6"},"nodeType":"YulFunctionCall","src":"16379:12:6"},"nodeType":"YulExpressionStatement","src":"16379:12:6"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"16280:117:6"},{"body":{"nodeType":"YulBlock","src":"16492:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16509:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16512:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16502:6:6"},"nodeType":"YulFunctionCall","src":"16502:12:6"},"nodeType":"YulExpressionStatement","src":"16502:12:6"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"16403:117:6"},{"body":{"nodeType":"YulBlock","src":"16615:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16632:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16635:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16625:6:6"},"nodeType":"YulFunctionCall","src":"16625:12:6"},"nodeType":"YulExpressionStatement","src":"16625:12:6"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"16526:117:6"},{"body":{"nodeType":"YulBlock","src":"16738:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16755:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16758:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16748:6:6"},"nodeType":"YulFunctionCall","src":"16748:12:6"},"nodeType":"YulExpressionStatement","src":"16748:12:6"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"16649:117:6"},{"body":{"nodeType":"YulBlock","src":"16820:54:6","statements":[{"nodeType":"YulAssignment","src":"16830:38:6","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16848:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"16855:2:6","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16844:3:6"},"nodeType":"YulFunctionCall","src":"16844:14:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16864:2:6","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"16860:3:6"},"nodeType":"YulFunctionCall","src":"16860:7:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16840:3:6"},"nodeType":"YulFunctionCall","src":"16840:28:6"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16830:6:6"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16803:5:6","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"16813:6:6","type":""}],"src":"16772:102:6"},{"body":{"nodeType":"YulBlock","src":"16986:8:6","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16978:6:6","type":""}],"src":"16880:114:6"},{"body":{"nodeType":"YulBlock","src":"17058:62:6","statements":[{"body":{"nodeType":"YulBlock","src":"17092:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"17094:16:6"},"nodeType":"YulFunctionCall","src":"17094:18:6"},"nodeType":"YulExpressionStatement","src":"17094:18:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17081:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"17088:1:6","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17078:2:6"},"nodeType":"YulFunctionCall","src":"17078:12:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17071:6:6"},"nodeType":"YulFunctionCall","src":"17071:20:6"},"nodeType":"YulIf","src":"17068:46:6"}]},"name":"validator_assert_t_enum$_RaffleState_$237","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17051:5:6","type":""}],"src":"17000:120:6"},{"body":{"nodeType":"YulBlock","src":"17169:79:6","statements":[{"body":{"nodeType":"YulBlock","src":"17226:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17235:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17238:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17228:6:6"},"nodeType":"YulFunctionCall","src":"17228:12:6"},"nodeType":"YulExpressionStatement","src":"17228:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17192:5:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17217:5:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17199:17:6"},"nodeType":"YulFunctionCall","src":"17199:24:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"17189:2:6"},"nodeType":"YulFunctionCall","src":"17189:35:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17182:6:6"},"nodeType":"YulFunctionCall","src":"17182:43:6"},"nodeType":"YulIf","src":"17179:63:6"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17162:5:6","type":""}],"src":"17126:122:6"}]},"contents":"{\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_contract$_VRFCoordinatorV2Interface_$153_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_VRFCoordinatorV2Interface_$153_to_t_address(value))\n    }\n\n    function abi_encode_t_enum$_RaffleState_$237_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_RaffleState_$237_to_t_uint8(value))\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_contract$_VRFCoordinatorV2Interface_$153__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_VRFCoordinatorV2Interface_$153_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_enum$_RaffleState_$237__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_RaffleState_$237_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_enum$_RaffleState_$237(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_RaffleState_$237(value)\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function convert_t_contract$_VRFCoordinatorV2Interface_$153_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_enum$_RaffleState_$237_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_RaffleState_$237(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function validator_assert_t_enum$_RaffleState_$237(value) {\n        if iszero(lt(value, 2)) { panic_error_0x21() }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":6,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"164":[{"length":32,"start":965},{"length":32,"start":1049}],"239":[{"length":32,"start":904},{"length":32,"start":1157}],"245":[{"length":32,"start":1716},{"length":32,"start":2516}],"247":[{"length":32,"start":1776}],"249":[{"length":32,"start":1809}],"254":[{"length":32,"start":1844}],"261":[{"length":32,"start":2265},{"length":32,"start":2415}]},"linkReferences":{},"object":"6080604052600436106100e85760003560e01c8063473f1ddc1161008a57806391ad27b41161005957806391ad27b4146102c6578063ae771f6b146102f1578063aebc45501461032e578063fd6673f514610359576100e8565b8063473f1ddc1461020757806353a2c19a146102325780635f1b0fd81461025d5780636e04ff0d14610288576100e8565b80632cfcc539116100c65780632cfcc5391461016c578063320229eb146101765780634585e33b146101a1578063460e2049146101ca576100e8565b806309bc33a7146100ed578063115cbaf5146101185780631fe543e314610143575b600080fd5b3480156100f957600080fd5b50610102610384565b60405161010f91906111d3565b60405180910390f35b34801561012457600080fd5b5061012d6103ac565b60405161013a91906111b8565b60405180910390f35b34801561014f57600080fd5b5061016a60048036038101906101659190610f58565b6103c3565b005b610174610483565b005b34801561018257600080fd5b5061018b6105f2565b60405161019891906111d3565b60405180910390f35b3480156101ad57600080fd5b506101c860048036038101906101c39190610e68565b6105fc565b005b3480156101d657600080fd5b506101f160048036038101906101ec9190610efe565b6107fc565b6040516101fe91906110bb565b60405180910390f35b34801561021357600080fd5b5061021c610843565b60405161022991906110bb565b60405180910390f35b34801561023e57600080fd5b5061024761086d565b6040516102549190611225565b60405180910390f35b34801561026957600080fd5b50610272610876565b60405161027f91906111d3565b60405180910390f35b34801561029457600080fd5b506102af60048036038101906102aa9190610eb5565b610883565b6040516102bd92919061111a565b60405180910390f35b3480156102d257600080fd5b506102db61096b565b6040516102e891906111d3565b60405180910390f35b3480156102fd57600080fd5b5061031860048036038101906103139190610efe565b610993565b60405161032591906110d6565b60405180910390f35b34801561033a57600080fd5b506103436109d2565b604051610350919061119d565b60405180910390f35b34801561036557600080fd5b5061036e6109f6565b60405161037b91906111d3565b60405180910390f35b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900460ff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461047557337f00000000000000000000000000000000000000000000000000000000000000006040517f1cf993f400000000000000000000000000000000000000000000000000000000815260040161046c9291906110f1565b60405180910390fd5b61047f8282610a02565b5050565b7f00000000000000000000000000000000000000000000000000000000000000003410156104dd576040517f53909cba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018111156104f1576104f0611510565b5b600260009054906101000a900460ff16600181111561051357610512611510565b5b1461054a576040517f9a41a9f900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f742d070bf0f3edace132a9da8ba725e8cf99c478869cee7f673ed6085e2f8e6460405160405180910390a2565b6000600154905090565b600061061660405180602001604052806000815250610883565b509050806106855747600080549050600260009054906101000a900460ff16600181111561064757610646611510565b5b6040517f6acd5de900000000000000000000000000000000000000000000000000000000815260040161067c939291906111ee565b60405180910390fd5b6001600260006101000a81548160ff021916908360018111156106ab576106aa611510565b5b021790555060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635d3b1d307f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000060037f000000000000000000000000000000000000000000000000000000000000000060016040518663ffffffff1660e01b815260040161077595949392919061114a565b602060405180830381600087803b15801561078f57600080fd5b505af11580156107a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c79190610f2b565b9050807fe0abfa81226f1e2ce09ba287cbb4c241e89b2b891a389274bb7d9c46e344daf060405160405180910390a250505050565b60008082815481106108115761081061153f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006001905090565b6000600361ffff16905090565b600060606000600260009054906101000a900460ff1660018111156108ab576108aa611510565b5b600060018111156108bf576108be611510565b5b1490506000806000805490501190506000804711905060007f00000000000000000000000000000000000000000000000000000000000000006001544261090691906112e9565b1190508380156109135750825b801561091c5750815b80156109255750805b9550856040518060400160405280600381526020017f30783000000000000000000000000000000000000000000000000000000000008152509550955050505050915091565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600081815481106109a357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008080549050905090565b6000808054905082600081518110610a1d57610a1c61153f565b5b6020026020010151610a2f9190611481565b90506000808281548110610a4657610a4561153f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905080600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600067ffffffffffffffff811115610acf57610ace61156e565b5b604051908082528060200260200182016040528015610afd5781602001602082028036833780820191505090505b5060009080519060200190610b13929190610c33565b506000600260006101000a81548160ff02191690836001811115610b3a57610b39611510565b5b02179055504260018190555060008173ffffffffffffffffffffffffffffffffffffffff1647604051610b6c906110a6565b60006040518083038185875af1925050503d8060008114610ba9576040519150601f19603f3d011682016040523d82523d6000602084013e610bae565b606091505b5050905080610be9576040517f835b702e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167fb858f78c6ef3de6c040cd394535543e98132bc3c33d1e98398f4f878915b6ba960405160405180910390a25050505050565b828054828255906000526020600020908101928215610cac579160200282015b82811115610cab5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610c53565b5b509050610cb99190610cbd565b5090565b5b80821115610cd6576000816000905550600101610cbe565b5090565b6000610ced610ce884611265565b611240565b90508083825260208201905082856020860282011115610d1057610d0f6115a7565b5b60005b85811015610d405781610d268882610e3e565b845260208401935060208301925050600181019050610d13565b5050509392505050565b6000610d5d610d5884611291565b611240565b905082815260208101848484011115610d7957610d786115ac565b5b610d8484828561140e565b509392505050565b600082601f830112610da157610da06115a2565b5b8135610db1848260208601610cda565b91505092915050565b60008083601f840112610dd057610dcf6115a2565b5b8235905067ffffffffffffffff811115610ded57610dec61159d565b5b602083019150836001820283011115610e0957610e086115a7565b5b9250929050565b600082601f830112610e2557610e246115a2565b5b8135610e35848260208601610d4a565b91505092915050565b600081359050610e4d816115e3565b92915050565b600081519050610e62816115e3565b92915050565b60008060208385031215610e7f57610e7e6115b6565b5b600083013567ffffffffffffffff811115610e9d57610e9c6115b1565b5b610ea985828601610dba565b92509250509250929050565b600060208284031215610ecb57610eca6115b6565b5b600082013567ffffffffffffffff811115610ee957610ee86115b1565b5b610ef584828501610e10565b91505092915050565b600060208284031215610f1457610f136115b6565b5b6000610f2284828501610e3e565b91505092915050565b600060208284031215610f4157610f406115b6565b5b6000610f4f84828501610e53565b91505092915050565b60008060408385031215610f6f57610f6e6115b6565b5b6000610f7d85828601610e3e565b925050602083013567ffffffffffffffff811115610f9e57610f9d6115b1565b5b610faa85828601610d8c565b9150509250929050565b610fbd8161132f565b82525050565b610fcc8161131d565b82525050565b610fdb81611341565b82525050565b610fea8161134d565b82525050565b6000610ffb826112c2565b61100581856112cd565b935061101581856020860161141d565b61101e816115bb565b840191505092915050565b611032816113c6565b82525050565b611041816113d8565b82525050565b60006110546000836112de565b915061105f826115cc565b600082019050919050565b6110738161136a565b82525050565b61108281611398565b82525050565b611091816113a2565b82525050565b6110a0816113b2565b82525050565b60006110b182611047565b9150819050919050565b60006020820190506110d06000830184610fc3565b92915050565b60006020820190506110eb6000830184610fb4565b92915050565b60006040820190506111066000830185610fc3565b6111136020830184610fc3565b9392505050565b600060408201905061112f6000830185610fd2565b81810360208301526111418184610ff0565b90509392505050565b600060a08201905061115f6000830188610fe1565b61116c6020830187611097565b611179604083018661106a565b6111866060830185611088565b6111936080830184611088565b9695505050505050565b60006020820190506111b26000830184611029565b92915050565b60006020820190506111cd6000830184611038565b92915050565b60006020820190506111e86000830184611079565b92915050565b60006060820190506112036000830186611079565b6112106020830185611079565b61121d6040830184611079565b949350505050565b600060208201905061123a6000830184611088565b92915050565b600061124a61125b565b90506112568282611450565b919050565b6000604051905090565b600067ffffffffffffffff8211156112805761127f61156e565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156112ac576112ab61156e565b5b6112b5826115bb565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b60006112f482611398565b91506112ff83611398565b925082821015611312576113116114b2565b5b828203905092915050565b600061132882611378565b9050919050565b600061133a82611378565b9050919050565b60008115159050919050565b6000819050919050565b6000819050611365826115cf565b919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b60006113d1826113ea565b9050919050565b60006113e382611357565b9050919050565b60006113f5826113fc565b9050919050565b600061140782611378565b9050919050565b82818337600083830152505050565b60005b8381101561143b578082015181840152602081019050611420565b8381111561144a576000848401525b50505050565b611459826115bb565b810181811067ffffffffffffffff821117156114785761147761156e565b5b80604052505050565b600061148c82611398565b915061149783611398565b9250826114a7576114a66114e1565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b50565b600281106115e0576115df611510565b5b50565b6115ec81611398565b81146115f757600080fd5b5056fea26469706673582212201a36a9e48089f5a25101bc75af7a73b37ef5dfe952be40bd77aed35a1f43d45364736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x473F1DDC GT PUSH2 0x8A JUMPI DUP1 PUSH4 0x91AD27B4 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x91AD27B4 EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0xAE771F6B EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0xAEBC4550 EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0xFD6673F5 EQ PUSH2 0x359 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x473F1DDC EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x53A2C19A EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x5F1B0FD8 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x288 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x2CFCC539 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x2CFCC539 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x320229EB EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x460E2049 EQ PUSH2 0x1CA JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x9BC33A7 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x115CBAF5 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x143 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0x384 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12D PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x165 SWAP2 SWAP1 PUSH2 0xF58 JUMP JUMPDEST PUSH2 0x3C3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x174 PUSH2 0x483 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18B PUSH2 0x5F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0xE68 JUMP JUMPDEST PUSH2 0x5FC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0xEFE JUMP JUMPDEST PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x10BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x843 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x10BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x247 PUSH2 0x86D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x1225 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x876 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0xEB5 JUMP JUMPDEST PUSH2 0x883 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BD SWAP3 SWAP2 SWAP1 PUSH2 0x111A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH2 0x96B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x318 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x313 SWAP2 SWAP1 PUSH2 0xEFE JUMP JUMPDEST PUSH2 0x993 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x10D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x343 PUSH2 0x9D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x119D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36E PUSH2 0x9F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x475 JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46C SWAP3 SWAP2 SWAP1 PUSH2 0x10F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x47F DUP3 DUP3 PUSH2 0xA02 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0x4DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x53909CBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x4F1 JUMPI PUSH2 0x4F0 PUSH2 0x1510 JUMP JUMPDEST JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x513 JUMPI PUSH2 0x512 PUSH2 0x1510 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x54A JUMPI PUSH1 0x40 MLOAD PUSH32 0x9A41A9F900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x742D070BF0F3EDACE132A9DA8BA725E8CF99C478869CEE7F673ED6085E2F8E64 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x616 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x883 JUMP JUMPDEST POP SWAP1 POP DUP1 PUSH2 0x685 JUMPI SELFBALANCE PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x647 JUMPI PUSH2 0x646 PUSH2 0x1510 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6ACD5DE900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x6AB JUMPI PUSH2 0x6AA PUSH2 0x1510 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 PUSH32 0x0 PUSH1 0x1 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x775 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x114A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x78F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7A3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7C7 SWAP2 SWAP1 PUSH2 0xF2B JUMP JUMPDEST SWAP1 POP DUP1 PUSH32 0xE0ABFA81226F1E2CE09BA287CBB4C241E89B2B891A389274BB7D9C46E344DAF0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x811 JUMPI PUSH2 0x810 PUSH2 0x153F JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH2 0xFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x8AB JUMPI PUSH2 0x8AA PUSH2 0x1510 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x8BF JUMPI PUSH2 0x8BE PUSH2 0x1510 JUMP JUMPDEST JUMPDEST EQ SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 POP GT SWAP1 POP PUSH1 0x0 DUP1 SELFBALANCE GT SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 SLOAD TIMESTAMP PUSH2 0x906 SWAP2 SWAP1 PUSH2 0x12E9 JUMP JUMPDEST GT SWAP1 POP DUP4 DUP1 ISZERO PUSH2 0x913 JUMPI POP DUP3 JUMPDEST DUP1 ISZERO PUSH2 0x91C JUMPI POP DUP2 JUMPDEST DUP1 ISZERO PUSH2 0x925 JUMPI POP DUP1 JUMPDEST SWAP6 POP DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3078300000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP6 POP SWAP6 POP POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x9A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xA1D JUMPI PUSH2 0xA1C PUSH2 0x153F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xA2F SWAP2 SWAP1 PUSH2 0x1481 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA46 JUMPI PUSH2 0xA45 PUSH2 0x153F JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH1 0x2 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xACF JUMPI PUSH2 0xACE PUSH2 0x156E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAFD JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xB13 SWAP3 SWAP2 SWAP1 PUSH2 0xC33 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xB3A JUMPI PUSH2 0xB39 PUSH2 0x1510 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0xB6C SWAP1 PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xBA9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBAE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xBE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x835B702E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB858F78C6EF3DE6C040CD394535543E98132BC3C33D1E98398F4F878915B6BA9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xCAC JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xCAB JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xC53 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xCB9 SWAP2 SWAP1 PUSH2 0xCBD JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xCD6 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xCBE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCED PUSH2 0xCE8 DUP5 PUSH2 0x1265 JUMP JUMPDEST PUSH2 0x1240 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0xD10 JUMPI PUSH2 0xD0F PUSH2 0x15A7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xD40 JUMPI DUP2 PUSH2 0xD26 DUP9 DUP3 PUSH2 0xE3E JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xD13 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD5D PUSH2 0xD58 DUP5 PUSH2 0x1291 JUMP JUMPDEST PUSH2 0x1240 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xD79 JUMPI PUSH2 0xD78 PUSH2 0x15AC JUMP JUMPDEST JUMPDEST PUSH2 0xD84 DUP5 DUP3 DUP6 PUSH2 0x140E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xDA1 JUMPI PUSH2 0xDA0 PUSH2 0x15A2 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDB1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xCDA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xDD0 JUMPI PUSH2 0xDCF PUSH2 0x15A2 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDED JUMPI PUSH2 0xDEC PUSH2 0x159D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xE09 JUMPI PUSH2 0xE08 PUSH2 0x15A7 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE25 JUMPI PUSH2 0xE24 PUSH2 0x15A2 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xE35 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xD4A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE4D DUP2 PUSH2 0x15E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xE62 DUP2 PUSH2 0x15E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE7F JUMPI PUSH2 0xE7E PUSH2 0x15B6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE9D JUMPI PUSH2 0xE9C PUSH2 0x15B1 JUMP JUMPDEST JUMPDEST PUSH2 0xEA9 DUP6 DUP3 DUP7 ADD PUSH2 0xDBA JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xECB JUMPI PUSH2 0xECA PUSH2 0x15B6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEE9 JUMPI PUSH2 0xEE8 PUSH2 0x15B1 JUMP JUMPDEST JUMPDEST PUSH2 0xEF5 DUP5 DUP3 DUP6 ADD PUSH2 0xE10 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF14 JUMPI PUSH2 0xF13 PUSH2 0x15B6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF22 DUP5 DUP3 DUP6 ADD PUSH2 0xE3E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF41 JUMPI PUSH2 0xF40 PUSH2 0x15B6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF4F DUP5 DUP3 DUP6 ADD PUSH2 0xE53 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF6F JUMPI PUSH2 0xF6E PUSH2 0x15B6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF7D DUP6 DUP3 DUP7 ADD PUSH2 0xE3E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF9E JUMPI PUSH2 0xF9D PUSH2 0x15B1 JUMP JUMPDEST JUMPDEST PUSH2 0xFAA DUP6 DUP3 DUP7 ADD PUSH2 0xD8C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xFBD DUP2 PUSH2 0x132F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xFCC DUP2 PUSH2 0x131D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xFDB DUP2 PUSH2 0x1341 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xFEA DUP2 PUSH2 0x134D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFB DUP3 PUSH2 0x12C2 JUMP JUMPDEST PUSH2 0x1005 DUP2 DUP6 PUSH2 0x12CD JUMP JUMPDEST SWAP4 POP PUSH2 0x1015 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x141D JUMP JUMPDEST PUSH2 0x101E DUP2 PUSH2 0x15BB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1032 DUP2 PUSH2 0x13C6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1041 DUP2 PUSH2 0x13D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1054 PUSH1 0x0 DUP4 PUSH2 0x12DE JUMP JUMPDEST SWAP2 POP PUSH2 0x105F DUP3 PUSH2 0x15CC JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1073 DUP2 PUSH2 0x136A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1082 DUP2 PUSH2 0x1398 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1091 DUP2 PUSH2 0x13A2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x10A0 DUP2 PUSH2 0x13B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10B1 DUP3 PUSH2 0x1047 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10D0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFC3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10EB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFB4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1106 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xFC3 JUMP JUMPDEST PUSH2 0x1113 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFC3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x112F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xFD2 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1141 DUP2 DUP5 PUSH2 0xFF0 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x115F PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0xFE1 JUMP JUMPDEST PUSH2 0x116C PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1097 JUMP JUMPDEST PUSH2 0x1179 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x106A JUMP JUMPDEST PUSH2 0x1186 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1088 JUMP JUMPDEST PUSH2 0x1193 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1088 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11B2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1029 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11CD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1038 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11E8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1079 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1203 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1079 JUMP JUMPDEST PUSH2 0x1210 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1079 JUMP JUMPDEST PUSH2 0x121D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1079 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x123A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1088 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x124A PUSH2 0x125B JUMP JUMPDEST SWAP1 POP PUSH2 0x1256 DUP3 DUP3 PUSH2 0x1450 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1280 JUMPI PUSH2 0x127F PUSH2 0x156E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x12AC JUMPI PUSH2 0x12AB PUSH2 0x156E JUMP JUMPDEST JUMPDEST PUSH2 0x12B5 DUP3 PUSH2 0x15BB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12F4 DUP3 PUSH2 0x1398 JUMP JUMPDEST SWAP2 POP PUSH2 0x12FF DUP4 PUSH2 0x1398 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1312 JUMPI PUSH2 0x1311 PUSH2 0x14B2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1328 DUP3 PUSH2 0x1378 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x133A DUP3 PUSH2 0x1378 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x1365 DUP3 PUSH2 0x15CF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13D1 DUP3 PUSH2 0x13EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13E3 DUP3 PUSH2 0x1357 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13F5 DUP3 PUSH2 0x13FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1407 DUP3 PUSH2 0x1378 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x143B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1420 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x144A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1459 DUP3 PUSH2 0x15BB JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1478 JUMPI PUSH2 0x1477 PUSH2 0x156E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x148C DUP3 PUSH2 0x1398 JUMP JUMPDEST SWAP2 POP PUSH2 0x1497 DUP4 PUSH2 0x1398 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x14A7 JUMPI PUSH2 0x14A6 PUSH2 0x14E1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x15E0 JUMPI PUSH2 0x15DF PUSH2 0x1510 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x15EC DUP2 PUSH2 0x1398 JUMP JUMPDEST DUP2 EQ PUSH2 0x15F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE CALLDATASIZE 0xA9 0xE4 DUP1 DUP10 CREATE2 LOG2 MLOAD ADD 0xBC PUSH22 0xAF7A73B37EF5DFE952BE40BD77AED35A1F43D4536473 PUSH16 0x6C634300080700330000000000000000 ","sourceMap":"494:4341:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3996:87;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4280:91;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6618:256:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1867:296:5;;;:::i;:::-;;4741:91;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2736:624;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4086:99;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4188:89;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4374:79;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4552:103;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2166:564;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;4658:80;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;671:34;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;709:59;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4456:93;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3996:87;4042:7;4065:13;4058:20;;3996:87;:::o;4280:91::-;4327:11;4353:13;;;;;;;;;;;4346:20;;4280:91;:::o;6618:256:4:-;6731:14;6717:28;;:10;:28;;;6713:109;;6788:10;6800:14;6762:53;;;;;;;;;;;;:::i;:::-;;;;;;;;6713:109;6827:42;6846:9;6857:11;6827:18;:42::i;:::-;6618:256;;:::o;1867:296:5:-;1927:13;1915:9;:25;1912:77;;;1958:22;;;;;;;;;;;;;;1912:77;2016:16;1999:33;;;;;;;;:::i;:::-;;:13;;;;;;;;;;;:33;;;;;;;;:::i;:::-;;;1995:86;;2050:23;;;;;;;;;;;;;;1995:86;2088:9;2111:10;2088:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2147:10;2135:23;;;;;;;;;;;;1867:296::o;4741:91::-;4791:7;4812:15;;4805:22;;4741:91;:::o;2736:624::-;2817:17;2840:15;;;;;;;;;;;;;:11;:15::i;:::-;2816:39;;;2865:12;2860:164;;2920:21;2960:9;:16;;;;3003:13;;;;;;;;;;;2995:22;;;;;;;;:::i;:::-;;2897:121;;;;;;;;;;;;;:::i;:::-;;;;;;;;2860:164;3045:23;3029:13;;:39;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;3077:17;3099:16;:35;;;3149:9;3173:16;905:1;3240:18;993:1;3099:194;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3077:216;;3331:9;3309:32;;;;;;;;;;2811:549;;2736:624;;:::o;4086:99::-;4141:7;4164:9;4174:5;4164:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4157:23;;4086:99;;;:::o;4188:89::-;4236:7;4258:14;;;;;;;;;;;4251:21;;4188:89;:::o;4374:79::-;4418:6;993:1;4432:16;;4374:79;:::o;4552:103::-;4608:7;905:1;4622:28;;;;4552:103;:::o;2166:564::-;2299:17;2318:12;2366:11;2402:13;;;;;;;;;;;2382:33;;;;;;;;:::i;:::-;;:16;:33;;;;;;;;:::i;:::-;;;2366:50;;2427:15;2465:1;2446:9;:16;;;;:20;2427:39;;2477:15;2522:1;2497:22;:26;2477:46;;2535:16;2594:10;2575:15;;2557;:33;;;;:::i;:::-;2556:48;2535:71;;2633:6;:20;;;;;2643:10;2633:20;:34;;;;;2657:10;2633:34;:49;;;;;2671:11;2633:49;2617:66;;2702:12;2694:28;;;;;;;;;;;;;;;;;;;;;;;;;2166:564;;;:::o;4658:80::-;4702:7;4723:10;4716:17;;4658:80;:::o;671:34::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;709:59::-;;;:::o;4456:93::-;4507:7;4528:9;:16;;;;4521:23;;4456:93;:::o;3363:628::-;3474:21;3516:9;:16;;;;3498:12;3511:1;3498:15;;;;;;;;:::i;:::-;;;;;;;;:34;;;;:::i;:::-;3474:58;;3540:31;3575:9;3585:13;3575:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3540:59;;3624:15;3607:14;;:32;;;;;;;;;;;;;;;;;;3681:1;3659:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3647:9;:36;;;;;;;;;;;;:::i;:::-;;3707:16;3691:13;;:32;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;3750:15;3731;:34;;;;3783:12;3801:15;:20;;3829:21;3801:54;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3782:73;;;3870:7;3865:74;;3898:30;;;;;;;;;;;;;;3865:74;3970:15;3951:35;;;;;;;;;;;;3466:525;;;3363:628;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;24:722:6:-;120:5;145:81;161:64;218:6;161:64;:::i;:::-;145:81;:::i;:::-;136:90;;246:5;275:6;268:5;261:21;309:4;302:5;298:16;291:23;;335:6;385:3;377:4;369:6;365:17;360:3;356:27;353:36;350:143;;;404:79;;:::i;:::-;350:143;517:1;502:238;527:6;524:1;521:13;502:238;;;595:3;624:37;657:3;645:10;624:37;:::i;:::-;619:3;612:50;691:4;686:3;682:14;675:21;;725:4;720:3;716:14;709:21;;562:178;549:1;546;542:9;537:14;;502:238;;;506:14;126:620;;24:722;;;;;:::o;752:410::-;829:5;854:65;870:48;911:6;870:48;:::i;:::-;854:65;:::i;:::-;845:74;;942:6;935:5;928:21;980:4;973:5;969:16;1018:3;1009:6;1004:3;1000:16;997:25;994:112;;;1025:79;;:::i;:::-;994:112;1115:41;1149:6;1144:3;1139;1115:41;:::i;:::-;835:327;752:410;;;;;:::o;1185:370::-;1256:5;1305:3;1298:4;1290:6;1286:17;1282:27;1272:122;;1313:79;;:::i;:::-;1272:122;1430:6;1417:20;1455:94;1545:3;1537:6;1530:4;1522:6;1518:17;1455:94;:::i;:::-;1446:103;;1262:293;1185:370;;;;:::o;1574:552::-;1631:8;1641:6;1691:3;1684:4;1676:6;1672:17;1668:27;1658:122;;1699:79;;:::i;:::-;1658:122;1812:6;1799:20;1789:30;;1842:18;1834:6;1831:30;1828:117;;;1864:79;;:::i;:::-;1828:117;1978:4;1970:6;1966:17;1954:29;;2032:3;2024:4;2016:6;2012:17;2002:8;1998:32;1995:41;1992:128;;;2039:79;;:::i;:::-;1992:128;1574:552;;;;;:::o;2145:338::-;2200:5;2249:3;2242:4;2234:6;2230:17;2226:27;2216:122;;2257:79;;:::i;:::-;2216:122;2374:6;2361:20;2399:78;2473:3;2465:6;2458:4;2450:6;2446:17;2399:78;:::i;:::-;2390:87;;2206:277;2145:338;;;;:::o;2489:139::-;2535:5;2573:6;2560:20;2551:29;;2589:33;2616:5;2589:33;:::i;:::-;2489:139;;;;:::o;2634:143::-;2691:5;2722:6;2716:13;2707:22;;2738:33;2765:5;2738:33;:::i;:::-;2634:143;;;;:::o;2783:527::-;2853:6;2861;2910:2;2898:9;2889:7;2885:23;2881:32;2878:119;;;2916:79;;:::i;:::-;2878:119;3064:1;3053:9;3049:17;3036:31;3094:18;3086:6;3083:30;3080:117;;;3116:79;;:::i;:::-;3080:117;3229:64;3285:7;3276:6;3265:9;3261:22;3229:64;:::i;:::-;3211:82;;;;3007:296;2783:527;;;;;:::o;3316:507::-;3384:6;3433:2;3421:9;3412:7;3408:23;3404:32;3401:119;;;3439:79;;:::i;:::-;3401:119;3587:1;3576:9;3572:17;3559:31;3617:18;3609:6;3606:30;3603:117;;;3639:79;;:::i;:::-;3603:117;3744:62;3798:7;3789:6;3778:9;3774:22;3744:62;:::i;:::-;3734:72;;3530:286;3316:507;;;;:::o;3829:329::-;3888:6;3937:2;3925:9;3916:7;3912:23;3908:32;3905:119;;;3943:79;;:::i;:::-;3905:119;4063:1;4088:53;4133:7;4124:6;4113:9;4109:22;4088:53;:::i;:::-;4078:63;;4034:117;3829:329;;;;:::o;4164:351::-;4234:6;4283:2;4271:9;4262:7;4258:23;4254:32;4251:119;;;4289:79;;:::i;:::-;4251:119;4409:1;4434:64;4490:7;4481:6;4470:9;4466:22;4434:64;:::i;:::-;4424:74;;4380:128;4164:351;;;;:::o;4521:684::-;4614:6;4622;4671:2;4659:9;4650:7;4646:23;4642:32;4639:119;;;4677:79;;:::i;:::-;4639:119;4797:1;4822:53;4867:7;4858:6;4847:9;4843:22;4822:53;:::i;:::-;4812:63;;4768:117;4952:2;4941:9;4937:18;4924:32;4983:18;4975:6;4972:30;4969:117;;;5005:79;;:::i;:::-;4969:117;5110:78;5180:7;5171:6;5160:9;5156:22;5110:78;:::i;:::-;5100:88;;4895:303;4521:684;;;;;:::o;5211:142::-;5314:32;5340:5;5314:32;:::i;:::-;5309:3;5302:45;5211:142;;:::o;5359:118::-;5446:24;5464:5;5446:24;:::i;:::-;5441:3;5434:37;5359:118;;:::o;5483:109::-;5564:21;5579:5;5564:21;:::i;:::-;5559:3;5552:34;5483:109;;:::o;5598:118::-;5685:24;5703:5;5685:24;:::i;:::-;5680:3;5673:37;5598:118;;:::o;5722:360::-;5808:3;5836:38;5868:5;5836:38;:::i;:::-;5890:70;5953:6;5948:3;5890:70;:::i;:::-;5883:77;;5969:52;6014:6;6009:3;6002:4;5995:5;5991:16;5969:52;:::i;:::-;6046:29;6068:6;6046:29;:::i;:::-;6041:3;6037:39;6030:46;;5812:270;5722:360;;;;:::o;6088:197::-;6208:70;6272:5;6208:70;:::i;:::-;6203:3;6196:83;6088:197;;:::o;6291:157::-;6391:50;6435:5;6391:50;:::i;:::-;6386:3;6379:63;6291:157;;:::o;6454:398::-;6613:3;6634:83;6715:1;6710:3;6634:83;:::i;:::-;6627:90;;6726:93;6815:3;6726:93;:::i;:::-;6844:1;6839:3;6835:11;6828:18;;6454:398;;;:::o;6858:115::-;6943:23;6960:5;6943:23;:::i;:::-;6938:3;6931:36;6858:115;;:::o;6979:118::-;7066:24;7084:5;7066:24;:::i;:::-;7061:3;7054:37;6979:118;;:::o;7103:115::-;7188:23;7205:5;7188:23;:::i;:::-;7183:3;7176:36;7103:115;;:::o;7224:::-;7309:23;7326:5;7309:23;:::i;:::-;7304:3;7297:36;7224:115;;:::o;7345:379::-;7529:3;7551:147;7694:3;7551:147;:::i;:::-;7544:154;;7715:3;7708:10;;7345:379;;;:::o;7730:222::-;7823:4;7861:2;7850:9;7846:18;7838:26;;7874:71;7942:1;7931:9;7927:17;7918:6;7874:71;:::i;:::-;7730:222;;;;:::o;7958:254::-;8067:4;8105:2;8094:9;8090:18;8082:26;;8118:87;8202:1;8191:9;8187:17;8178:6;8118:87;:::i;:::-;7958:254;;;;:::o;8218:332::-;8339:4;8377:2;8366:9;8362:18;8354:26;;8390:71;8458:1;8447:9;8443:17;8434:6;8390:71;:::i;:::-;8471:72;8539:2;8528:9;8524:18;8515:6;8471:72;:::i;:::-;8218:332;;;;;:::o;8556:407::-;8689:4;8727:2;8716:9;8712:18;8704:26;;8740:65;8802:1;8791:9;8787:17;8778:6;8740:65;:::i;:::-;8852:9;8846:4;8842:20;8837:2;8826:9;8822:18;8815:48;8880:76;8951:4;8942:6;8880:76;:::i;:::-;8872:84;;8556:407;;;;;:::o;8969:648::-;9166:4;9204:3;9193:9;9189:19;9181:27;;9218:71;9286:1;9275:9;9271:17;9262:6;9218:71;:::i;:::-;9299:70;9365:2;9354:9;9350:18;9341:6;9299:70;:::i;:::-;9379;9445:2;9434:9;9430:18;9421:6;9379:70;:::i;:::-;9459;9525:2;9514:9;9510:18;9501:6;9459:70;:::i;:::-;9539:71;9605:3;9594:9;9590:19;9581:6;9539:71;:::i;:::-;8969:648;;;;;;;;:::o;9623:288::-;9749:4;9787:2;9776:9;9772:18;9764:26;;9800:104;9901:1;9890:9;9886:17;9877:6;9800:104;:::i;:::-;9623:288;;;;:::o;9917:248::-;10023:4;10061:2;10050:9;10046:18;10038:26;;10074:84;10155:1;10144:9;10140:17;10131:6;10074:84;:::i;:::-;9917:248;;;;:::o;10171:222::-;10264:4;10302:2;10291:9;10287:18;10279:26;;10315:71;10383:1;10372:9;10368:17;10359:6;10315:71;:::i;:::-;10171:222;;;;:::o;10399:442::-;10548:4;10586:2;10575:9;10571:18;10563:26;;10599:71;10667:1;10656:9;10652:17;10643:6;10599:71;:::i;:::-;10680:72;10748:2;10737:9;10733:18;10724:6;10680:72;:::i;:::-;10762;10830:2;10819:9;10815:18;10806:6;10762:72;:::i;:::-;10399:442;;;;;;:::o;10847:218::-;10938:4;10976:2;10965:9;10961:18;10953:26;;10989:69;11055:1;11044:9;11040:17;11031:6;10989:69;:::i;:::-;10847:218;;;;:::o;11071:129::-;11105:6;11132:20;;:::i;:::-;11122:30;;11161:33;11189:4;11181:6;11161:33;:::i;:::-;11071:129;;;:::o;11206:75::-;11239:6;11272:2;11266:9;11256:19;;11206:75;:::o;11287:311::-;11364:4;11454:18;11446:6;11443:30;11440:56;;;11476:18;;:::i;:::-;11440:56;11526:4;11518:6;11514:17;11506:25;;11586:4;11580;11576:15;11568:23;;11287:311;;;:::o;11604:307::-;11665:4;11755:18;11747:6;11744:30;11741:56;;;11777:18;;:::i;:::-;11741:56;11815:29;11837:6;11815:29;:::i;:::-;11807:37;;11899:4;11893;11889:15;11881:23;;11604:307;;;:::o;11917:98::-;11968:6;12002:5;11996:12;11986:22;;11917:98;;;:::o;12021:168::-;12104:11;12138:6;12133:3;12126:19;12178:4;12173:3;12169:14;12154:29;;12021:168;;;;:::o;12195:147::-;12296:11;12333:3;12318:18;;12195:147;;;;:::o;12348:191::-;12388:4;12408:20;12426:1;12408:20;:::i;:::-;12403:25;;12442:20;12460:1;12442:20;:::i;:::-;12437:25;;12481:1;12478;12475:8;12472:34;;;12486:18;;:::i;:::-;12472:34;12531:1;12528;12524:9;12516:17;;12348:191;;;;:::o;12545:96::-;12582:7;12611:24;12629:5;12611:24;:::i;:::-;12600:35;;12545:96;;;:::o;12647:104::-;12692:7;12721:24;12739:5;12721:24;:::i;:::-;12710:35;;12647:104;;;:::o;12757:90::-;12791:7;12834:5;12827:13;12820:21;12809:32;;12757:90;;;:::o;12853:77::-;12890:7;12919:5;12908:16;;12853:77;;;:::o;12936:141::-;12988:7;13017:5;13006:16;;13023:48;13065:5;13023:48;:::i;:::-;12936:141;;;:::o;13083:89::-;13119:7;13159:6;13152:5;13148:18;13137:29;;13083:89;;;:::o;13178:126::-;13215:7;13255:42;13248:5;13244:54;13233:65;;13178:126;;;:::o;13310:77::-;13347:7;13376:5;13365:16;;13310:77;;;:::o;13393:93::-;13429:7;13469:10;13462:5;13458:22;13447:33;;13393:93;;;:::o;13492:101::-;13528:7;13568:18;13561:5;13557:30;13546:41;;13492:101;;;:::o;13599:159::-;13682:9;13715:37;13746:5;13715:37;:::i;:::-;13702:50;;13599:159;;;:::o;13764:141::-;13827:9;13860:39;13893:5;13860:39;:::i;:::-;13847:52;;13764:141;;;:::o;13911:126::-;13961:9;13994:37;14025:5;13994:37;:::i;:::-;13981:50;;13911:126;;;:::o;14043:113::-;14093:9;14126:24;14144:5;14126:24;:::i;:::-;14113:37;;14043:113;;;:::o;14162:154::-;14246:6;14241:3;14236;14223:30;14308:1;14299:6;14294:3;14290:16;14283:27;14162:154;;;:::o;14322:307::-;14390:1;14400:113;14414:6;14411:1;14408:13;14400:113;;;14499:1;14494:3;14490:11;14484:18;14480:1;14475:3;14471:11;14464:39;14436:2;14433:1;14429:10;14424:15;;14400:113;;;14531:6;14528:1;14525:13;14522:101;;;14611:1;14602:6;14597:3;14593:16;14586:27;14522:101;14371:258;14322:307;;;:::o;14635:281::-;14718:27;14740:4;14718:27;:::i;:::-;14710:6;14706:40;14848:6;14836:10;14833:22;14812:18;14800:10;14797:34;14794:62;14791:88;;;14859:18;;:::i;:::-;14791:88;14899:10;14895:2;14888:22;14678:238;14635:281;;:::o;14922:176::-;14954:1;14971:20;14989:1;14971:20;:::i;:::-;14966:25;;15005:20;15023:1;15005:20;:::i;:::-;15000:25;;15044:1;15034:35;;15049:18;;:::i;:::-;15034:35;15090:1;15087;15083:9;15078:14;;14922:176;;;;:::o;15104:180::-;15152:77;15149:1;15142:88;15249:4;15246:1;15239:15;15273:4;15270:1;15263:15;15290:180;15338:77;15335:1;15328:88;15435:4;15432:1;15425:15;15459:4;15456:1;15449:15;15476:180;15524:77;15521:1;15514:88;15621:4;15618:1;15611:15;15645:4;15642:1;15635:15;15662:180;15710:77;15707:1;15700:88;15807:4;15804:1;15797:15;15831:4;15828:1;15821:15;15848:180;15896:77;15893:1;15886:88;15993:4;15990:1;15983:15;16017:4;16014:1;16007:15;16034:117;16143:1;16140;16133:12;16157:117;16266:1;16263;16256:12;16280:117;16389:1;16386;16379:12;16403:117;16512:1;16509;16502:12;16526:117;16635:1;16632;16625:12;16649:117;16758:1;16755;16748:12;16772:102;16813:6;16864:2;16860:7;16855:2;16848:5;16844:14;16840:28;16830:38;;16772:102;;;:::o;16880:114::-;;:::o;17000:120::-;17088:1;17081:5;17078:12;17068:46;;17094:18;;:::i;:::-;17068:46;17000:120;:::o;17126:122::-;17199:24;17217:5;17199:24;:::i;:::-;17192:5;17189:35;17179:63;;17238:1;17235;17228:12;17179:63;17126:122;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1136000","executionCost":"infinite","totalCost":"infinite"},"external":{"checkUpkeep(bytes)":"infinite","enterRaffle()":"infinite","getEntranceFee()":"infinite","getInterval()":"infinite","getLatestTimeStamp()":"2482","getNumWords()":"388","getNumberOfPlayers()":"2533","getPlayers(uint256)":"5056","getRaffleState()":"2614","getRecentWinner()":"2595","getRequestConfirmations()":"410","i_vrfCoordinator()":"infinite","performUpkeep(bytes)":"infinite","rawFulfillRandomWords(uint256,uint256[])":"infinite","s_players(uint256)":"5000"},"internal":{"fulfillRandomWords(uint256,uint256[] memory)":"infinite"}},"methodIdentifiers":{"checkUpkeep(bytes)":"6e04ff0d","enterRaffle()":"2cfcc539","getEntranceFee()":"09bc33a7","getInterval()":"91ad27b4","getLatestTimeStamp()":"320229eb","getNumWords()":"53a2c19a","getNumberOfPlayers()":"fd6673f5","getPlayers(uint256)":"460e2049","getRaffleState()":"115cbaf5","getRecentWinner()":"473f1ddc","getRequestConfirmations()":"5f1b0fd8","i_vrfCoordinator()":"aebc4550","performUpkeep(bytes)":"4585e33b","rawFulfillRandomWords(uint256,uint256[])":"1fe543e3","s_players(uint256)":"ae771f6b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vrfCoordinatorV2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"entranceFee\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasLane\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"interval\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlySimulatedBackend\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Raffle_BALANCETRANSFERFAILED\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"currentBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"players\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"raffleState\",\"type\":\"uint256\"}],\"name\":\"Raffle_UPKEEPNOTNEEDED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Raffle__NOTENOUGHETH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Raffle__RAFFLENOTOPEN\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"raffleEnter\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"theWinner\",\"type\":\"address\"}],\"name\":\"randomWinnerPicked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"requestedRaffleWinner\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enterRaffle\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEntranceFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumWords\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfPlayers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getPlayers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRaffleState\",\"outputs\":[{\"internalType\":\"enum Raffle.RaffleState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecentWinner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfirmations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_vrfCoordinator\",\"outputs\":[{\"internalType\":\"contract VRFCoordinatorV2Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_players\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Raffle.sol\":\"Raffle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract AutomationBase {\\n  error OnlySimulatedBackend();\\n\\n  /**\\n   * @notice method that allows it to be simulated via eth_call by checking that\\n   * the sender is the zero address.\\n   */\\n  function preventExecution() internal view {\\n    if (tx.origin != address(0)) {\\n      revert OnlySimulatedBackend();\\n    }\\n  }\\n\\n  /**\\n   * @notice modifier that allows it to be simulated via eth_call by checking\\n   * that the sender is the zero address.\\n   */\\n  modifier cannotExecute() {\\n    preventExecution();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x5d354afa1a97dffe66094397cdcbb0c14713cf3d609d88fd8f9891010e9a351a\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./AutomationBase.sol\\\";\\nimport \\\"./interfaces/AutomationCompatibleInterface.sol\\\";\\n\\nabstract contract AutomationCompatible is AutomationBase, AutomationCompatibleInterface {}\\n\",\"keccak256\":\"0x40e5ae0eff4edd0740c1b5590d09c344f84dee031e82d5294563e99603774f80\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AutomationCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig() external view returns (uint16, uint32, bytes32[] memory);\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(\\n    uint64 subId\\n  ) external view returns (uint96 balance, uint64 reqCount, address owner, address[] memory consumers);\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint64 subId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa9f8b7e09811f4ac9f421116b5d6bcf50b5748025c0cb012aaf5ff7c39a6b46a\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\"},\"contracts/Raffle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity  ^0.8.7;\\r\\nimport \\\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\\\";\\r\\n\\r\\n error Raffle__NOTENOUGHETH();\\r\\n error Raffle_BALANCETRANSFERFAILED();\\r\\n  error Raffle__RAFFLENOTOPEN();\\r\\n  error Raffle_UPKEEPNOTNEEDED(uint256 currentBalance, uint256 players, uint256 raffleState);\\r\\n  \\r\\n\\r\\ncontract Raffle is VRFConsumerBaseV2, AutomationCompatible{\\r\\n   // Type declaration\\r\\n    enum RaffleState {OPEN, CALCULATING }\\r\\n\\r\\n\\r\\n uint256 private  immutable i_entranceFee;\\r\\n address payable[] public s_players;\\r\\n VRFCoordinatorV2Interface public immutable i_vrfCoordinator;\\r\\n bytes32 private immutable i_gasLane;\\r\\n uint64 private immutable  i_subscriptionId;\\r\\n uint16 private constant REQUEST_CONFIRMATIONS = 3;\\r\\n uint32  private immutable i_callbackGasLimit;\\r\\n uint32 private constant NUM_WORDS =1;\\r\\n uint256 private s_lastTimeStamp;\\r\\n uint256 private immutable i_interval;\\r\\n RaffleState private s_raffleState;\\r\\n\\r\\n /*  events */\\r\\n  event raffleEnter(address indexed player);\\r\\n  event requestedRaffleWinner(uint256 indexed requestId);\\r\\n  event randomWinnerPicked(address indexed theWinner);\\r\\n  //state variables\\r\\n  address private s_recentWinner;\\r\\n\\r\\n constructor  (address vrfCoordinatorV2,  uint256 entranceFee,  bytes32 gasLane, uint64 subscriptionId, uint32 callbackGasLimit, uint256 interval ) VRFConsumerBaseV2(vrfCoordinatorV2) {\\r\\n    i_entranceFee = entranceFee;\\r\\n    i_vrfCoordinator  = VRFCoordinatorV2Interface(vrfCoordinatorV2);\\r\\n    i_gasLane = gasLane;\\r\\n    i_subscriptionId = subscriptionId;\\r\\n    i_callbackGasLimit = callbackGasLimit;\\r\\n    s_raffleState = RaffleState.OPEN;\\r\\n    s_lastTimeStamp = block.timestamp;\\r\\n    i_interval = interval;\\r\\n   \\r\\n\\r\\n}\\r\\n   function enterRaffle() public payable {\\r\\n    if(msg.value < i_entranceFee){\\r\\n       revert Raffle__NOTENOUGHETH(); \\r\\n    }\\r\\n    if (s_raffleState != RaffleState.OPEN) {\\r\\n      revert Raffle__RAFFLENOTOPEN();\\r\\n    } \\r\\n    s_players.push(payable(msg.sender));\\r\\n    emit raffleEnter(msg.sender);\\r\\n }\\r\\n function checkUpkeep(\\r\\n        bytes memory /* checkData */\\r\\n    )\\r\\n        public\\r\\n        view\\r\\n        override\\r\\n        returns (bool upkeepNeeded, bytes memory /* performData */)\\r\\n    {\\r\\n        bool isOpen =  (RaffleState.OPEN == s_raffleState);\\r\\n        bool hasPlayers  = s_players.length > 0;\\r\\n        bool hasBalance  =  address (this).balance > 0 ;\\r\\n        bool timeIsValid  = ((block.timestamp - s_lastTimeStamp) > i_interval );\\r\\n        upkeepNeeded = (isOpen && hasPlayers && hasBalance && timeIsValid);\\r\\n        return (upkeepNeeded, \\\"0x0\\\");\\r\\n    }\\r\\n\\r\\n  function performUpkeep(bytes calldata /* performData */) external override {\\r\\n  (bool upkeepNeeded, ) = checkUpkeep(\\\"\\\");\\r\\n  if (!upkeepNeeded) {\\r\\n        revert Raffle_UPKEEPNOTNEEDED(address(this).balance,\\r\\n                s_players.length,\\r\\n                uint256(s_raffleState));\\r\\n  }\\r\\n   s_raffleState = RaffleState.CALCULATING;\\r\\n      uint256 requestId =   i_vrfCoordinator.requestRandomWords(\\r\\n            i_gasLane,\\r\\n            i_subscriptionId,\\r\\n            REQUEST_CONFIRMATIONS,\\r\\n            i_callbackGasLimit,\\r\\n            NUM_WORDS\\r\\n        );\\r\\n        emit requestedRaffleWinner(requestId);\\r\\n        \\r\\n\\r\\n\\r\\n }\\r\\n function fulfillRandomWords(  uint256, /*_requestId*/ uint256[] memory _randomWords ) internal override{\\r\\n     uint256 indexOfWinner = _randomWords[0] % s_players.length;\\r\\n     address payable addressOfWinner  = s_players[indexOfWinner];\\r\\n     s_recentWinner = addressOfWinner;\\r\\n     s_players = new address payable[](0);\\r\\n     s_raffleState = RaffleState.OPEN;\\r\\n     s_lastTimeStamp =  block.timestamp;\\r\\n     \\r\\n       (bool success, ) = addressOfWinner.call{value: address(this).balance}(\\\"\\\");\\r\\n       if (!success) {\\r\\n         revert Raffle_BALANCETRANSFERFAILED();\\r\\n       } \\r\\n    emit randomWinnerPicked(addressOfWinner);\\r\\n }\\r\\n\\r\\n function getEntranceFee() public view returns(uint256) {\\r\\n    return i_entranceFee;\\r\\n }\\r\\n function getPlayers(uint256 index) public view returns(address) {\\r\\n    return s_players[index];\\r\\n }\\r\\n function getRecentWinner() public view returns (address) {\\r\\n   return s_recentWinner;\\r\\n }\\r\\n function getRaffleState() public view returns (RaffleState) {\\r\\n   return s_raffleState;\\r\\n }\\r\\n function getNumWords() public pure returns (uint32) {\\r\\n   return NUM_WORDS;\\r\\n }\\r\\n function getNumberOfPlayers () public view returns(uint256){\\r\\n   return s_players.length;\\r\\n }\\r\\n function getRequestConfirmations () public pure returns(uint256){\\r\\n   return REQUEST_CONFIRMATIONS;\\r\\n }\\r\\n function getInterval () public view returns(uint256){\\r\\n   return i_interval;\\r\\n }\\r\\n function getLatestTimeStamp() public view returns(uint256) {\\r\\n  return s_lastTimeStamp;\\r\\n }\\r\\n}\",\"keccak256\":\"0x26a9e913d603a27834e07d6a11a4c4987a13f7f15ce047dc9d3b7028021b7289\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":242,"contract":"contracts/Raffle.sol:Raffle","label":"s_players","offset":0,"slot":"0","type":"t_array(t_address_payable)dyn_storage"},{"astId":259,"contract":"contracts/Raffle.sol:Raffle","label":"s_lastTimeStamp","offset":0,"slot":"1","type":"t_uint256"},{"astId":264,"contract":"contracts/Raffle.sol:Raffle","label":"s_raffleState","offset":0,"slot":"2","type":"t_enum(RaffleState)237"},{"astId":278,"contract":"contracts/Raffle.sol:Raffle","label":"s_recentWinner","offset":1,"slot":"2","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_address_payable":{"encoding":"inplace","label":"address payable","numberOfBytes":"20"},"t_array(t_address_payable)dyn_storage":{"base":"t_address_payable","encoding":"dynamic_array","label":"address payable[]","numberOfBytes":"32"},"t_enum(RaffleState)237":{"encoding":"inplace","label":"enum Raffle.RaffleState","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}